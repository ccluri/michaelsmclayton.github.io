{"version":3,"sources":["../static/js/main.29dc5ff3.js","../webpack/bootstrap 04f8e27456a9ca4c5eff","../node_modules/react/index.js","../node_modules/object-assign/index.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../node_modules/webpack/buildin/global.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js","index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","App.js","components/BouncingBallsLogo.js","../node_modules/matter-js/build/matter.js","../node_modules/poly-decomp/src/index.js","registerServiceWorker.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","toObject","val","undefined","TypeError","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","target","source","from","symbols","to","arguments","length","key","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","this","_75","_83","_18","_38","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_47","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_71","done","value","reason","_44","g","Function","eval","e","window","invariant","condition","format","f","validateFormat","error","Error","args","argIndex","replace","framesToPop","emptyObject","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","enable","disable","enabled","options","onUnhandled","id","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","clearTimeout","timeout","setTimeout","stack","line","list","some","cls","ReferenceError","RangeError","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","callback","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","document","createTextNode","observe","characterData","data","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","Array","slice","remaining","race","values","normalizeName","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","support","iterable","Symbol","Headers","headers","append","isArray","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","type","rejected","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","DataView","isView","oldValue","has","thisArg","entries","clone","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2__App__","__WEBPACK_IMPORTED_MODULE_3__registerServiceWorker__","render","createElement","getElementById","D","encodeURIComponent","F","props","context","refs","updater","E","G","H","M","h","ref","K","L","children","defaultProps","$$typeof","t","_owner","J","current","N","escape","=",":","Q","P","pop","keyPrefix","func","count","R","S","u","T","C","U","V","W","q","O","k","r","for","v","w","x","y","z","A","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","setState","forceUpdate","I","isPureReactComponent","__self","__source","X","Children","toArray","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_defaultValue","_currentValue","_currentValue2","_changedBits","_changedBits2","Provider","Consumer","_context","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","default","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","aa","ia","_hasCaughtError","_caughtError","apply","ka","_hasRethrowError","_rethrowError","na","la","ma","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","za","currentTarget","ya","invokeGuardedCallbackAndCatchFirstError","Aa","concat","Ba","Da","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ea","Fa","Ha","stateNode","wa","disabled","Ia","Ca","rethrowCaughtError","Ja","Na","parentNode","tag","Oa","Pa","Ma","return","Ra","Sa","dispatchConfig","Ta","_targetInst","Ua","Va","Xa","Ya","Za","alternate","ab","eb","bb","db","lb","kb","canUseDOM","documentElement","mb","_fallbackText","_startText","nb","_root","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","rb","eventPool","sb","destructor","qb","getPooled","Db","vb","keyCode","Eb","detail","Gb","which","Cb","Ab","Hb","Fb","wb","ctrlKey","altKey","metaKey","char","zb","Nb","xa","Jb","restoreControlledState","Ob","Lb","Mb","Pb","Qb","Sb","Tb","Ub","Wb","Vb","Yb","nodeName","Xb","Zb","srcElement","correspondingUseElement","nodeType","$b","setAttribute","ac","bc","getOwnPropertyDescriptor","getValue","setValue","stopTracking","_valueTracker","cc","dc","checked","tc","sc","uc","displayName","pc","mc","ic","hc","kc","pendingProps","lc","jc","rc","qc","vc","_debugOwner","_debugSource","fileName","lineNumber","Ac","zc","xc","wc","Bc","acceptsBooleans","Cc","isNaN","attributeName","attributeNamespace","mustUseProperty","propertyName","Ec","Fc","removeAttribute","setAttributeNS","Gc","defaultChecked","defaultValue","_wrapperState","initialChecked","Hc","Ic","initialValue","controlled","Jc","Kc","Lc","Mc","ownerDocument","activeElement","Oc","Nc","change","Rc","Sc","Tc","Vc","Pc","detachEvent","Wc","Qc","Xc","attachEvent","Yc","Zc","$c","dd","getModifierState","cd","ed","jd","effectTag","kd","ld","child","sibling","md","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","Id","Hd","Ed","Kd","Ld","addEventListener","Md","Fd","Rd","Qd","Pd","Od","Sd","firstChild","Td","textContent","offset","nextSibling","Ud","contentEditable","ae","$d","Xd","da","start","selectionStart","end","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","ea","Wd","select","Yd","xe","ba","ye","ze","selected","defaultSelected","Ae","wasMultiple","multiple","Be","dangerouslySetInnerHTML","Ce","De","Ee","Ge","He","Ke","lastChild","nodeValue","Ne","style","Le","setProperty","Pe","Oe","Qe","is","Se","blur","focus","jb","Te","Fe","html","innerHTML","removeChild","createElementNS","Ue","Ve","Re","__html","Je","onClick","onclick","We","Xe","Ye","Ze","cf","autoFocus","df","hf","jf","mf","lf","kf","pf","qf","of","nf","rf","contextTypes","ha","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","sf","tf","uf","vf","getChildContext","wf","__reactInternalMemoizedMergedChildContext","xf","yf","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","zf","Af","Bf","Cf","Df","pendingChildren","implementation","Ef","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","pendingCommitExpirationTime","finishedWork","pendingContext","hydrate","remainingExpirationTime","firstBatch","nextScheduledRoot","Hf","If","isDisabled","supportsFiber","inject","Ff","onCommitFiberRoot","Gf","onCommitFiberUnmount","Jf","Kf","Mf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","Nf","Of","payload","Pf","Qf","Rf","Sf","Tf","Lf","Uf","Vf","Wf","Xf","ag","$f","Zf","Yf","bg","gg","cg","ig","fg","eg","dg","namespaceURI","tagName","jg","kg","lg","qg","shouldComponentUpdate","rg","state","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","pg","sg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","ug","_stringRef","vg","wg","Map","gc","tg","nc","Jd","delete","Cg","Dg","Eg","Bg","Ag","zg","Fg","Gg","Hg","Ig","yg","xg","Jg","Kg","ec","Lg","Mg","Qg","Rg","_reactInternalFiber","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","element","hidden","unstable_observedBits","Sg","Wg","Tg","Ug","appendChild","Vg","Xg","suppressReactErrorLogging","Yg","Zg","$g","componentWillUnmount","ah","bh","ch","insertBefore","dh","eh","fh","gh","componentDidCatch","hh","Set","add","componentStack","ih","jh","vh","qh","rh","sh","uh","wh","xh","yh","ph","lh","zh","mh","Ah","Bh","th","getDerivedStateFromCatch","og","Ch","mg","nh","ng","oh","Dh","Eh","Fh","Gh","ef","kh","Hh","Ih","Th","Kh","Lh","gf","ff","Uh","Jh","Qh","Vh","Wh","Xh","Yh","Ph","Mh","Zh","$h","Rh","_onComplete","Nh","Oh","ai","_expirationTime","_defer","af","rangeCount","Wa","bf","focusedElem","selectionRange","ja","mi","__reactInternalSnapshotBeforeUpdate","fa","Math","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","hg","oc","ca","wi","xi","Ng","Og","yi","yc","Pg","zi","timeRemaining","Sh","bi","ci","di","ei","fi","gi","hi","ii","ji","ki","findFiberByHostInstance","findHostInstanceByFiber","ni","oi","_callbacks","_next","_hasChildren","_didComplete","_children","pi","_didCommit","_onCommit","qi","_internalRoot","ri","si","hasAttribute","ti","_reactRootContainer","legacy_renderSubtreeIntoContainer","ui","invokeGuardedCallback","hasCaughtError","clearCaughtError","va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Ga","Ka","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","La","random","Qa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","$a","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","animationend","animationiteration","animationstart","transitionend","animation","transition","fb","gb","hb","ib","ob","pb","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","tb","ub","xb","documentMode","yb","Bb","beforeInput","compositionEnd","compositionStart","compositionUpdate","Ib","Kb","injectFiberControlledHostComponent","Rb","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","week","fc","Dc","tabIndex","Uc","ad","_isInputEventSupported","bd","Alt","Control","Meta","Shift","fd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","pointerId","width","height","pressure","tiltX","tiltY","pointerType","isPrimary","hd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","defaultView","parentWindow","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","repeat","locale","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Nd","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ce","requestAnimationFrame","de","ee","fe","ge","performance","he","ie","je","ke","le","me","ne","oe","pe","qe","re","se","didTimeout","ue","scheduledCallback","postMessage","te","timeoutTime","ve","prev","we","Infinity","mathml","svg","Ie","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Me","charAt","substring","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","$e","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","stringify","li","updateContainerAtExpirationTime","createContainer","updateContainer","flushRoot","requestWork","computeUniqueAsyncExpiration","batchedUpdates","unbatchedUpdates","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","flushControlled","flushSync","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","commit","unmount","createBatch","vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_interactiveUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Ai","Bi","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","getActiveElement","doc","shallowEqual","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","isNode","Node","_classCallCheck","instance","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_1__components_BouncingBallsLogo__","_createClass","defineProperties","descriptor","protoProps","staticProps","App","_Component","_this","getPrototypeOf","backgroundColor","randomColourPick","textColour","screenHeight","innerHeight","screenWidth","innerWidth","arrayOfColours","floor","display","border","alignItems","justifyContent","__WEBPACK_IMPORTED_MODULE_1_matter_js__","__WEBPACK_IMPORTED_MODULE_1_matter_js___default","decomp","BouncingBallsLogo","setup","Engine","Render","MouseConstraint","Mouse","World","Bodies","Composite","engine","world","gravity","pixelRatio","background","wireframes","run","mouse","canvas","mouseConstraint","constraint","stiffness","visible","checkAndUpdate","createNewObject","update","bodies","label","updateObjectAlpha","removeDeadObjects","xPosition","yPosition","circle","circleProperties","size","renderProperties","alpha","position","distanceFromXCenter","abs","distanceFromYCenter","xAlpha","yAlpha","remove","plotSVGs","combinedPaths","getSVGPositions","minAndMax","findMinAndMax","scaleWidth","scaleHeight","pathIndex","scaleSVGCoordinates","xHigh","yHigh","drawC","PI","createSVG","svgPath","pathLength","getTotalLength","svgPathCoordinates","prcnt","currentPoint","pt","getPointAtLength","svgPaths","getLowHighValues","path","low","high","currentValue","currentXDimensions","currentYDimensions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","innerStartingTheta","outerEndTheta","innerEndTheta","outerStartingTheta","surface","outerRadius","outerIncrement","outerTheta","currentX","cos","currentY","sin","newSVGPoint","createSVGPoint","innerRadius","innerIncrement","innerTheta","polygonObjects","polygonPositions","fromVertices","isStatic","barrierProperties","menuBox","padding","paddingRight","fontSize","fontFamily","textProperties","borderRadius","fontColour","verticalAlign","startingVelocity","startingAcceleration","restitution","friction","fillStyle","strokeStyle","lineWidth","newScale","marginTop","viewBox","transform","fill","stroke","require","code","1","_dereq_","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","nextId","plugin","angle","vertices","fromPath","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","sprite","xScale","yScale","xOffset","yOffset","_initProperties","nextGroup","isNonColliding","nextCategory","bounds","positionPrev","anglePrev","parent","rotate","axes","mass","inertia","defaultFillStyle","choose","max","settings","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","moment","centre","translate","autoHull","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","translation","rotation","point","dx","dy","scale","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","properties","mult","div","../core/Common","../core/Sleeping","../geometry/Axes","../geometry/Bounds","../geometry/Vector","../geometry/Vertices","../render/Render","2","Events","isModified","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","objects","trigger","addBody","addConstraint","addComposite","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","move","rebase","recursive","../core/Events","./Body","3","../constraint/Constraint","./Composite","4","Contact","vertex","normalImpulse","tangentImpulse","5","Detector","SAT","Pair","collisions","broadphasePairs","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","partB","previousCollision","pairId","pair","isActive","collision","collides","collided","filterA","filterB","./Pair","./SAT","6","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","row","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairKeys","./Detector","7","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","contactId","contact","depth","setActive","./Contact","Pairs","_pairMaxIdleLife","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","pairIndex","indexesToRemove","Query","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","../factory/Bodies","10","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","11","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","distance","vertexA","vertexB","nearestDistance","vertexToBody","bodyAPosition","Constraint","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","on","_triggerEvents","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","../body/Composite","../collision/Detector","../core/Mouse","./Constraint","14","_nextId","_seed","_nowStartTime","argsStart","deepClone","prop","begin","shuffle","array","temp","choices","isElement","HTMLElement","isFunction","isPlainObject","isString","webkitNow","_seededRandom","colorToNumber","colorString","parseInt","logLevel","log","info","haystack","needle","mapped","topologicalSort","graph","visited","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","chainPathAfter","_requireGlobal","globalName","moduleName","15","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","../body/Body","../body/World","../collision/Grid","../collision/Pairs","../collision/Resolver","./Common","./Events","./Metrics","./Sleeping","eventNames","names","off","callbacks","newCallbacks","eventClone","Matter","Plugin","uses","used","use","before","after","./Plugin","absolute","mousedownPosition","mouseupPosition","getAttribute","mousewheel","_getRelativeMousePosition","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","scrollX","pageXOffset","scrollY","pageYOffset","clientWidth","clientHeight","_registry","register","isPlugin","registered","pluginVersion","versionParse","registeredVersion","dependency","dependencyParse","install","isUsed","isFor","parsed","versionSatisfies","sortedDependencies","_warned","tracked","parsedBase","resolved","identifiers","isRange","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","21","Runner","_requestAnimationFrame","_cancelAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","runner","deltaMin","deltaMax","tick","stop","./Engine","22","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","23","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","verticesPath","roof","x1","x2","x3","maxSides","sides","ceil","polygon","theta","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","pav","pbv","magnitudeSquared","isInternal","24","Composites","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","car","wheelSize","wheelAOffset","wheelBOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","./Bodies","25","normalise","gradient","26","boundsA","boundsB","vector","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","lx","ly","points","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","_svgPathToAbsolute","pathSegList","numberOfItems","getItem","getPathSegAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","28","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","29","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","acos","sort","flag","upper","lower","30","RenderPixi","../collision/Contact","../collision/Pair","../collision/Query","../collision/SAT","../constraint/MouseConstraint","../core/Engine","../core/Matter","../core/Metrics","../core/Plugin","../core/Runner","../factory/Composites","../geometry/Svg","../render/RenderPixi","31","wireframeBackground","hasBounds","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","getContext","textures","setPixelRatio","loop","_getPixelRatio","lookAt","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","debugTimestamp","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","item","setLineDash","selectStart","selectBounds","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","antialias","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","lineInt","l1","l2","a1","b1","c1","a2","b2","c2","det","scalar_eq","lineSegmentsIntersect","p1","p2","q1","q2","triangleArea","isLeft","isLeftOn","isRight","isRightOn","collinear","thresholdAngle","tmpPoint1","tmpPoint2","magA","magB","sqdist","polygonAt","polygonClear","polygonAppend","poly","polygonMakeCCW","polygonReverse","tmp","polygonIsReflex","polygonCanSee","dist","tmpLine1","tmpLine2","polygonCanSee2","polygonCopy","targetPoly","polygonGetCutEdges","tmp1","tmp2","tmpPoly","nDiags","polygonDecomp","edges","polygonSlice","cutEdges","polys","cutEdge","polygonIsSimple","getIntersectionPoint","polygonQuickDecomp","reflexVertices","steinerPoints","maxlevel","level","upperInt","lowerInt","upperDist","lowerDist","closestDist","upperIndex","lowerIndex","closestIndex","lowerPoly","upperPoly","polygonRemoveCollinearPoints","num","polygonRemoveDuplicatePoints","points_eq","isSimple","removeDuplicatePoints","navigator","URL","origin","swUrl","isLocalhost","checkValidServiceWorker","serviceWorker","ready","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","catch","unregister","reload","Boolean","hostname"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,KAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQD,EAASH,GAEjC,YElEAI,GAAAD,QAAAH,EAAA,KF8EM,SAAUI,EAAQD,EAASH,GAEjC,YGvEA,SAAA2B,GAAAC,GACA,UAAAA,OAAAC,KAAAD,EACA,SAAAE,WAAA,wDAGA,OAAAhB,QAAAc,GATA,GAAAG,GAAAjB,OAAAiB,sBACAP,EAAAV,OAAAS,UAAAC,eACAQ,EAAAlB,OAAAS,UAAAU,oBAsDA7B,GAAAD,QA5CA,WACA,IACA,IAAAW,OAAAoB,OACA,QAMA,IAAAC,GAAA,GAAAC,QAAA,MAEA,IADAD,EAAA,QACA,MAAArB,OAAAuB,oBAAAF,GAAA,GACA,QAKA,QADAG,MACAjC,EAAA,EAAiBA,EAAA,GAAQA,IACzBiC,EAAA,IAAAF,OAAAG,aAAAlC,KAKA,mBAHAS,OAAAuB,oBAAAC,GAAAE,IAAA,SAAArB,GACA,MAAAmB,GAAAnB,KAEAsB,KAAA,IACA,QAIA,IAAAC,KAIA,OAHA,uBAAAC,MAAA,IAAAC,QAAA,SAAAC,GACAH,EAAAG,OAGA,yBADA/B,OAAAgC,KAAAhC,OAAAoB,UAAkCQ,IAAAD,KAAA,IAMhC,MAAAM,GAEF,aAIAjC,OAAAoB,OAAA,SAAAc,EAAAC,GAKA,OAJAC,GAEAC,EADAC,EAAAzB,EAAAqB,GAGAtB,EAAA,EAAgBA,EAAA2B,UAAAC,OAAsB5B,IAAA,CACtCwB,EAAApC,OAAAuC,UAAA3B,GAEA,QAAA6B,KAAAL,GACA1B,EAAAjB,KAAA2C,EAAAK,KACAH,EAAAG,GAAAL,EAAAK,GAIA,IAAAxB,EAAA,CACAoB,EAAApB,EAAAmB,EACA,QAAA7C,GAAA,EAAkBA,EAAA8C,EAAAG,OAAoBjD,IACtC2B,EAAAzB,KAAA2C,EAAAC,EAAA9C,MACA+C,EAAAD,EAAA9C,IAAA6C,EAAAC,EAAA9C,MAMA,MAAA+C,KH0FM,SAAUhD,EAAQD,EAASH,GAEjC,YIhLA,SAAAwD,MAqBA,QAAAC,GAAAC,GACA,IACA,MAAAA,GAAAC,KACG,MAAAC,GAEH,MADAC,GAAAD,EACAE,GAIA,QAAAC,GAAAC,EAAAC,GACA,IACA,MAAAD,GAAAC,GACG,MAAAL,GAEH,MADAC,GAAAD,EACAE,GAGA,QAAAI,GAAAF,EAAAC,EAAAE,GACA,IACAH,EAAAC,EAAAE,GACG,MAAAP,GAEH,MADAC,GAAAD,EACAE,GAMA,QAAAM,GAAAJ,GACA,oBAAAK,MACA,SAAAvC,WAAA,uCAEA,uBAAAkC,GACA,SAAAlC,WAAA,mDAEAuC,MAAAC,IAAA,EACAD,KAAAE,IAAA,EACAF,KAAAG,IAAA,KACAH,KAAAI,IAAA,KACAT,IAAAR,GACAkB,EAAAV,EAAAK,MAeA,QAAAM,GAAAC,EAAAC,EAAAC,GACA,UAAAF,GAAAG,YAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAd,GAAAZ,EACA0B,GAAAvB,KAAAqB,EAAAC,GACAE,EAAAP,EAAA,GAAAQ,GAAAP,EAAAC,EAAAI,MAGA,QAAAC,GAAAP,EAAAS,GACA,SAAAT,EAAAL,KACAK,IAAAJ,GAKA,IAHAJ,EAAAkB,KACAlB,EAAAkB,IAAAV,GAEA,IAAAA,EAAAL,IACA,WAAAK,EAAAN,KACAM,EAAAN,IAAA,OACAM,EAAAH,IAAAY,IAGA,IAAAT,EAAAN,KACAM,EAAAN,IAAA,OACAM,EAAAH,KAAAG,EAAAH,IAAAY,SAGAT,GAAAH,IAAAc,KAAAF,EAGAG,GAAAZ,EAAAS,GAGA,QAAAG,GAAAZ,EAAAS,GACAI,EAAA,WACA,GAAAC,GAAA,IAAAd,EAAAL,IAAAc,EAAAR,YAAAQ,EAAAP,UACA,WAAAY,EAMA,YALA,IAAAd,EAAAL,IACAS,EAAAK,EAAAM,QAAAf,EAAAJ,KAEAS,EAAAI,EAAAM,QAAAf,EAAAJ,KAIA,IAAAoB,GAAA7B,EAAA2B,EAAAd,EAAAJ,IACAoB,KAAA9B,EACAmB,EAAAI,EAAAM,QAAA9B,GAEAmB,EAAAK,EAAAM,QAAAC,KAIA,QAAAZ,GAAAJ,EAAAiB,GAEA,GAAAA,IAAAjB,EACA,MAAAK,GACAL,EACA,GAAA9C,WAAA,6CAGA,IACA+D,IACA,iBAAAA,IAAA,mBAAAA,IACA,CACA,GAAAlC,GAAAF,EAAAoC,EACA,IAAAlC,IAAAG,EACA,MAAAmB,GAAAL,EAAAf,EAEA,IACAF,IAAAiB,EAAAjB,MACAkC,YAAAzB,GAKA,MAHAQ,GAAAL,IAAA,EACAK,EAAAJ,IAAAqB,MACAC,GAAAlB,EAEK,uBAAAjB,GAEL,WADAe,GAAAf,EAAAoC,KAAAF,GAAAjB,GAIAA,EAAAL,IAAA,EACAK,EAAAJ,IAAAqB,EACAC,EAAAlB,GAGA,QAAAK,GAAAL,EAAAiB,GACAjB,EAAAL,IAAA,EACAK,EAAAJ,IAAAqB,EACAzB,EAAA4B,KACA5B,EAAA4B,IAAApB,EAAAiB,GAEAC,EAAAlB,GAEA,QAAAkB,GAAAlB,GAKA,GAJA,IAAAA,EAAAN,MACAa,EAAAP,IAAAH,KACAG,EAAAH,IAAA,MAEA,IAAAG,EAAAN,IAAA,CACA,OAAAjE,GAAA,EAAmBA,EAAAuE,EAAAH,IAAAnB,OAAqBjD,IACxC8E,EAAAP,IAAAH,IAAApE,GAEAuE,GAAAH,IAAA,MAIA,QAAAW,GAAAP,EAAAC,EAAAa,GACAtB,KAAAQ,YAAA,mBAAAA,KAAA,KACAR,KAAAS,WAAA,mBAAAA,KAAA,KACAT,KAAAsB,UASA,QAAAjB,GAAAV,EAAA2B,GACA,GAAAM,IAAA,EACAf,EAAAhB,EAAAF,EAAA,SAAAkC,GACAD,IACAA,GAAA,EACAjB,EAAAW,EAAAO,KACG,SAAAC,GACHF,IACAA,GAAA,EACAhB,EAAAU,EAAAQ,KAEAF,IAAAf,IAAApB,IACAmC,GAAA,EACAhB,EAAAU,EAAA9B,IAhNA,GAAA4B,GAAAzF,EAAA,IAqBA6D,EAAA,KACAC,IA2BA1D,GAAAD,QAAAiE,EAgBAA,EAAAkB,IAAA,KACAlB,EAAA4B,IAAA,KACA5B,EAAAgC,IAAA5C,EAEAY,EAAA7C,UAAAoC,KAAA,SAAAkB,EAAAC,GACA,GAAAT,KAAAU,cAAAX,EACA,MAAAO,GAAAN,KAAAQ,EAAAC,EAEA,IAAAI,GAAA,GAAAd,GAAAZ,EAEA,OADA2B,GAAAd,KAAA,GAAAe,GAAAP,EAAAC,EAAAI,IACAA,IJiUM,SAAU9E,EAAQD,GK9YxB,GAAAkG,EAGAA,GAAA,WACA,MAAAhC,QAGA,KAEAgC,KAAAC,SAAA,qBAAAC,MAAA,QACC,MAAAC,GAED,iBAAAC,UACAJ,EAAAI,QAOArG,EAAAD,QAAAkG,GLqZM,SAAUjG,EAAQD,EAASH,GAEjC,YM5YA,SAAA0G,GAAAC,EAAAC,EAAA3C,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,GAGA,GAFAC,EAAAF,IAEAD,EAAA,CACA,GAAAI,EACA,QAAAlF,KAAA+E,EACAG,EAAA,GAAAC,OAAA,qIACK,CACL,GAAAC,IAAAhD,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,GACAK,EAAA,CACAH,GAAA,GAAAC,OAAAJ,EAAAO,QAAA,iBACA,MAAAF,GAAAC,QAEAH,EAAApG,KAAA,sBAIA,KADAoG,GAAAK,YAAA,EACAL,GA3BA,GAAAD,GAAA,SAAAF,IA+BAxG,GAAAD,QAAAuG,GNgbM,SAAUtG,EAAQD,EAASH,GAEjC,YO5dA,IAAAqH,KAMAjH,GAAAD,QAAAkH,GP2eM,SAAUjH,EAAQD,EAASH,GAEjC,YQlfA,SAAAsH,GAAAC,GACA,kBACA,MAAAA,IASA,GAAAC,GAAA,YAEAA,GAAAC,YAAAH,EACAE,EAAAE,iBAAAJ,GAAA,GACAE,EAAAG,gBAAAL,GAAA,GACAE,EAAAI,gBAAAN,EAAA,MACAE,EAAAK,gBAAA,WACA,MAAAxD,OAEAmD,EAAAM,oBAAA,SAAAP,GACA,MAAAA,IAGAnH,EAAAD,QAAAqH,GRkgBM,SAAUpH,EAAQD,EAASH,GAEjCA,EAAoB,GACpBI,EAAOD,QAAUH,EAAoB,KAK/B,SAAUI,EAAQD,EAASH,GAEjC,YSriBA,qBAAAoE,WAIApE,EAAA,GAAA+H,SACAtB,OAAArC,QAAApE,EAAA,KAIAA,EAAA,IAIAc,OAAAoB,OAAAlC,EAAA,IT2jBM,SAAUI,EAAQD,EAASH,GAEjC,YUxkBA,SAAAgI,KACAC,GAAA,EACA7D,EAAAkB,IAAA,KACAlB,EAAA4B,IAAA,KAIA,QAAA+B,GAAAG,GAwCA,QAAAC,GAAAC,IAEAF,EAAAG,eACAC,EACAC,EAAAH,GAAArB,MACAmB,EAAAM,WAAAC,MAGAF,EAAAH,GAAAM,cACAR,EAAAC,aACAI,EAAAH,GAAAO,QAAA,EACAT,EAAAC,YACAI,EAAAH,GAAAM,UACAH,EAAAH,GAAArB,SAGAwB,EAAAH,GAAAO,QAAA,EACAC,EACAL,EAAAH,GAAAM,UACAH,EAAAH,GAAArB,SAKA,QAAA8B,GAAAT,GACAG,EAAAH,GAAAO,SACAT,EAAAW,UACAX,EAAAW,UAAAN,EAAAH,GAAAM,UAAAH,EAAAH,GAAArB,OACOwB,EAAAH,GAAAD,cACPW,QAAAC,KACA,kCAAAR,EAAAH,GAAAM,UAAA,MAEAI,QAAAC,KACA,gHACAR,EAAAH,GAAAM,UAAA,OAzEAR,QACAD,GAAAD,IACAC,GAAA,CACA,IAAAG,GAAA,EACAM,EAAA,EACAH,IACAnE,GAAAkB,IAAA,SAAAK,GAEA,IAAAA,EAAApB,KACAgE,EAAA5C,EAAAqD,OAEAT,EAAA5C,EAAAqD,KAAAL,OACAE,EAAAlD,EAAAqD,KAEAC,aAAAV,EAAA5C,EAAAqD,KAAAE,eAEAX,GAAA5C,EAAAqD,OAGA5E,EAAA4B,IAAA,SAAAL,EAAA5C,GACA,IAAA4C,EAAArB,MACAqB,EAAAqD,IAAAZ,IACAG,EAAA5C,EAAAqD,MACAN,UAAA,KACA3B,MAAAhE,EACAmG,QAAAC,WACAhB,EAAApC,KAAA,KAAAJ,EAAAqD,KAKAV,EAAAvF,EAAA0F,GACA,IACA,KAEAE,QAAA,KA6CA,QAAAC,GAAAR,EAAArB,GACA+B,QAAAC,KAAA,6CAAAX,EAAA,QACArB,MAAAqC,OAAArC,IAAA,IACApE,MAAA,MAAAC,QAAA,SAAAyG,GACAP,QAAAC,KAAA,KAAAM,KAIA,QAAAf,GAAAvB,EAAAuC,GACA,MAAAA,GAAAC,KAAA,SAAAC,GACA,MAAAzC,aAAAyC,KA5GA,GAAApF,GAAApE,EAAA,GAEAyI,GACAgB,eACA3H,UACA4H,YAGAzB,GAAA,CACA9H,GAAA6H,UAOA7H,EAAA4H,UVurBM,SAAU3H,EAAQD,EAASH,GAEjC,cAC4B,SAAS2J,GW/rBrC,QAAAC,GAAAC,GACAC,EAAAxG,SACAyG,IACAC,GAAA,GAGAF,IAAAxG,QAAAuG,EA0BA,QAAAI,KACA,KAAAC,EAAAJ,EAAAxG,QAAA,CACA,GAAA6G,GAAAD,CAUA,IAPAA,GAAA,EACAJ,EAAAK,GAAA5J,OAMA2J,EAAAE,EAAA,CAGA,OAAAC,GAAA,EAAAC,EAAAR,EAAAxG,OAAA4G,EAAgEG,EAAAC,EAAkBD,IAClFP,EAAAO,GAAAP,EAAAO,EAAAH,EAEAJ,GAAAxG,QAAA4G,EACAA,EAAA,GAGAJ,EAAAxG,OAAA,EACA4G,EAAA,EACAF,GAAA,EAyHA,QAAAO,GAAAC,GACA,kBAWA,QAAAC,KAGAxB,aAAAyB,GACAC,cAAAC,GACAJ,IAXA,GAAAE,GAAAvB,WAAAsB,EAAA,GAIAG,EAAAC,YAAAJ,EAAA,KA5LArK,EAAAD,QAAAyJ,CAUA,IAOAG,GAPAD,KAGAE,GAAA,EAQAE,EAAA,EAIAE,EAAA,KA6CAU,EAAA,oBAAAnB,KAAA/E,KACAmG,EAAAD,EAAAE,kBAAAF,EAAAG,sBAcAlB,GADA,mBAAAgB,GA2CA,SAAAP,GACA,GAAAU,GAAA,EACAC,EAAA,GAAAJ,GAAAP,GACAY,EAAAC,SAAAC,eAAA,GAEA,OADAH,GAAAI,QAAAH,GAA4BI,eAAA,IAC5B,WACAN,KACAE,EAAAK,KAAAP,IAjDAjB,GA8BAM,EAAAN,GAQAL,EAAAG,eAgFAH,EAAAW,6BXqtB6BhK,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,EAASH,GAEjC,YYj6BA,SAAA0L,GAAAxF,GACA,GAAAzE,GAAA,GAAA2C,KAAAgC,IAGA,OAFA3E,GAAA8C,IAAA,EACA9C,EAAA+C,IAAA0B,EACAzE,EAjBA,GAAA2C,GAAApE,EAAA,EAEAI,GAAAD,QAAAiE,CAIA,IAAAuH,GAAAD,GAAA,GACAE,EAAAF,GAAA,GACAG,EAAAH,EAAA,MACAI,EAAAJ,MAAA7J,IACAkK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GAQAtH,GAAAY,QAAA,SAAAkB,GACA,GAAAA,YAAA9B,GAAA,MAAA8B,EAEA,WAAAA,EAAA,MAAA2F,EACA,QAAAhK,KAAAqE,EAAA,MAAA4F,EACA,SAAA5F,EAAA,MAAAyF,EACA,SAAAzF,EAAA,MAAA0F,EACA,QAAA1F,EAAA,MAAA6F,EACA,SAAA7F,EAAA,MAAA8F,EAEA,qBAAA9F,IAAA,mBAAAA,GACA,IACA,GAAAvC,GAAAuC,EAAAvC,IACA,uBAAAA,GACA,UAAAS,GAAAT,EAAAoC,KAAAG,IAEK,MAAAtC,GACL,UAAAQ,GAAA,SAAAY,EAAAC,GACAA,EAAArB,KAIA,MAAA8H,GAAAxF,IAGA9B,EAAA6H,IAAA,SAAAC,GACA,GAAAjF,GAAAkF,MAAA5K,UAAA6K,MAAA7L,KAAA2L,EAEA,WAAA9H,GAAA,SAAAY,EAAAC,GAGA,QAAAC,GAAA7E,EAAAuB,GACA,GAAAA,IAAA,iBAAAA,IAAA,mBAAAA,IAAA,CACA,GAAAA,YAAAwC,IAAAxC,EAAA+B,OAAAS,EAAA7C,UAAAoC,KAAA,CACA,SAAA/B,EAAA2C,KACA3C,IAAA4C,GAEA,YAAA5C,EAAA2C,IAAAW,EAAA7E,EAAAuB,EAAA4C,MACA,IAAA5C,EAAA2C,KAAAU,EAAArD,EAAA4C,SACA5C,GAAA+B,KAAA,SAAA/B,GACAsD,EAAA7E,EAAAuB,IACWqD,IAGX,GAAAtB,GAAA/B,EAAA+B,IACA,uBAAAA,GAAA,CAKA,WAJA,IAAAS,GAAAT,EAAAoC,KAAAnE,IACA+B,KAAA,SAAA/B,GACAsD,EAAA7E,EAAAuB,IACaqD,IAKbgC,EAAA5G,GAAAuB,EACA,MAAAyK,GACArH,EAAAiC,GA3BA,OAAAA,EAAA3D,OAAA,MAAA0B,MA8BA,QA7BAqH,GAAApF,EAAA3D,OA6BAjD,EAAA,EAAmBA,EAAA4G,EAAA3D,OAAiBjD,IACpC6E,EAAA7E,EAAA4G,EAAA5G,OAKA+D,EAAAa,OAAA,SAAAiB,GACA,UAAA9B,GAAA,SAAAY,EAAAC,GACAA,EAAAiB,MAIA9B,EAAAkI,KAAA,SAAAC,GACA,UAAAnI,GAAA,SAAAY,EAAAC,GACAsH,EAAA3J,QAAA,SAAAsD,GACA9B,EAAAY,QAAAkB,GAAAvC,KAAAqB,EAAAC,QAOAb,EAAA7C,UAAA,eAAAuD,GACA,MAAAT,MAAAV,KAAA,KAAAmB,KZy7BM,SAAU1E,EAAQD,IaliCxB,SAAAyE,GACA,YA2CA,SAAA4H,GAAA7L,GAIA,GAHA,iBAAAA,KACAA,EAAAyB,OAAAzB,IAEA,6BAAA8L,KAAA9L,GACA,SAAAmB,WAAA,yCAEA,OAAAnB,GAAA+L,cAGA,QAAAC,GAAAzG,GAIA,MAHA,iBAAAA,KACAA,EAAA9D,OAAA8D,IAEAA,EAIA,QAAA0G,GAAAC,GACA,GAAAC,IACAC,KAAA,WACA,GAAA7G,GAAA2G,EAAAG,OACA,QAAgB/G,SAAApE,KAAAqE,YAUhB,OANA+G,GAAAC,WACAJ,EAAAK,OAAAL,UAAA,WACA,MAAAA,KAIAA,EAGA,QAAAM,GAAAC,GACAhJ,KAAA7B,OAEA6K,YAAAD,GACAC,EAAAzK,QAAA,SAAAsD,EAAAvF,GACA0D,KAAAiJ,OAAA3M,EAAAuF,IACO7B,MACF8H,MAAAoB,QAAAF,GACLA,EAAAzK,QAAA,SAAA4K,GACAnJ,KAAAiJ,OAAAE,EAAA,GAAAA,EAAA,KACOnJ,MACFgJ,GACLvM,OAAAuB,oBAAAgL,GAAAzK,QAAA,SAAAjC,GACA0D,KAAAiJ,OAAA3M,EAAA0M,EAAA1M,KACO0D,MA0DP,QAAAoJ,GAAAC,GACA,GAAAA,EAAAC,SACA,MAAAvJ,SAAAa,OAAA,GAAAnD,WAAA,gBAEA4L,GAAAC,UAAA,EAGA,QAAAC,GAAAC,GACA,UAAAzJ,SAAA,SAAAY,EAAAC,GACA4I,EAAAC,OAAA,WACA9I,EAAA6I,EAAAE,SAEAF,EAAAG,QAAA,WACA/I,EAAA4I,EAAA9G,UAKA,QAAAkH,GAAAC,GACA,GAAAL,GAAA,GAAAM,YACAxI,EAAAiI,EAAAC,EAEA,OADAA,GAAAO,kBAAAF,GACAvI,EAGA,QAAA0I,GAAAH,GACA,GAAAL,GAAA,GAAAM,YACAxI,EAAAiI,EAAAC,EAEA,OADAA,GAAAS,WAAAJ,GACAvI,EAGA,QAAA4I,GAAAC,GAIA,OAHAC,GAAA,GAAAC,YAAAF,GACAG,EAAA,GAAAxC,OAAAsC,EAAAnL,QAEAjD,EAAA,EAAmBA,EAAAoO,EAAAnL,OAAiBjD,IACpCsO,EAAAtO,GAAA+B,OAAAG,aAAAkM,EAAApO,GAEA,OAAAsO,GAAAlM,KAAA,IAGA,QAAAmM,GAAAJ,GACA,GAAAA,EAAApC,MACA,MAAAoC,GAAApC,MAAA,EAEA,IAAAqC,GAAA,GAAAC,YAAAF,EAAAK,WAEA,OADAJ,GAAAK,IAAA,GAAAJ,YAAAF,IACAC,EAAAM,OAIA,QAAAC,KA0FA,MAzFA3K,MAAAsJ,UAAA,EAEAtJ,KAAA4K,UAAA,SAAAvB,GAEA,GADArJ,KAAA6K,UAAAxB,EACAA,EAEO,oBAAAA,GACPrJ,KAAA8K,UAAAzB,MACO,IAAAT,EAAAiB,MAAAkB,KAAA7N,UAAA8N,cAAA3B,GACPrJ,KAAAiL,UAAA5B,MACO,IAAAT,EAAAsC,UAAAC,SAAAjO,UAAA8N,cAAA3B,GACPrJ,KAAAoL,cAAA/B,MACO,IAAAT,EAAAyC,cAAAC,gBAAApO,UAAA8N,cAAA3B,GACPrJ,KAAA8K,UAAAzB,EAAAkC,eACO,IAAA3C,EAAA4C,aAAA5C,EAAAiB,MAAA4B,EAAApC,GACPrJ,KAAA0L,iBAAAnB,EAAAlB,EAAAqB,QAEA1K,KAAA6K,UAAA,GAAAE,OAAA/K,KAAA0L,uBACO,KAAA9C,EAAA4C,cAAAG,YAAAzO,UAAA8N,cAAA3B,KAAAuC,EAAAvC,GAGP,SAAA1G,OAAA,4BAFA3C,MAAA0L,iBAAAnB,EAAAlB,OAdArJ,MAAA8K,UAAA,EAmBA9K,MAAAgJ,QAAAnM,IAAA,kBACA,iBAAAwM,GACArJ,KAAAgJ,QAAAyB,IAAA,2CACSzK,KAAAiL,WAAAjL,KAAAiL,UAAAY,KACT7L,KAAAgJ,QAAAyB,IAAA,eAAAzK,KAAAiL,UAAAY,MACSjD,EAAAyC,cAAAC,gBAAApO,UAAA8N,cAAA3B,IACTrJ,KAAAgJ,QAAAyB,IAAA,oEAKA7B,EAAAiB,OACA7J,KAAA6J,KAAA,WACA,GAAAiC,GAAA1C,EAAApJ,KACA,IAAA8L,EACA,MAAAA,EAGA,IAAA9L,KAAAiL,UACA,MAAAlL,SAAAY,QAAAX,KAAAiL,UACS,IAAAjL,KAAA0L,iBACT,MAAA3L,SAAAY,QAAA,GAAAoK,OAAA/K,KAAA0L,mBACS,IAAA1L,KAAAoL,cACT,SAAAzI,OAAA,uCAEA,OAAA5C,SAAAY,QAAA,GAAAoK,OAAA/K,KAAA8K,cAIA9K,KAAAwL,YAAA,WACA,MAAAxL,MAAA0L,iBACAtC,EAAApJ,OAAAD,QAAAY,QAAAX,KAAA0L,kBAEA1L,KAAA6J,OAAAvK,KAAAsK,KAKA5J,KAAA+L,KAAA,WACA,GAAAD,GAAA1C,EAAApJ,KACA,IAAA8L,EACA,MAAAA,EAGA,IAAA9L,KAAAiL,UACA,MAAAjB,GAAAhK,KAAAiL,UACO,IAAAjL,KAAA0L,iBACP,MAAA3L,SAAAY,QAAAuJ,EAAAlK,KAAA0L,kBACO,IAAA1L,KAAAoL,cACP,SAAAzI,OAAA,uCAEA,OAAA5C,SAAAY,QAAAX,KAAA8K,YAIAlC,EAAAsC,WACAlL,KAAAkL,SAAA,WACA,MAAAlL,MAAA+L,OAAAzM,KAAA0M,KAIAhM,KAAAiM,KAAA,WACA,MAAAjM,MAAA+L,OAAAzM,KAAA4M,KAAAC,QAGAnM,KAMA,QAAAoM,GAAAC,GACA,GAAAC,GAAAD,EAAAE,aACA,OAAAC,GAAAC,QAAAH,IAAA,EAAAA,EAAAD,EAGA,QAAAK,GAAAC,EAAA9I,GACAA,OACA,IAAAwF,GAAAxF,EAAAwF,IAEA,IAAAsD,YAAAD,GAAA,CACA,GAAAC,EAAArD,SACA,SAAA7L,WAAA,eAEAuC,MAAA4M,IAAAD,EAAAC,IACA5M,KAAA6M,YAAAF,EAAAE,YACAhJ,EAAAmF,UACAhJ,KAAAgJ,QAAA,GAAAD,GAAA4D,EAAA3D,UAEAhJ,KAAAqM,OAAAM,EAAAN,OACArM,KAAA8M,KAAAH,EAAAG,KACAzD,GAAA,MAAAsD,EAAA9B,YACAxB,EAAAsD,EAAA9B,UACA8B,EAAArD,UAAA,OAGAtJ,MAAA4M,IAAA7O,OAAA4O,EAWA,IARA3M,KAAA6M,YAAAhJ,EAAAgJ,aAAA7M,KAAA6M,aAAA,QACAhJ,EAAAmF,SAAAhJ,KAAAgJ,UACAhJ,KAAAgJ,QAAA,GAAAD,GAAAlF,EAAAmF,UAEAhJ,KAAAqM,OAAAD,EAAAvI,EAAAwI,QAAArM,KAAAqM,QAAA,OACArM,KAAA8M,KAAAjJ,EAAAiJ,MAAA9M,KAAA8M,MAAA,KACA9M,KAAA+M,SAAA,MAEA,QAAA/M,KAAAqM,QAAA,SAAArM,KAAAqM,SAAAhD,EACA,SAAA5L,WAAA,4CAEAuC,MAAA4K,UAAAvB,GAOA,QAAA2C,GAAA3C,GACA,GAAA2D,GAAA,GAAA7B,SASA,OARA9B,GAAA4D,OAAA3O,MAAA,KAAAC,QAAA,SAAA2O,GACA,GAAAA,EAAA,CACA,GAAA5O,GAAA4O,EAAA5O,MAAA,KACAhC,EAAAgC,EAAAqK,QAAA7F,QAAA,WACAjB,EAAAvD,EAAAF,KAAA,KAAA0E,QAAA,UACAkK,GAAA/D,OAAAkE,mBAAA7Q,GAAA6Q,mBAAAtL,OAGAmL,EAGA,QAAAI,GAAAC,GACA,GAAArE,GAAA,GAAAD,EASA,OARAsE,GAAA/O,MAAA,SAAAC,QAAA,SAAAyG,GACA,GAAAsI,GAAAtI,EAAA1G,MAAA,KACAY,EAAAoO,EAAA3E,QAAAsE,MACA,IAAA/N,EAAA,CACA,GAAA2C,GAAAyL,EAAAlP,KAAA,KAAA6O,MACAjE,GAAAC,OAAA/J,EAAA2C,MAGAmH,EAKA,QAAAuE,GAAAC,EAAA3J,GACAA,IACAA,MAGA7D,KAAA6L,KAAA,UACA7L,KAAAyN,OAAA,UAAA5J,KAAA4J,OAAA,IACAzN,KAAA0N,GAAA1N,KAAAyN,QAAA,KAAAzN,KAAAyN,OAAA,IACAzN,KAAA2N,WAAA,cAAA9J,KAAA8J,WAAA,KACA3N,KAAAgJ,QAAA,GAAAD,GAAAlF,EAAAmF,SACAhJ,KAAA4M,IAAA/I,EAAA+I,KAAA,GACA5M,KAAA4K,UAAA4C,GA7XA,IAAAjN,EAAAqN,MAAA,CAIA,GAAAhF,IACAyC,aAAA,mBAAA9K,GACAsI,SAAA,UAAAtI,IAAA,YAAAuI,QACAe,KAAA,cAAAtJ,IAAA,QAAAA,IAAA,WACA,IAEA,MADA,IAAAwK,OACA,EACO,MAAA5I,GACP,aAGA+I,SAAA,YAAA3K,GACAiL,YAAA,eAAAjL,GAGA,IAAAqI,EAAA4C,YACA,GAAAqC,IACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGApC,EAAA,SAAApM,GACA,MAAAA,IAAAyO,SAAA5Q,UAAA8N,cAAA3L,IAGAuM,EAAAD,YAAAoC,QAAA,SAAA1O,GACA,MAAAA,IAAAwO,EAAApB,QAAAhQ,OAAAS,UAAAqO,SAAArP,KAAAmD,KAAA,EAyDA0J,GAAA7L,UAAA+L,OAAA,SAAA3M,EAAAuF,GACAvF,EAAA6L,EAAA7L,GACAuF,EAAAyG,EAAAzG,EACA,IAAAmM,GAAAhO,KAAA7B,IAAA7B,EACA0D,MAAA7B,IAAA7B,GAAA0R,IAAA,IAAAnM,KAGAkH,EAAA7L,UAAA,gBAAAZ,SACA0D,MAAA7B,IAAAgK,EAAA7L,KAGAyM,EAAA7L,UAAAL,IAAA,SAAAP,GAEA,MADAA,GAAA6L,EAAA7L,GACA0D,KAAAiO,IAAA3R,GAAA0D,KAAA7B,IAAA7B,GAAA,MAGAyM,EAAA7L,UAAA+Q,IAAA,SAAA3R,GACA,MAAA0D,MAAA7B,IAAAhB,eAAAgL,EAAA7L,KAGAyM,EAAA7L,UAAAuN,IAAA,SAAAnO,EAAAuF,GACA7B,KAAA7B,IAAAgK,EAAA7L,IAAAgM,EAAAzG,IAGAkH,EAAA7L,UAAAqB,QAAA,SAAA4H,EAAA+H,GACA,OAAA5R,KAAA0D,MAAA7B,IACA6B,KAAA7B,IAAAhB,eAAAb,IACA6J,EAAAjK,KAAAgS,EAAAlO,KAAA7B,IAAA7B,KAAA0D,OAKA+I,EAAA7L,UAAAuB,KAAA,WACA,GAAA+J,KAEA,OADAxI,MAAAzB,QAAA,SAAAsD,EAAAvF,GAAwCkM,EAAAtH,KAAA5E,KACxCiM,EAAAC,IAGAO,EAAA7L,UAAAgL,OAAA,WACA,GAAAM,KAEA,OADAxI,MAAAzB,QAAA,SAAAsD,GAAkC2G,EAAAtH,KAAAW,KAClC0G,EAAAC,IAGAO,EAAA7L,UAAAiR,QAAA,WACA,GAAA3F,KAEA,OADAxI,MAAAzB,QAAA,SAAAsD,EAAAvF,GAAwCkM,EAAAtH,MAAA5E,EAAAuF,MACxC0G,EAAAC,IAGAI,EAAAC,WACAE,EAAA7L,UAAA4L,OAAAL,UAAAM,EAAA7L,UAAAiR,QAqJA,IAAA3B,IAAA,6CA4CAE,GAAAxP,UAAAkR,MAAA,WACA,UAAA1B,GAAA1M,MAA8BqJ,KAAArJ,KAAA6K,aA6B9BF,EAAAzO,KAAAwQ,EAAAxP,WAgBAyN,EAAAzO,KAAAqR,EAAArQ,WAEAqQ,EAAArQ,UAAAkR,MAAA,WACA,UAAAb,GAAAvN,KAAA6K,WACA4C,OAAAzN,KAAAyN,OACAE,WAAA3N,KAAA2N,WACA3E,QAAA,GAAAD,GAAA/I,KAAAgJ,SACA4D,IAAA5M,KAAA4M,OAIAW,EAAA7K,MAAA,WACA,GAAA2L,GAAA,GAAAd,GAAA,MAAuCE,OAAA,EAAAE,WAAA,IAEvC,OADAU,GAAAxC,KAAA,QACAwC,EAGA,IAAAC,IAAA,oBAEAf,GAAAgB,SAAA,SAAA3B,EAAAa,GACA,QAAAa,EAAA7B,QAAAgB,GACA,SAAApI,YAAA,sBAGA,WAAAkI,GAAA,MAA+BE,SAAAzE,SAA0BwF,SAAA5B,MAGzDrM,EAAAwI,UACAxI,EAAAmM,UACAnM,EAAAgN,WAEAhN,EAAAqN,MAAA,SAAAjB,EAAA8B,GACA,UAAA1O,SAAA,SAAAY,EAAAC,GACA,GAAA8N,GAAA,GAAAhC,GAAAC,EAAA8B,GACAE,EAAA,GAAAC,eAEAD,GAAAlF,OAAA,WACA,GAAA5F,IACA4J,OAAAkB,EAAAlB,OACAE,WAAAgB,EAAAhB,WACA3E,QAAAoE,EAAAuB,EAAAE,yBAAA,IAEAhL,GAAA+I,IAAA,eAAA+B,KAAAG,YAAAjL,EAAAmF,QAAAnM,IAAA,gBACA,IAAAwM,GAAA,YAAAsF,KAAAN,SAAAM,EAAAI,YACApO,GAAA,GAAA4M,GAAAlE,EAAAxF,KAGA8K,EAAAhF,QAAA,WACA/I,EAAA,GAAAnD,WAAA,4BAGAkR,EAAAK,UAAA,WACApO,EAAA,GAAAnD,WAAA,4BAGAkR,EAAAM,KAAAP,EAAArC,OAAAqC,EAAA9B,KAAA,GAEA,YAAA8B,EAAA7B,cACA8B,EAAAO,iBAAA,GAGA,gBAAAP,IAAA/F,EAAAiB,OACA8E,EAAAQ,aAAA,QAGAT,EAAA1F,QAAAzK,QAAA,SAAAsD,EAAAvF,GACAqS,EAAAS,iBAAA9S,EAAAuF,KAGA8M,EAAAU,KAAA,oBAAAX,GAAA7D,UAAA,KAAA6D,EAAA7D,cAGAtK,EAAAqN,MAAA0B,UAAA,IACC,oBAAA/O,WAAAP,ObyiCK,SAAUjE,EAAQwT,EAAqB5T,GAE7C,YACAc,QAAOC,eAAe6S,EAAqB,cAAgB1N,OAAO,GAC7C,IAAI2N,GAAsC7T,EAAoB,GAC1D8T,EAA8C9T,EAAoBmB,EAAE0S,GACpEE,EAA0C/T,EAAoB,IAC9DgU,EAAkDhU,EAAoBmB,EAAE4S,GACxEE,EAAqCjU,EAAoB,IACzDkU,EAAuDlU,EAAoB,Gc1/CpGgU,GAAA/P,EAASkQ,OAAOL,EAAA7P,EAAAmQ,cAACH,EAAA,EAAD,MAAS5I,SAASgJ,eAAe,SACjDvT,OAAAoT,EAAA,Md8/CM,SAAU9T,EAAQD,EAASH,GAEjC,Ye3/CyH,SAAAsU,GAAArQ,GAAc,OAAAE,GAAAd,UAAAC,OAAA,EAAAkD,EAAA,yDAAAvC,EAAAxD,EAAA,EAA8FA,EAAA0D,EAAI1D,IAAA+F,GAAA,WAAA+N,mBAAAlR,UAAA5C,EAAA,GAAqDU,IAAA,2BAAA8C,EAAA,4HAAkCuC,GAC3L,QAAAgO,GAAAvQ,EAAAE,EAAAqC,GAAkBnC,KAAAoQ,MAAAxQ,EAAaI,KAAAqQ,QAAAvQ,EAAeE,KAAAsQ,KAAAlT,EAAY4C,KAAAuQ,QAAApO,GAAAqO,EAAsS,QAAAC,MAC7c,QAAAC,GAAA9Q,EAAAE,EAAAqC,GAAkBnC,KAAAoQ,MAAAxQ,EAAaI,KAAAqQ,QAAAvQ,EAAeE,KAAAsQ,KAAAlT,EAAY4C,KAAAuQ,QAAApO,GAAAqO,EAClF,QAAAG,GAAA/Q,EAAAE,EAAAqC,GAAkB,GAAA/F,OAAA,GAAAC,KAAiB2F,EAAA,KAAA4O,EAAA,IAAe,UAAA9Q,EAAA,IAAA1D,SAAA,KAAA0D,EAAA+Q,MAAAD,EAAA9Q,EAAA+Q,SAAA,KAAA/Q,EAAAZ,MAAA8C,EAAA,GAAAlC,EAAAZ,KAAAY,EAAAgR,EAAA5U,KAAA4D,EAAA1D,KAAA2U,EAAA5T,eAAAf,KAAAC,EAAAD,GAAA0D,EAAA1D,GAA4H,IAAAoG,GAAAxD,UAAAC,OAAA,CAAyB,QAAAuD,EAAAnG,EAAA2U,SAAA7O,MAAsB,MAAAK,EAAA,CAAa,OAAAvG,GAAA6L,MAAAtF,GAAArG,EAAA,EAAuBA,EAAAqG,EAAIrG,IAAAF,EAAAE,GAAA6C,UAAA7C,EAAA,EAAwBE,GAAA2U,SAAA/U,EAAa,GAAA2D,KAAAqR,aAAA,IAAA7U,IAAAoG,GAAA5C,EAAAqR,iBAAA,KAAA5U,EAAAD,KAAAC,EAAAD,GAAAoG,EAAApG,GAA4E,QAAO8U,SAAAC,EAAAtF,KAAAjM,EAAAV,IAAA8C,EAAA6O,IAAAD,EAAAR,MAAA/T,EAAA+U,OAAAC,EAAAC,SAC7X,QAAAC,GAAA3R,GAAc,uBAAAA,IAAA,OAAAA,KAAAsR,WAAAC,EAAoD,QAAAK,GAAA5R,GAAmB,GAAAE,IAAO2R,IAAA,KAAAC,IAAA,KAAmB,eAAA9R,GAAAkD,QAAA,iBAAAlD,GAA6C,MAAAE,GAAAF,KAAgC,QAAA+R,GAAA/R,EAAAE,EAAAqC,EAAA/F,GAAoB,GAAAwV,EAAA3S,OAAA,CAAa,GAAA5C,GAAAuV,EAAAC,KAAsE,OAAxDxV,GAAAqN,OAAA9J,EAAWvD,EAAAyV,UAAAhS,EAAczD,EAAA0V,KAAA5P,EAAS9F,EAAAgU,QAAAjU,EAAYC,EAAA2V,MAAA,EAAU3V,EAAS,OAAOqN,OAAA9J,EAAAkS,UAAAhS,EAAAiS,KAAA5P,EAAAkO,QAAAjU,EAAA4V,MAAA,GAA+C,QAAAC,GAAArS,GAAcA,EAAA8J,OAAA,KAAc9J,EAAAkS,UAAA,KAAiBlS,EAAAmS,KAAA,KAAYnS,EAAAyQ,QAAA,KAAezQ,EAAAoS,MAAA,EAAU,GAAAJ,EAAA3S,QAAA2S,EAAA1Q,KAAAtB,GACpb,QAAAsS,GAAAtS,EAAAE,EAAAqC,EAAA/F,GAAoB,GAAAC,SAAAuD,EAAe,eAAAvD,GAAA,YAAAA,IAAAuD,EAAA,KAAyC,IAAAoC,IAAA,CAAS,WAAApC,EAAAoC,GAAA,MAAiB,QAAA3F,GAAe,0BAAA2F,GAAA,CAAiC,MAAM,qBAAApC,EAAAsR,UAAiC,IAAAC,GAAA,IAAAgB,GAAAnQ,GAAA,GAAoB,GAAAA,EAAA,MAAAG,GAAA/F,EAAAwD,EAAA,KAAAE,EAAA,IAAAsS,EAAAxS,EAAA,GAAAE,GAAA,CAAgE,IAAvBkC,EAAA,EAAIlC,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAmBgI,MAAAoB,QAAAtJ,GAAA,OAAAgR,GAAA,EAAgCA,EAAAhR,EAAAX,OAAW2R,IAAA,CAAKvU,EAAAuD,EAAAgR,EAAO,IAAApO,GAAA1C,EAAAsS,EAAA/V,EAAAuU,EAAe5O,IAAAkQ,EAAA7V,EAAAmG,EAAAL,EAAA/F,OAAc,WAAAwD,GAAA,oBAAAA,GAAA4C,EAAA,MAAAA,EAAA6P,GAAAzS,EAAAyS,IAAAzS,EAAA,cAAA4C,EAAA,mBAAAA,KAAA,yBAAAA,GAAA,IAAA5C,EAAA4C,EAAAtG,KAAA0D,GACrWgR,EAAA,IAAIvU,EAAAuD,EAAA8I,QAAA9G,MAAmBvF,IAAAwF,MAAAW,EAAA1C,EAAAsS,EAAA/V,EAAAuU,KAAA5O,GAAAkQ,EAAA7V,EAAAmG,EAAAL,EAAA/F,OAAsC,WAAAC,IAAA8F,EAAA,GAAAvC,EAAAqQ,EAAA,yBAAA9N,EAAA,qBAA0E1F,OAAAgC,KAAAmB,GAAAxB,KAAA,UAA8B+D,EAAA,IAAS,OAAAH,GAAS,QAAAoQ,GAAAxS,EAAAE,GAAgB,uBAAAF,IAAA,OAAAA,GAAA,MAAAA,EAAAV,IAAAsS,EAAA5R,EAAAV,KAAAY,EAAAyL,SAAA,IAA8E,QAAA+G,GAAA1S,EAAAE,GAAgBF,EAAAmS,KAAA7V,KAAA0D,EAAAyQ,QAAAvQ,EAAAF,EAAAoS,SACrS,QAAAO,GAAA3S,EAAAE,EAAAqC,GAAkB,GAAA/F,GAAAwD,EAAA8J,OAAArN,EAAAuD,EAAAkS,SAA6BlS,KAAAmS,KAAA7V,KAAA0D,EAAAyQ,QAAAvQ,EAAAF,EAAAoS,SAAqClK,MAAAoB,QAAAtJ,GAAA4S,EAAA5S,EAAAxD,EAAA+F,EAAAsQ,EAAAhP,qBAAA,MAAA7D,IAAA2R,EAAA3R,KAAAE,EAAAzD,IAAAuD,EAAAV,KAAAY,KAAAZ,MAAAU,EAAAV,IAAA,OAAAU,EAAAV,KAAA4D,QAAA4P,EAAA,YAAAvQ,EAAAvC,GAAwIsR,SAAAC,EAAAtF,KAAAjM,EAAAiM,KAAA3M,IAAAY,EAAA+Q,IAAAjR,EAAAiR,IAAAT,MAAAxQ,EAAAwQ,MAAAgB,OAAAxR,EAAAwR,SAAqEhV,EAAA8E,KAAAtB,IAAa,QAAA4S,GAAA5S,EAAAE,EAAAqC,EAAA/F,EAAAC,GAAsB,GAAA2F,GAAA,EAAS,OAAAG,IAAAH,GAAA,GAAAG,GAAAW,QAAA4P,EAAA,YAAyC5S,EAAA6R,EAAA7R,EAAAkC,EAAA5F,EAAAC,GAAa,MAAAuD,GAAAsS,EAAAtS,EAAA,GAAA2S,EAAAzS,GAAqBmS,EAAAnS,GAR3Y,GAAA6S,GAAAhX,EAAA,GAAAmB,EAAAnB,EAAA,GAAAyB,EAAAzB,EAAA,GAAA8W,EAAA9W,EAAA,GAAAiX,EAAA,mBAAA9J,gBAAA+J,IAAA1B,EAAAyB,EAAA9J,OAAA+J,IAAA,uBAAAV,EAAAS,EAAA9J,OAAA+J,IAAA,sBAAAC,EAAAF,EAAA9J,OAAA+J,IAAA,wBAAAE,EAAAH,EAAA9J,OAAA+J,IAAA,2BAAAG,EAAAJ,EAAA9J,OAAA+J,IAAA,wBAAAI,EAAAL,EAAA9J,OAAA+J,IAAA,wBAAAK,EAAAN,EAAA9J,OAAA+J,IAAA,uBAAAM,EAAAP,EAAA9J,OAAA+J,IAAA,0BAAAO,EACbR,EAAA9J,OAAA+J,IAAA,0BAAwCD,IAAA9J,OAAA+J,IAAA,gBAA+B,IAAAR,GAAA,mBAAAvJ,gBAAAL,SACvE+H,GAAO6C,UAAA,WAAqB,UAASC,mBAAA,aAAgCC,oBAAA,aAAiCC,gBAAA,aAA2GrD,GAAAjT,UAAAuW,oBAAgCtD,EAAAjT,UAAAwW,SAAA,SAAA9T,EAAAE,GAAmC,iBAAAF,IAAA,mBAAAA,IAAA,MAAAA,GAAAqQ,EAAA,MAAmEjQ,KAAAuQ,QAAAiD,gBAAAxT,KAAAJ,EAAAE,EAAA,aAAmDqQ,EAAAjT,UAAAyW,YAAA,SAAA/T,GAAoCI,KAAAuQ,QAAA+C,mBAAAtT,KAAAJ,EAAA,gBAC9a6Q,EAAAvT,UAAAiT,EAAAjT,SAAoG,IAAA0W,GAAAlD,EAAAxT,UAAA,GAAAuT,EAAwBmD,GAAAlT,YAAAgQ,EAAgBiC,EAAAiB,EAAAzD,EAAAjT,WAAiB0W,EAAAC,sBAAA,CAA0B,IAAAxC,IAAOC,QAAA,MAAaR,EAAArU,OAAAS,UAAAC,eAAA4T,GAAsC7R,KAAA,EAAA2R,KAAA,EAAAiD,QAAA,EAAAC,UAAA,GAEvErB,EAAA,OAAAd,KAI1KoC,GAAOC,UAAU9V,IAAA,SAAAyB,EAAAE,EAAAqC,GAAoB,SAAAvC,EAAA,MAAAA,EAAoB,IAAAxD,KAAyB,OAAhBoW,GAAA5S,EAAAxD,EAAA,KAAA0D,EAAAqC,GAAgB/F,GAASmC,QAAA,SAAAqB,EAAAE,EAAAqC,GAAyB,SAAAvC,EAAA,MAAAA,EAAoBE,GAAA6R,EAAA,UAAA7R,EAAAqC,GAAmB,MAAAvC,GAAAsS,EAAAtS,EAAA,GAAA0S,EAAAxS,GAAqBmS,EAAAnS,IAAKkS,MAAA,SAAApS,GAAmB,aAAAA,EAAA,EAAAsS,EAAAtS,EAAA,GAAA6S,EAAAlP,gBAAA,OAAgD2Q,QAAA,SAAAtU,GAAqB,GAAAE,KAA2C,OAAlC0S,GAAA5S,EAAAE,EAAA,KAAA2S,EAAAhP,qBAAkC3D,GAASqU,KAAA,SAAAvU,GAAuC,MAArB2R,GAAA3R,IAAAqQ,EAAA,OAAqBrQ,IAAUwU,UAAA,WAAsB,OAAO9C,QAAA,OAAc+C,UAAAlE,EAAAmE,cAAA5D,EAAA6D,cAAA,SAAA3U,EAAAE,GACrP,WAD8S,KAAAA,MAAA,MAAqBF,GAAGsR,SAAAgC,EAC9esB,sBAAA1U,EAAA2U,cAAA7U,EAAA8U,cAAA9U,EAAA+U,eAAA/U,EAAAgV,aAAA,EAAAC,cAAA,EAAAC,SAAA,KAAAC,SAAA,MAAqInV,EAAAkV,UAAY5D,SAAA+B,EAAA+B,SAAApV,GAAuBA,EAAAmV,SAAAnV,GAAoBqV,WAAA,SAAArV,GAAwB,OAAOsR,SAAAkC,EAAAtD,OAAAlQ,IAAqBsV,SAAApC,EAAAqC,WAAApC,EAAAqC,mBAAAjC,EAAAkC,kBAAArC,EAAAjD,cAAAY,EAAA2E,aAAA,SAAA1V,EAAAE,EAAAqC,IAA+G,OAAAvC,OAAA,KAAAA,IAAAqQ,EAAA,MAAArQ,EAAuC,IAAAxD,OAAA,GAAAC,EAAAsW,KAAmB/S,EAAAwQ,OAAApO,EAAApC,EAAAV,IAAA0R,EAAAhR,EAAAiR,IAAArO,EAAA5C,EAAAwR,MAAqC,UAAAtR,EAAA,KAAY,KAAAA,EAAA+Q,MAAAD,EAAA9Q,EAAA+Q,IAAArO,EAAA6O,EAAAC,aAAsC,KAChfxR,EAAAZ,MAAA8C,EAAA,GAAAlC,EAAAZ,IAAoB,IAAAjD,OAAA,EAAa2D,GAAAiM,MAAAjM,EAAAiM,KAAAoF,eAAAhV,EAAA2D,EAAAiM,KAAAoF,aAAqD,KAAA7U,IAAA0D,GAAAgR,EAAA5U,KAAA4D,EAAA1D,KAAA2U,EAAA5T,eAAAf,KAAAC,EAAAD,OAAA,KAAA0D,EAAA1D,QAAA,KAAAH,IAAAG,GAAA0D,EAAA1D,IAA8G,QAArBA,EAAA4C,UAAAC,OAAA,GAAqB5C,EAAA2U,SAAA7O,MAAsB,MAAA/F,EAAA,CAAaH,EAAA6L,MAAA1L,EAAW,QAAAD,GAAA,EAAYA,EAAAC,EAAID,IAAAF,EAAAE,GAAA6C,UAAA7C,EAAA,EAAwBE,GAAA2U,SAAA/U,EAAa,OAAOiV,SAAAC,EAAAtF,KAAAjM,EAAAiM,KAAA3M,IAAA8C,EAAA6O,IAAAD,EAAAR,MAAA/T,EAAA+U,OAAA5O,IAAqD+S,cAAA,SAAA3V,GAA2B,GAAAE,GAAA6Q,EAAAjP,KAAA,KAAA9B,EAA8B,OAATE,GAAA+L,KAAAjM,EAASE,GAAS0V,eAAAjE,EAAAkE,QAAA,SAAAC,oDAAuFC,kBAAAtE,EAC5fxT,OAAA8U,IAAUiD,GAAIC,QAAA7B,GAAU8B,EAAAF,GAAA5B,GAAA4B,CAAW7Z,GAAAD,QAAAga,EAAAD,QAAAC,EAAAD,QAAAC,Gf2gD7B,SAAU/Z,EAAQD,EAASH,GAEjC,YgBhiDA,SAAAoa,KAEA,GACA,oBAAAC,iCACA,mBAAAA,gCAAAD,SAcA,IAEAC,+BAAAD,YACG,MAAArX,GAGH+F,QAAA/B,MAAAhE,IAOAqX,IACAha,EAAAD,QAAAH,EAAA,KhB2iDM,SAAUI,EAAQD,EAASH,GAEjC,YiBlkDA,SAAAwX,GAAAvT,GAAc,OAAAE,GAAAd,UAAAC,OAAA,EAAA7C,EAAA,yDAAAwD,EAAAvD,EAAA,EAA8FA,EAAAyD,EAAIzD,IAAAD,GAAA,WAAA8T,mBAAAlR,UAAA3C,EAAA,GAAqD4Z,KAAA,2BAAArW,EAAA,4HAAmCxD,GACxM,QAAA8Z,GAAAtW,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,EAAAR,EAAA4O,EAAA+B,GAA+B3S,KAAAmW,iBAAA,EAAwBnW,KAAAoW,aAAA,IAAuB,IAAAtZ,GAAAgL,MAAA5K,UAAA6K,MAAA7L,KAAA8C,UAAA,EAA8C,KAAIc,EAAAuW,MAAAja,EAAAU,GAAa,MAAA8V,GAAS5S,KAAAoW,aAAAxD,EAAA5S,KAAAmW,iBAAA,GAE1E,QAAAG,KAAc,GAAAlD,GAAAmD,iBAAA,CAAuB,GAAA3W,GAAAwT,GAAAoD,aAAiE,MAA3CpD,IAAAoD,cAAA,KAAqBpD,GAAAmD,kBAAA,EAAsB3W,GAClL,QAAA6W,KAAc,GAAAC,GAAA,OAAA9W,KAAA+W,IAAA,CAAuB,GAAA7W,GAAA6W,GAAA/W,GAAAxD,EAAAsa,GAAAjK,QAAA7M,EAAkD,KAAtB,EAAAxD,GAAA+W,EAAA,KAAAvT,IAAsBgX,GAAAxa,GAAA,CAAW0D,EAAA+W,eAAA1D,EAAA,KAAAvT,GAAiCgX,GAAAxa,GAAA0D,EAAQ1D,EAAA0D,EAAAgX,UAAe,QAAAza,KAAAD,GAAA,CAAgB,GAAA+F,OAAA,GAAaK,EAAApG,EAAAC,GAAA2F,EAAAlC,EAAA8Q,EAAAvU,CAAmB0a,IAAA5Z,eAAAyT,IAAAuC,EAAA,KAAAvC,GAAsCmG,GAAAnG,GAAApO,CAAQ,IAAAmQ,GAAAnQ,EAAAwU,uBAAgC,IAAArE,EAAA,CAAM,IAAAxQ,IAAAwQ,KAAAxV,eAAAgF,IAAA8U,EAAAtE,EAAAxQ,GAAAH,EAAA4O,EAA6CzO,IAAA,MAAKK,GAAA0U,kBAAAD,EAAAzU,EAAA0U,iBAAAlV,EAAA4O,GAAAzO,GAAA,GAAAA,GAAA,CAA+DA,IAAAgR,EAAA,KAAA9W,EAAAuD,MAC/Y,QAAAqX,GAAArX,EAAAE,EAAA1D,GAAmB+a,GAAAvX,IAAAuT,EAAA,MAAAvT,GAAwBuX,GAAAvX,GAAAE,EAAQsX,GAAAxX,GAAAE,EAAAgX,WAAA1a,GAAAib,aAA+D,QAAAC,GAAA1X,GAAe8W,IAAAvD,EAAA,OAAmBuD,GAAA5O,MAAA5K,UAAA6K,MAAA7L,KAAA0D,GAAiC6W,IAAK,QAAAc,GAAA3X,GAAe,GAAAxD,GAAA0D,GAAA,CAAW,KAAA1D,IAAAwD,GAAA,GAAAA,EAAAzC,eAAAf,GAAA,CAAmC,GAAAC,GAAAuD,EAAAxD,EAAWua,IAAAxZ,eAAAf,IAAAua,GAAAva,KAAAC,IAAAsa,GAAAva,IAAA+W,EAAA,MAAA/W,GAAAua,GAAAva,GAAAC,EAAAyD,GAAA,GAAwEA,GAAA2W,IAClH,QAAAe,GAAA5X,EAAAE,EAAA1D,EAAAC,GAAqByD,EAAAF,EAAAiM,MAAA,gBAA0BjM,EAAA6X,cAAAC,GAAArb,GAAsB+W,GAAAuE,wCAAA7X,EAAA1D,MAAA,GAAAwD,GAAwDA,EAAA6X,cAAA,KACrV,QAAAG,GAAAhY,EAAAE,GAAwC,MAAvB,OAAAA,GAAAqT,EAAA,MAAuB,MAAAvT,EAAAE,EAAoBgI,MAAAoB,QAAAtJ,GAAqBkI,MAAAoB,QAAApJ,IAAAF,EAAAsB,KAAAmV,MAAAzW,EAAAE,GAAAF,IAA+CA,EAAAsB,KAAApB,GAAUF,GAASkI,MAAAoB,QAAApJ,IAAAF,GAAAiY,OAAA/X,IAAAF,EAAAE,GAA4C,QAAAgY,GAAAlY,EAAAE,EAAA1D,GAAmB0L,MAAAoB,QAAAtJ,KAAArB,QAAAuB,EAAA1D,GAAAwD,GAAAE,EAAA5D,KAAAE,EAAAwD,GAClN,QAAAmY,GAAAnY,EAAAE,GAAiB,GAAAF,EAAA,CAAM,GAAAxD,GAAAwD,EAAAoY,mBAAA3b,EAAAuD,EAAAqY,kBAAkD,IAAAnQ,MAAAoB,QAAA9M,GAAA,OAAA+F,GAAA,EAAgCA,EAAA/F,EAAA6C,SAAAW,EAAAsY,uBAAsC/V,IAAAqV,EAAA5X,EAAAE,EAAA1D,EAAA+F,GAAA9F,EAAA8F,QAAsB/F,IAAAob,EAAA5X,EAAAE,EAAA1D,EAAAC,EAAoBuD,GAAAoY,mBAAA,KAA0BpY,EAAAqY,mBAAA,KAA0BrY,EAAAuY,gBAAAvY,EAAAc,YAAA0X,QAAAxY,IAA4C,QAAAyY,GAAAzY,GAAe,MAAAmY,GAAAnY,GAAA,GAAgB,QAAA0Y,GAAA1Y,GAAe,MAAAmY,GAAAnY,GAAA,GACvU,QAAA2Y,GAAA3Y,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAA4Y,SAAkB,KAAApc,EAAA,WAAkB,IAAAC,GAAAoc,GAAArc,EAAY,KAAAC,EAAA,WAAkBD,GAAAC,EAAAyD,EAAOF,GAAA,OAAAE,GAAY,gNAAAzD,KAAAqc,YAAA9Y,IAAAiM,KAAAxP,IAAA,WAAAuD,GAAA,UAAAA,GAAA,WAAAA,GAAA,aAAAA,IAAkTA,GAAAvD,CAAK,MAAAuD,EAAQ,SAAAA,GAAA,EAAa,MAAAA,GAAA,MAAiBxD,GAAA,mBAAAA,IAAA+W,EAAA,MAAArT,QAAA1D,IACncA,GAAS,QAAAuc,GAAA/Y,EAAAE,GAAiB,OAAAF,IAAAgZ,GAAAhB,EAAAgB,GAAAhZ,IAAwBA,EAAAgZ,GAAKA,GAAA,KAAQhZ,IAAAE,EAAAgY,EAAAlY,EAAAyY,GAAAP,EAAAlY,EAAA0Y,GAAAM,IAAAzF,EAAA,MAAAC,GAAAyF,sBAAkE,QAAAC,GAAAlZ,EAAAE,EAAA1D,EAAAC,GAAqB,OAAA8F,GAAA,KAAAK,EAAA,EAAmBA,EAAAoU,GAAA3X,OAAYuD,IAAA,CAAK,GAAAR,GAAA4U,GAAApU,EAAYR,SAAA6U,cAAAjX,EAAAE,EAAA1D,EAAAC,MAAA8F,EAAAyV,EAAAzV,EAAAH,IAA6C2W,EAAAxW,GAAA,GACnP,QAAA4W,GAAAnZ,GAAe,GAAAA,EAAAyS,IAAA,MAAAzS,GAAAyS,GAAoB,OAAKzS,EAAAyS,KAAM,KAAAzS,EAAAoZ,WAAgC,WAAhCpZ,KAAAoZ,WAAwD,MAAPpZ,KAAAyS,IAAO,IAAAzS,EAAAqZ,KAAA,IAAArZ,EAAAqZ,IAAArZ,EAAA,KAAmC,QAAAsZ,GAAAtZ,GAAe,OAAAA,EAAAqZ,KAAA,IAAArZ,EAAAqZ,IAAA,MAAArZ,GAAA4Y,SAA2CrF,GAAA,MAAQ,QAAAgG,GAAAvZ,GAAe,MAAAA,GAAAwZ,KAAA,KAC1N,QAAAjJ,GAAAvQ,GAAc,GAAAA,IAAAyZ,aAAczZ,GAAA,IAAAA,EAAAqZ,IAAoB,OAAArZ,IAAA,KAAgB,QAAA0Z,GAAA1Z,EAAAE,EAAA1D,GAAmB,OAAAC,MAAauD,GAAEvD,EAAA6E,KAAAtB,KAAAuQ,EAAAvQ,EAAkB,KAAAA,EAAAvD,EAAA4C,OAAe,EAAAW,KAAME,EAAAzD,EAAAuD,GAAA,WAAAxD,EAAsB,KAAAwD,EAAA,EAAQA,EAAAvD,EAAA4C,OAAWW,IAAAE,EAAAzD,EAAAuD,GAAA,UAAAxD,GAAwB,QAAAmd,GAAA3Z,EAAAE,EAAA1D,IAAmB0D,EAAAyY,EAAA3Y,EAAAxD,EAAAod,eAAAxC,wBAAAlX,OAAA1D,EAAA4b,mBAAAJ,EAAAxb,EAAA4b,mBAAAlY,GAAA1D,EAAA6b,mBAAAL,EAAAxb,EAAA6b,mBAAArY,IAAuJ,QAAA6Z,GAAA7Z,GAAeA,KAAA4Z,eAAAxC,yBAAAsC,EAAA1Z,EAAA8Z,YAAAH,EAAA3Z,GACnY,QAAA+Z,GAAA/Z,GAAe,GAAAA,KAAA4Z,eAAAxC,wBAAA,CAAgD,GAAAlX,GAAAF,EAAA8Z,WAAoB5Z,KAAAqQ,EAAArQ,GAAA,KAAcwZ,EAAAxZ,EAAAyZ,EAAA3Z,IAAY,QAAAga,GAAAha,EAAAE,EAAA1D,GAAmBwD,GAAAxD,KAAAod,eAAAtC,mBAAApX,EAAAyY,EAAA3Y,EAAAxD,EAAAod,eAAAtC,qBAAA9a,EAAA4b,mBAAAJ,EAAAxb,EAAA4b,mBAAAlY,GAAA1D,EAAA6b,mBAAAL,EAAAxb,EAAA6b,mBAAArY,IAAwL,QAAAia,GAAAja,GAAeA,KAAA4Z,eAAAtC,kBAAA0C,EAAAha,EAAA8Z,YAAA,KAAA9Z,GAA+D,QAAAka,GAAAla,GAAekY,EAAAlY,EAAA6Z,GACrZ,QAAAM,GAAAna,EAAAE,EAAA1D,EAAAC,GAAqB,GAAAD,GAAAC,EAAAuD,EAAA,CAAmB,OAARuC,GAAA/F,EAAQoG,EAAAnG,EAAA2F,EAAA,EAAA4O,EAAAzO,EAAoByO,EAAEA,EAAAT,EAAAS,GAAA5O,GAAW4O,GAAA,CAAI,QAAA+B,GAAAnQ,EAAYmQ,EAAEA,EAAAxC,EAAAwC,GAAA/B,GAAW,MAAK,EAAA5O,EAAA4O,GAAMzO,EAAAgO,EAAAhO,GAAAH,GAAY,MAAK,EAAA4O,EAAA5O,GAAMQ,EAAA2N,EAAA3N,GAAAoO,GAAY,MAAK5O,KAAI,CAAE,GAAAG,IAAAK,GAAAL,IAAAK,EAAAwX,UAAA,KAAApa,EAAkCuC,GAAAgO,EAAAhO,GAAOK,EAAA2N,EAAA3N,GAAOL,EAAA,SAAOA,GAAA,IAAgB,KAAJK,EAAAL,EAAIA,KAAS/F,OAAAoG,IAAyB,QAAdR,EAAA5F,EAAA4d,YAAchY,IAAAQ,IAAyBL,EAAAjB,KAAA9E,GAAUA,EAAA+T,EAAA/T,EAAO,KAAAA,KAASC,OAAAmG,IAAyB,QAAdR,EAAA3F,EAAA2d,YAAchY,IAAAQ,IAAyBpG,EAAA8E,KAAA7E,GAAUA,EAAA8T,EAAA9T,EAAO,KAAAA,EAAA,EAAQA,EAAA8F,EAAAlD,OAAW5C,IAAAud,EAAAzX,EAAA9F,GAAA,UAAAuD,EAAyB,KAAAA,EAAAxD,EAAA6C,OAAe,EAAAW,KAAMga,EAAAxd,EAAAwD,GAAA,WAAAE,GACtQ,QAAAma,GAAAra,EAAAE,GAAiB,GAAA1D,KAAsI,OAA7HA,GAAAwD,EAAAyI,eAAAvI,EAAAuI,cAAmCjM,EAAA,SAAAwD,GAAA,SAAAE,EAAyB1D,EAAA,MAAAwD,GAAA,MAAAE,EAAmB1D,EAAA,KAAAwD,GAAA,KAAAE,EAAiB1D,EAAA,IAAAwD,GAAA,IAAAE,EAAAuI,cAA6BjM,EAEhV,QAAA8d,GAAAta,GAAe,GAAAyB,GAAAzB,GAAA,MAAAyB,IAAAzB,EAAsB,KAAAua,GAAAva,GAAA,MAAAA,EAAmB,IAAAxD,GAAA0D,EAAAqa,GAAAva,EAAc,KAAAxD,IAAA0D,GAAA,GAAAA,EAAA3C,eAAAf,QAAAge,IAAA,MAAA/Y,IAAAzB,GAAAE,EAAA1D,EAA6D,OAAAwD,GACnI,QAAAya,KAAwG,OAA1FC,IAAAne,GAAAoe,YAAAD,GAAA,eAAAtT,UAAAwT,gBAAA,2BAA0FF,GAAgE,QAAAG,KAAc,GAAAhK,GAAAiK,cAAA,MAAAjK,IAAAiK,aAA0C,IAAA9a,GAAAvD,EAAAyD,EAAA2Q,GAAAkK,WAAAve,EAAA0D,EAAAb,OAAAkD,EAAAyY,IAAApY,EAAAL,EAAAlD,MAAoD,KAAAW,EAAA,EAAQA,EAAAxD,GAAA0D,EAAAF,KAAAuC,EAAAvC,GAAiBA,KAAK,GAAAoC,GAAA5F,EAAAwD,CAAU,KAAAvD,EAAA,EAAQA,GAAA2F,GAAAlC,EAAA1D,EAAAC,KAAA8F,EAAAK,EAAAnG,GAAsBA,KAA+C,MAA1CoU,IAAAiK,cAAAvY,EAAA4F,MAAAnI,EAAA,EAAAvD,EAAA,EAAAA,MAAA,IAA0CoU,GAAAiK,cAAuB,QAAAE,KAAc,eAAAnK,IAAAoK,MAAApK,GAAAoK,MAAAhZ,MAAA4O,GAAAoK,MAAAR,KAE9a,QAAA3J,GAAA9Q,EAAAE,EAAA1D,EAAAC,GAAoB2D,KAAAwZ,eAAA5Z,EAAsBI,KAAA0Z,YAAA5Z,EAAmBE,KAAA8a,YAAA1e,EAAmBwD,EAAAI,KAAAU,YAAAqa,SAA6B,QAAA5Y,KAAAvC,KAAAzC,eAAAgF,MAAArC,EAAAF,EAAAuC,IAAAnC,KAAAmC,GAAArC,EAAA1D,GAAA,WAAA+F,EAAAnC,KAAArB,OAAAtC,EAAA2D,KAAAmC,GAAA/F,EAAA+F,GAA+Q,OAA3KnC,MAAAgb,oBAAA,MAAA5e,EAAA6e,iBAAA7e,EAAA6e,kBAAA,IAAA7e,EAAA8e,aAAApI,GAAAxP,gBAAAwP,GAAAzP,iBAA8HrD,KAAAkY,qBAAApF,GAAAzP,iBAA6CrD,KAG5X,QAAAmb,GAAAvb,EAAAE,EAAA1D,EAAAC,GAAqB,GAAA2D,KAAAob,UAAAnc,OAAA,CAA0B,GAAAkD,GAAAnC,KAAAob,UAAAvJ,KAAgD,OAArB7R,MAAA9D,KAAAiG,EAAAvC,EAAAE,EAAA1D,EAAAC,GAAqB8F,EAAS,UAAAnC,MAAAJ,EAAAE,EAAA1D,EAAAC,GAAyB,QAAAgf,GAAAzb,GAAeA,YAAAI,OAAAmT,EAAA,OAAkCvT,EAAA0b,aAAe,GAAAtb,KAAAob,UAAAnc,QAAAe,KAAAob,UAAAla,KAAAtB,GAAiD,QAAA2b,GAAA3b,GAAeA,EAAAwb,aAAexb,EAAA4b,UAAAL,EAAevb,EAAAwY,QAAAiD,EAG/R,QAAAI,GAAA7b,EAAAE,GAAiB,OAAAF,GAAU,uBAAA8b,GAAAjP,QAAA3M,EAAA6b,QAA8C,4BAAA7b,EAAA6b,OAAsC,mDAAsD,mBAAkB,QAAAC,GAAAhc,GAA0B,MAAXA,KAAAic,OAAW,iBAAAjc,IAAA,QAAAA,KAAAwH,KAAA,KAA4D,QAAA0U,GAAAlc,EAAAE,GAAiB,OAAAF,GAAU,2BAAAgc,GAAA9b,EAAmC,4BAAAA,EAAAic,MAAA,MAA4CC,IAAA,EAAMC,GAAU,uBAAArc,GAAAE,EAAAsH,KAAAxH,IAAAqc,IAAAD,GAAA,KAAApc,CAAmD,sBAC1b,QAAAsc,GAAAtc,EAAAE,GAAiB,GAAAqc,GAAA,yBAAAvc,IAAAwc,IAAAX,EAAA7b,EAAAE,IAAAF,EAAA6a,IAAAhK,GAAAoK,MAAA,KAAApK,GAAAkK,WAAA,KAAAlK,GAAAiK,cAAA,KAAAyB,IAAA,EAAAvc,GAAA,IAAyH,QAAAA,GAAU,uBAAyB,qBAAAE,EAAAuc,SAAAvc,EAAAwc,QAAAxc,EAAAyc,UAAAzc,EAAAuc,SAAAvc,EAAAwc,OAAA,CAA2E,GAAAxc,EAAA0c,MAAA,EAAA1c,EAAA0c,KAAAvd,OAAA,MAAAa,GAAA0c,IAAyC,IAAA1c,EAAAic,MAAA,MAAAhe,QAAAG,aAAA4B,EAAAic,OAA+C,WAAY,4BAAAU,IAAA,KAAA3c,EAAAsH,IAA4C,sBAE1I,QAAAsV,GAAA9c,GAAe,GAAAA,EAAA+c,GAAA/c,GAAA,CAAYgd,IAAA,mBAAAA,IAAAC,wBAAA1J,EAAA,MAAkE,IAAArT,GAAA2Y,GAAA7Y,EAAA4Y,UAAsBoE,IAAAC,uBAAAjd,EAAA4Y,UAAA5Y,EAAAiM,KAAA/L,IAAiD,QAAAgd,GAAAld,GAAemd,GAAAC,MAAA9b,KAAAtB,GAAAod,IAAApd,GAAAmd,GAAAnd,EACjb,QAAAqd,KAAc,cAAAF,IAAA,OAAAC,GAA4B,QAAAE,KAAc,GAAAH,GAAA,CAAO,GAAAnd,GAAAmd,GAAAjd,EAAAkd,EAA+B,IAAjBA,GAAAD,GAAA,KAAWL,EAAA9c,GAAME,EAAA,IAAAF,EAAA,EAAaA,EAAAE,EAAAb,OAAWW,IAAA8c,EAAA5c,EAAAF,KAAwG,QAAAud,GAAAvd,EAAAE,GAAiB,MAAAF,GAAAE,GAAY,QAAAsd,GAAAxd,EAAAE,EAAA1D,GAAmB,MAAAwD,GAAAE,EAAA1D,GAAc,QAAAihB,MAAyB,QAAAC,GAAA1d,EAAAE,GAAiB,GAAAyd,GAAA,MAAA3d,GAAAE,EAAkByd,KAAA,CAAM,KAAI,MAAAJ,GAAAvd,EAAAE,GAAe,QAAQyd,IAAA,EAAAN,MAAAI,IAAAH,MAC9N,QAAAM,GAAA5d,GAAe,GAAAE,GAAAF,KAAA6d,UAAA7d,EAAA6d,SAAApV,aAA8C,iBAAAvI,IAAA4d,GAAA9d,EAAAiM,MAAA,aAAA/L,EAAoD,QAAA6d,GAAA/d,GAAyG,MAA1FA,KAAAjB,QAAAiB,EAAAge,YAAAxb,OAAiCxC,EAAAie,0BAAAje,IAAAie,yBAAyD,IAAAje,EAAAke,SAAAle,EAAAoZ,WAAApZ,EACrX,QAAAme,IAAAne,EAAAE,GAAiB,SAAA3D,GAAAoe,WAAAza,KAAA,oBAAAkH,cAA8DpH,EAAA,KAAAA,EAASE,EAAAF,IAAAoH,UAAgBlH,MAAAkH,SAAA+I,cAAA,OAAAjQ,EAAAke,aAAApe,EAAA,WAA6DE,EAAA,mBAAAA,GAAAF,IAA+BE,GAAS,QAAAme,IAAAre,GAAe,GAAAE,GAAAF,EAAAiM,IAAa,QAAAjM,IAAA6d,WAAA,UAAA7d,EAAAyI,gBAAA,aAAAvI,GAAA,UAAAA,GACzO,QAAAoe,IAAAte,GAAe,GAAAE,GAAAme,GAAAre,GAAA,kBAAAxD,EAAAK,OAAA0hB,yBAAAve,EAAAc,YAAAxD,UAAA4C,GAAAzD,EAAA,GAAAuD,EAAAE,EAAqG,KAAAF,EAAAzC,eAAA2C,IAAA,oBAAA1D,IAAA,mBAAAA,GAAAS,KAAA,mBAAAT,GAAAqO,IAAA,CAAuG,GAAAtI,GAAA/F,EAAAS,IAAA2F,EAAApG,EAAAqO,GAAiM,OAA7KhO,QAAAC,eAAAkD,EAAAE,GAA2BnD,cAAA,EAAAE,IAAA,WAA+B,MAAAsF,GAAAjG,KAAA8D,OAAoByK,IAAA,SAAA7K,GAAiBvD,EAAA,GAAAuD,EAAO4C,EAAAtG,KAAA8D,KAAAJ,MAAkBnD,OAAAC,eAAAkD,EAAAE,GAA2BlD,WAAAR,EAAAQ,cAAiCwhB,SAAA,WAAoB,MAAA/hB,IAASgiB,SAAA,SAAAze,GAAsBvD,EAAA,GAAAuD,GAAO0e,aAAA,WAAyB1e,EAAA2e,cACtf,WAAK3e,GAAAE,MAAe,QAAA0e,IAAA5e,GAAeA,EAAA2e,gBAAA3e,EAAA2e,cAAAL,GAAAte,IAAyC,QAAA6e,IAAA7e,GAAe,IAAAA,EAAA,QAAe,IAAAE,GAAAF,EAAA2e,aAAsB,KAAAze,EAAA,QAAe,IAAA1D,GAAA0D,EAAAse,WAAmB/hB,EAAA,EAA2D,OAAlDuD,KAAAvD,EAAA4hB,GAAAre,KAAA8e,QAAA,eAAA9e,EAAAiC,QAA8CjC,EAAAvD,KAAID,IAAA0D,EAAAue,SAAAze,IAAA,GAExK,QAAA+e,IAAA/e,GAAe,cAAAA,GAAA,oBAAAA,GAAA,MAAgDA,EAAAgf,IAAAhf,EAAAgf,KAAAhf,EAAA,cAA6B,mBAAAA,KAAA,MACjJ,QAAAif,IAAAjf,GAAe,GAAAE,GAAAF,EAAAiM,IAAa,uBAAA/L,GAAA,MAAAA,GAAAgf,aAAAhf,EAAAxD,IAAsD,qBAAAwD,GAAA,MAAAA,EAAgC,QAAAA,GAAU,IAAAif,IAAA,iBAA0B,KAAAC,IAAA,wBAAiC,KAAAC,IAAA,qBAA8B,KAAAC,IAAA,mBAA4B,KAAAC,IAAA,kBAAAvf,EAAAwf,aAAArb,GAAA,GAAgD,KAAAsb,IAAA,wBAAiC,KAAAC,IAAA,kBAA2B,KAAAC,IAAA,gBAAwB,oBAAAzf,IAAA,OAAAA,EAAA,OAAAA,EAAAoR,UAAoD,IAAAsO,IAAA,MAAA5f,GAAAE,EAAAgQ,OAAAgP,aAAAhf,EAAAgQ,OAAAxT,MAAA,QAAAsD,EAAA,cACzaA,EAAA,iBAAmB,YAAY,QAAA6f,IAAA7f,GAAe,GAAAE,GAAA,EAAS,IAAGF,EAAA,OAAAA,EAAAqZ,KAAgB,+BAAA7c,GAAAwD,EAAA8f,YAAArjB,EAAAuD,EAAA+f,aAAiExd,EAAA0c,GAAAjf,GAAY4C,EAAA,IAAWpG,KAAAoG,EAAAqc,GAAAziB,IAAaA,EAAAC,EAAI8F,EAAA,aAAAA,GAAA,YAAA/F,EAAA,QAAAA,EAAAwjB,SAAA9c,QAAA,oBAAA1G,EAAAyjB,WAAA,IAAArd,EAAA,gBAAAA,EAAA,OAA4H,MAAA5C,EAAQ,SAAAuC,EAAA,GAAarC,GAAAqC,EAAKvC,IAAAyZ,aAAWzZ,EAAS,OAAAE,GACoB,QAAAggB,IAAAlgB,GAAe,QAAAmgB,GAAA5iB,eAAAyC,KAAiCogB,GAAA7iB,eAAAyC,KAAiCqgB,GAAA7X,KAAAxI,GAAAmgB,GAAAngB,IAAA,GAA8BogB,GAAApgB,IAAA,GAAS,IACze,QAAAsgB,IAAAtgB,EAAAE,EAAA1D,EAAAC,GAAqB,UAAAD,GAAA,IAAAA,EAAAyP,KAAA,QAAiC,cAAA/L,IAAiB,oCAAuC,sBAAAzD,IAA6B,OAAAD,KAAA+jB,gBAAkE,WAA7BvgB,IAAAyI,cAAAN,MAAA,OAA6B,UAAAnI,EAA+B,mBAAkB,QAAAwgB,IAAAxgB,EAAAE,EAAA1D,EAAAC,GAAqB,UAAAyD,GAAA,oBAAAA,IAAAogB,GAAAtgB,EAAAE,EAAA1D,EAAAC,GAAA,QAA0D,IAAAA,EAAA,QAAc,WAAAD,EAAA,OAAAA,EAAAyP,MAA2B,cAAA/L,CAAgB,mBAAAA,CAAoB,cAAAugB,OAAAvgB,EAAuB,cAAAugB,OAAAvgB,IAAA,EAAAA,EAA4B,SAC7c,QAAA8T,IAAAhU,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAsBnC,KAAAmgB,gBAAA,IAAArgB,GAAA,IAAAA,GAAA,IAAAA,EAAyCE,KAAAsgB,cAAAjkB,EAAqB2D,KAAAugB,mBAAApe,EAA0BnC,KAAAwgB,gBAAApkB,EAAuB4D,KAAAygB,aAAA7gB,EAAoBI,KAAA6L,KAAA/L,EAG4C,QAAA4gB,IAAA9gB,GAAe,MAAAA,GAAA,GAAA2M,cAGpN,QAAAoU,IAAA/gB,EAAAE,EAAA1D,EAAAC,GAAqB,GAAA8F,GAAAkP,GAAAlU,eAAA2C,GAAAuR,GAAAvR,GAAA,MAAoC,OAAAqC,EAAA,IAAAA,EAAA0J,MAAAxP,IAAA,EAAAyD,EAAAb,SAAA,MAAAa,EAAA,UAAAA,EAAA,YAAAA,EAAA,UAAAA,EAAA,QAAmGsgB,GAAAtgB,EAAA1D,EAAA+F,EAAA9F,KAAAD,EAAA,MAAAC,GAAA,OAAA8F,EAAA2d,GAAAhgB,KAAA,OAAA1D,EAAAwD,EAAAghB,gBAAA9gB,GAAAF,EAAAoe,aAAAle,EAAA,GAAA1D,IAAA+F,EAAAqe,gBAAA5gB,EAAAuC,EAAAse,cAAA,OAAArkB,EAAA,IAAA+F,EAAA0J,MAAA,GAAAzP,GAAA0D,EAAAqC,EAAAme,cAAAjkB,EAAA8F,EAAAoe,mBAAA,OAAAnkB,EAAAwD,EAAAghB,gBAAA9gB,IAAAqC,IAAA0J,KAAAzP,EAAA,IAAA+F,GAAA,IAAAA,IAAA,IAAA/F,EAAA,MAAAA,EAAAC,EAAAuD,EAAAihB,eAAAxkB,EAAAyD,EAAA1D,GAAAwD,EAAAoe,aAAAle,EAAA1D,MAC5J,QAAA0kB,IAAAlhB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAA4e,OAAgB,OAAAthB,OAAW0C,GAAIihB,mBAAA,GAAAC,iBAAA,GAAAnf,UAAA,GAAA6c,QAAA,MAAAtiB,IAAAwD,EAAAqhB,cAAAC,iBAA0G,QAAAC,IAAAvhB,EAAAE,GAAiB,GAAA1D,GAAA,MAAA0D,EAAAkhB,aAAA,GAAAlhB,EAAAkhB,aAAA3kB,EAAA,MAAAyD,EAAA4e,QAAA5e,EAAA4e,QAAA5e,EAAAihB,cAA0F3kB,GAAAglB,GAAA,MAAAthB,EAAA+B,MAAA/B,EAAA+B,MAAAzF,GAA8BwD,EAAAqhB,eAAiBC,eAAA7kB,EAAAglB,aAAAjlB,EAAAklB,WAAA,aAAAxhB,EAAA+L,MAAA,UAAA/L,EAAA+L,KAAA,MAAA/L,EAAA4e,QAAA,MAAA5e,EAAA+B,OAAgH,QAAA0f,IAAA3hB,EAAAE,GAA6B,OAAZA,IAAA4e,UAAYiC,GAAA/gB,EAAA,UAAAE,GAAA,GACjc,QAAA0hB,IAAA5hB,EAAAE,GAAiByhB,GAAA3hB,EAAAE,EAAQ,IAAA1D,GAAAglB,GAAAthB,EAAA+B,MAAkB,OAAAzF,IAAA,WAAA0D,EAAA+L,MAAiC,IAAAzP,GAAA,KAAAwD,EAAAiC,OAAAjC,EAAAiC,OAAAzF,KAAAwD,EAAAiC,MAAA,GAAAzF,GAAgDwD,EAAAiC,QAAA,GAAAzF,IAAAwD,EAAAiC,MAAA,GAAAzF,IAAoC0D,EAAA3C,eAAA,SAAAskB,GAAA7hB,EAAAE,EAAA+L,KAAAzP,GAAA0D,EAAA3C,eAAA,iBAAAskB,GAAA7hB,EAAAE,EAAA+L,KAAAuV,GAAAthB,EAAAkhB,eAA2G,MAAAlhB,EAAA4e,SAAA,MAAA5e,EAAAihB,iBAAAnhB,EAAAmhB,iBAAAjhB,EAAAihB,gBAC3Q,QAAAW,IAAA9hB,EAAAE,EAAA1D,GAAmB,GAAA0D,EAAA3C,eAAA,UAAA2C,EAAA3C,eAAA,iBAAgE2C,EAAA,GAAAF,EAAAqhB,cAAAI,YAAkC,IAAAhlB,GAAAuD,EAAAiC,KAAczF,IAAA0D,IAAAzD,IAAAuD,EAAAiC,MAAA/B,GAAsBF,EAAAohB,aAAAlhB,EAAiB1D,EAAAwD,EAAAtD,KAAS,KAAAF,IAAAwD,EAAAtD,KAAA,IAAoBsD,EAAAmhB,gBAAAnhB,EAAAmhB,eAAmCnhB,EAAAmhB,gBAAAnhB,EAAAmhB,eAAmC,KAAA3kB,IAAAwD,EAAAtD,KAAAF,GAAmB,QAAAqlB,IAAA7hB,EAAAE,EAAA1D,GAAmB,WAAA0D,GAAAF,EAAA+hB,cAAAC,gBAAAhiB,IAAA,MAAAxD,EAAAwD,EAAAohB,aAAA,GAAAphB,EAAAqhB,cAAAI,aAAAzhB,EAAAohB,eAAA,GAAA5kB,IAAAwD,EAAAohB,aAAA,GAAA5kB,IACnT,QAAAglB,IAAAxhB,GAAe,aAAAA,IAAiB,2EAAAA,EAAmF,mBAAkM,QAAAiiB,IAAAjiB,EAAAE,EAAA1D,GAA8E,MAA3DwD,GAAA8Q,EAAA8K,UAAAsG,GAAAC,OAAAniB,EAAAE,EAAA1D,GAA+BwD,EAAAiM,KAAA,SAAgBiR,EAAA1gB,GAAM0d,EAAAla,GAAMA,EAA6B,QAAAoiB,IAAApiB,GAAe+Y,EAAA/Y,GAAA,GAAS,QAAAqiB,IAAAriB,GAA2B,GAAA6e,GAAZvF,EAAAtZ,IAAY,MAAAA,GACnd,QAAAsiB,IAAAtiB,EAAAE,GAAiB,cAAAF,EAAA,MAAAE,GAAoH,QAAAqiB,MAAcC,QAAAC,YAAA,mBAAAC,IAAAC,GAAAH,GAAA,MAAuD,QAAAE,IAAA1iB,GAAe,UAAAA,EAAA6gB,cAAAwB,GAAAM,MAAA3iB,EAAAiiB,GAAAU,GAAA3iB,EAAA+d,EAAA/d,IAAA0d,EAAA0E,GAAApiB,IAA8D,QAAA4iB,IAAA5iB,EAAAE,EAAA1D,GAAmB,UAAAwD,GAAAuiB,KAAAC,GAAAtiB,EAAAyiB,GAAAnmB,EAAAgmB,GAAAK,YAAA,mBAAAH,KAAA,SAAA1iB,GAAAuiB,KAAoF,QAAAO,IAAA9iB,GAAe,uBAAAA,GAAA,UAAAA,GAAA,YAAAA,EAAA,MAAAqiB,IAAAM,IAC7Y,QAAAI,IAAA/iB,EAAAE,GAAiB,aAAAF,EAAA,MAAAqiB,IAAAniB,GAA4B,QAAA8iB,IAAAhjB,EAAAE,GAAiB,aAAAF,GAAA,WAAAA,EAAA,MAAAqiB,IAAAniB,GAEX,QAAA+iB,IAAAjjB,GAAe,GAAAE,GAAAE,KAAA8a,WAAuB,OAAAhb,GAAAgjB,iBAAAhjB,EAAAgjB,iBAAAljB,QAAAmjB,GAAAnjB,OAAAE,EAAAF,GAAoE,QAAAojB,MAAc,MAAAH,IAItJ,QAAAI,IAAArjB,GAAe,GAAAE,GAAAF,CAAQ,IAAAA,EAAAoa,UAAA,KAAoBla,EAAAuZ,QAASvZ,IAAAuZ,WAAY,CAAK,UAAAvZ,EAAAojB,WAAA,QAAgC,MAAKpjB,EAAAuZ,QAAS,GAAAvZ,IAAAuZ,OAAA,OAAAvZ,EAAAojB,WAAA,SAA4C,WAAApjB,EAAAmZ,IAAA,IAAqB,QAAAkK,IAAAvjB,GAAe,IAAAqjB,GAAArjB,IAAAuT,EAAA,OACxN,QAAAiQ,IAAAxjB,GAAe,GAAAE,GAAAF,EAAAoa,SAAkB,KAAAla,EAAA,MAAAA,GAAAmjB,GAAArjB,GAAA,IAAAE,GAAAqT,EAAA,WAAArT,EAAA,KAAAF,CAAwD,QAAAxD,GAAAwD,EAAAvD,EAAAyD,IAAiB,CAAE,GAAAqC,GAAA/F,EAAAid,OAAA7W,EAAAL,IAAA6X,UAAA,IAAoC,KAAA7X,IAAAK,EAAA,KAAgB,IAAAL,EAAAkhB,QAAA7gB,EAAA6gB,MAAA,CAAsB,OAAArhB,GAAAG,EAAAkhB,MAAkBrhB,GAAE,CAAE,GAAAA,IAAA5F,EAAA,MAAA+mB,IAAAhhB,GAAAvC,CAAwB,IAAAoC,IAAA3F,EAAA,MAAA8mB,IAAAhhB,GAAArC,CAAwBkC,KAAAshB,QAAYnQ,EAAA,OAAS,GAAA/W,EAAAid,SAAAhd,EAAAgd,OAAAjd,EAAA+F,EAAA9F,EAAAmG,MAA+B,CAAKR,GAAA,CAAK,QAAA4O,GAAAzO,EAAAkhB,MAAkBzS,GAAE,CAAE,GAAAA,IAAAxU,EAAA,CAAU4F,GAAA,EAAK5F,EAAA+F,EAAI9F,EAAAmG,CAAI,OAAM,GAAAoO,IAAAvU,EAAA,CAAU2F,GAAA,EAAK3F,EAAA8F,EAAI/F,EAAAoG,CAAI,OAAMoO,IAAA0S,QAAY,IAAAthB,EAAA,CAAO,IAAA4O,EAAApO,EAAA6gB,MAAczS,GAAE,CAAE,GAAAA,IAAAxU,EAAA,CAAU4F,GAAA,EAAK5F,EAAAoG,EAAInG,EAAA8F,CAAI,OAAM,GAAAyO,IAAAvU,EAAA,CAAU2F,GAAA,EAAK3F,EAAAmG,EAAIpG,EAAA+F,CAAI,OAAMyO,IAAA0S,QAAYthB,GACrfmR,EAAA,QAAiB/W,EAAA4d,YAAA3d,GAAA8W,EAAA,OAA0D,MAA1B,KAAA/W,EAAA6c,KAAA9F,EAAA,OAA0B/W,EAAAoc,UAAAlH,UAAAlV,EAAAwD,EAAAE,EAAmC,QAAAyjB,IAAA3jB,GAAuB,KAARA,EAAAwjB,GAAAxjB,IAAQ,WAAkB,QAAAE,GAAAF,IAAa,CAAE,OAAAE,EAAAmZ,KAAA,IAAAnZ,EAAAmZ,IAAA,MAAAnZ,EAAiC,IAAAA,EAAAujB,MAAAvjB,EAAAujB,MAAAhK,OAAAvZ,MAAAujB,UAAsC,CAAK,GAAAvjB,IAAAF,EAAA,KAAe,OAAKE,EAAAwjB,SAAW,CAAE,IAAAxjB,EAAAuZ,QAAAvZ,EAAAuZ,SAAAzZ,EAAA,WAAuCE,KAAAuZ,OAAWvZ,EAAAwjB,QAAAjK,OAAAvZ,EAAAuZ,OAA0BvZ,IAAAwjB,SAAa,YAC5W,QAAAE,IAAA5jB,GAAuB,KAARA,EAAAwjB,GAAAxjB,IAAQ,WAAkB,QAAAE,GAAAF,IAAa,CAAE,OAAAE,EAAAmZ,KAAA,IAAAnZ,EAAAmZ,IAAA,MAAAnZ,EAAiC,IAAAA,EAAAujB,OAAA,IAAAvjB,EAAAmZ,IAAAnZ,EAAAujB,MAAAhK,OAAAvZ,MAAAujB,UAAiD,CAAK,GAAAvjB,IAAAF,EAAA,KAAe,OAAKE,EAAAwjB,SAAW,CAAE,IAAAxjB,EAAAuZ,QAAAvZ,EAAAuZ,SAAAzZ,EAAA,WAAuCE,KAAAuZ,OAAWvZ,EAAAwjB,QAAAjK,OAAAvZ,EAAAuZ,OAA0BvZ,IAAAwjB,SAAa,YACzQ,QAAAG,IAAA7jB,GAAe,GAAAE,GAAAF,EAAA+b,OAAuF,OAAvE,YAAA/b,GAAA,KAAAA,IAAA8jB,WAAA,KAAA5jB,IAAAF,EAAA,IAAAA,EAAAE,EAAwD,KAAAF,MAAA,IAAe,IAAAA,GAAA,KAAAA,IAAA,EAMoE,QAAA+jB,IAAA/jB,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAA,EAAWA,KAAA,EAAO,IAAAvD,GAAA,MAAAuD,EAAA,GAAA2M,cAAA3M,EAAAmI,MAAA,GAA2CjI,IAAGkX,yBAAyB4M,QAAAvnB,EAAAwnB,SAAAxnB,EAAA,WAA+Bgb,cAAAjb,GAAA0nB,cAAAhkB,GAAmCikB,GAAAnkB,GAAAE,EAAQkkB,GAAA5nB,GAAA0D,EAKxV,QAAAmkB,IAAArkB,GAAe,GAAAE,GAAAF,EAAAskB,UAAmB,IAAG,IAAApkB,EAAA,CAAOF,EAAAukB,UAAAjjB,KAAApB,EAAoB,OAAM,GAAA1D,EAAM,KAAAA,EAAA0D,EAAQ1D,EAAAid,QAASjd,IAAAid,MAAuD,MAA3Cjd,EAAA,IAAAA,EAAA6c,IAAA,KAAA7c,EAAAoc,UAAA4L,eAA2C,KAAYxkB,GAAAukB,UAAAjjB,KAAApB,GAAoBA,EAAAiZ,EAAA3c,SAAQ0D,EAAS,KAAA1D,EAAA,EAAQA,EAAAwD,EAAAukB,UAAAllB,OAAqB7C,IAAA0D,EAAAF,EAAAukB,UAAA/nB,GAAA0c,EAAAlZ,EAAAykB,aAAAvkB,EAAAF,EAAAkb,YAAA6C,EAAA/d,EAAAkb,cAAoF,QAAAwJ,IAAA1kB,GAAe2kB,KAAA3kB,EAAO,QAAAkR,IAAAlR,EAAAE,GAAgB,IAAAA,EAAA,WAAkB,IAAA1D,IAAAooB,GAAA5kB,GAAA6kB,GAAAC,IAAAhjB,KAAA,KAAA9B,EAAiCE,GAAA6kB,iBAAA/kB,EAAAxD,GAAA,GACrZ,QAAAwoB,IAAAhlB,EAAAE,GAAiB,IAAAA,EAAA,WAAkB,IAAA1D,IAAAooB,GAAA5kB,GAAA6kB,GAAAC,IAAAhjB,KAAA,KAAA9B,EAAiCE,GAAA6kB,iBAAA/kB,EAAAxD,GAAA,GAA2B,QAAAqoB,IAAA7kB,EAAAE,GAAiBsd,EAAAsH,GAAA9kB,EAAAE,GAAW,QAAA4kB,IAAA9kB,EAAAE,GAAiB,GAAAykB,GAAA,CAAO,GAAAnoB,GAAAuhB,EAAA7d,EAA2E,IAA/D1D,EAAA2c,EAAA3c,GAAQ,OAAAA,GAAA,iBAAAA,GAAA6c,KAAA,IAAAgK,GAAA7mB,OAAA,MAAuDyoB,GAAA5lB,OAAA,CAAc,GAAA5C,GAAAwoB,GAAAhT,KAAexV,GAAAgoB,aAAAzkB,EAAiBvD,EAAAye,YAAAhb,EAAgBzD,EAAA6nB,WAAA9nB,EAAewD,EAAAvD,MAAIuD,IAAQykB,aAAAzkB,EAAAkb,YAAAhb,EAAAokB,WAAA9nB,EAAA+nB,aAAwD,KAAI7G,EAAA2G,GAAArkB,GAAS,QAAQA,EAAAykB,aAAA,KAAAzkB,EAAAkb,YAAA,KAAAlb,EAAAskB,WAAA,KAAAtkB,EAAAukB,UAAAllB,OAAA,KAAA4lB,GAAA5lB,QAAA4lB,GAAA3jB,KAAAtB,KAC5L,QAAAklB,IAAAllB,GAAqF,MAAtEnD,QAAAS,UAAAC,eAAAjB,KAAA0D,EAAAmlB,MAAAnlB,EAAAmlB,IAAAC,KAAAC,GAAArlB,EAAAmlB,SAAsEE,GAAArlB,EAAAmlB,KAAiB,QAAAG,IAAAtlB,GAAe,KAAKA,KAAAulB,YAAgBvlB,IAAAulB,UAAgB,OAAAvlB,GAClW,QAAAwlB,IAAAxlB,EAAAE,GAAiB,GAAA1D,GAAA8oB,GAAAtlB,EAAYA,GAAA,CAAI,QAAAvD,GAAUD,GAAE,CAAE,OAAAA,EAAA0hB,SAAA,CAA4C,GAAzBzhB,EAAAuD,EAAAxD,EAAAipB,YAAApmB,OAAyBW,GAAAE,GAAAzD,GAAAyD,EAAA,OAAqBiH,KAAA3K,EAAAkpB,OAAAxlB,EAAAF,EAAmBA,GAAAvD,EAAIuD,EAAA,CAAG,KAAKxD,GAAE,CAAE,GAAAA,EAAAmpB,YAAA,CAAkBnpB,IAAAmpB,WAAgB,MAAA3lB,GAAQxD,IAAA4c,WAAe5c,MAAA,GAASA,EAAA8oB,GAAA9oB,IAAS,QAAAopB,IAAA5lB,GAAe,GAAAE,GAAAF,KAAA6d,UAAA7d,EAAA6d,SAAApV,aAA8C,OAAAvI,KAAA,UAAAA,IAAA,SAAAF,EAAAiM,MAAA,WAAAjM,EAAAiM,MAAA,QAAAjM,EAAAiM,MAAA,QAAAjM,EAAAiM,MAAA,aAAAjM,EAAAiM,OAAA,aAAA/L,GAAA,SAAAF,EAAA6lB,iBAE3R,QAAAC,IAAA9lB,EAAAE,GAAiB,GAAA6lB,IAAA,MAAAC,SAAAC,KAAA,WAAuC,IAAAzpB,GAAAwpB,EAAkP,OAAzO,kBAAAxpB,IAAAopB,GAAAppB,MAA+B0pB,MAAA1pB,EAAA2pB,eAAAC,IAAA5pB,EAAA6pB,cAA0C7jB,OAAA8jB,cAAA9pB,EAAAgG,OAAA8jB,eAAA9pB,GAAiD+pB,WAAA/pB,EAAA+pB,WAAAC,aAAAhqB,EAAAgqB,aAAAC,UAAAjqB,EAAAiqB,UAAAC,YAAAlqB,EAAAkqB,cAAoGlqB,MAAA,GAAWmqB,IAAAC,GAAAD,GAAAnqB,GAAA,MAAAmqB,GAAAnqB,EAAAwD,EAAA8Q,EAAA8K,UAAAiL,GAAAC,OAAAC,GAAA/mB,EAAAE,GAAAF,EAAAiM,KAAA,SAAAjM,EAAAjB,OAAAinB,GAAA9L,EAAAla,MAO7L,QAAAgnB,IAAAhnB,GAAe,GAAAE,GAAA,EAAuG,OAA9F+mB,IAAA5S,SAAA1V,QAAAqB,EAAA,SAAAA,GAAkC,MAAAA,GAAA,iBAAAA,IAAA,iBAAAA,KAAAE,GAAAF,KAA4DE,EAAS,QAAAgnB,IAAAlnB,EAAAE,GAA2E,MAA1DF,GAAAxC,IAAK4T,aAAA,IAAgBlR,IAAIA,EAAA8mB,GAAA9mB,EAAAkR,aAAApR,EAAAoR,SAAAlR,GAAiCF,EACvT,QAAAmnB,IAAAnnB,EAAAE,EAAA1D,EAAAC,GAAiC,GAAZuD,IAAAiE,QAAY/D,EAAA,CAAMA,IAAK,QAAAqC,GAAA,EAAYA,EAAA/F,EAAA6C,OAAWkD,IAAArC,EAAA,IAAA1D,EAAA+F,KAAA,CAAmB,KAAA/F,EAAA,EAAQA,EAAAwD,EAAAX,OAAW7C,IAAA+F,EAAArC,EAAA3C,eAAA,IAAAyC,EAAAxD,GAAAyF,OAAAjC,EAAAxD,GAAA4qB,WAAA7kB,IAAAvC,EAAAxD,GAAA4qB,SAAA7kB,MAAA9F,IAAAuD,EAAAxD,GAAA6qB,iBAAA,OAA4G,CAAmB,IAAd7qB,EAAA,GAAAA,EAAO0D,EAAA,KAAOqC,EAAA,EAAQA,EAAAvC,EAAAX,OAAWkD,IAAA,CAAK,GAAAvC,EAAAuC,GAAAN,QAAAzF,EAAiE,MAA9CwD,GAAAuC,GAAA6kB,UAAA,OAAiB3qB,IAAAuD,EAAAuC,GAAA8kB,iBAAA,GAAoC,QAAAnnB,GAAAF,EAAAuC,GAAAuW,WAAA5Y,EAAAF,EAAAuC,IAAkC,OAAArC,MAAAknB,UAAA,IAC1W,QAAAE,IAAAtnB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAA+B,KAAcjC,GAAAqhB,eAAiBI,aAAA,MAAAjlB,IAAA0D,EAAAkhB,aAAAmG,cAAArnB,EAAAsnB,UAAgE,QAAAC,IAAAznB,EAAAE,GAAgE,MAA/C,OAAAA,EAAAwnB,yBAAAnU,EAAA,MAA+C/V,MAAW0C,GAAI+B,UAAA,GAAAmf,iBAAA,GAAAhQ,SAAA,GAAApR,EAAAqhB,cAAAI,eAA4E,QAAAkG,IAAA3nB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAA+B,KAAc,OAAAzF,MAAA0D,EAAAkhB,aAAAlhB,IAAAkR,SAAA,MAAAlR,IAAA,MAAA1D,GAAA+W,EAAA,MAAArL,MAAAoB,QAAApJ,KAAA,GAAAA,EAAAb,QAAAkU,EAAA,MAAArT,IAAA,IAAA1D,EAAA,GAAA0D,GAAA,MAAA1D,MAAA,KAAwJwD,EAAAqhB,eAAiBI,aAAA,GAAAjlB,GACnd,QAAAorB,IAAA5nB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAA+B,KAAc,OAAAzF,MAAA,GAAAA,MAAAwD,EAAAiC,QAAAjC,EAAAiC,MAAAzF,GAAA,MAAA0D,EAAAkhB,eAAAphB,EAAAohB,aAAA5kB,IAAoF,MAAA0D,EAAAkhB,eAAAphB,EAAAohB,aAAAlhB,EAAAkhB,cAAsD,QAAAyG,IAAA7nB,GAAe,GAAAE,GAAAF,EAAAylB,WAAoBvlB,KAAAF,EAAAqhB,cAAAI,eAAAzhB,EAAAiC,MAAA/B,GAC5M,QAAA4nB,IAAA9nB,GAAe,OAAAA,GAAU,4CAA8C,sDAAuD,+CAA8C,QAAA+nB,IAAA/nB,EAAAE,GAAiB,aAAAF,GAAA,iCAAAA,EAAA8nB,GAAA5nB,GAAA,+BAAAF,GAAA,kBAAAE,EAAA,+BAAAF,EAE7L,QAAAgoB,IAAAhoB,EAAAE,GAAiB,GAAAA,EAAA,CAAM,GAAA1D,GAAAwD,EAAAulB,UAAmB,IAAA/oB,OAAAwD,EAAAioB,WAAA,IAAAzrB,EAAA0hB,SAAqD,YAAd1hB,EAAA0rB,UAAAhoB,GAAsBF,EAAAylB,YAAAvlB,EAGvG,QAAAioB,IAAAnoB,EAAAE,GAAiBF,IAAAooB,KAAU,QAAA5rB,KAAA0D,GAAA,GAAAA,EAAA3C,eAAAf,GAAA,CAAuC,GAAAC,GAAA,IAAAD,EAAAqQ,QAAA,MAA0BtK,EAAA/F,EAAQoG,EAAA1C,EAAA1D,EAAW+F,GAAA,MAAAK,GAAA,kBAAAA,IAAA,KAAAA,EAAA,GAAAnG,GAAA,iBAAAmG,IAAA,IAAAA,GAAAylB,GAAA9qB,eAAAgF,IAAA8lB,GAAA9lB,IAAA,GAAAK,GAAAyK,OAAAzK,EAAA,KAA2H,UAAApG,MAAA,YAA4BC,EAAAuD,EAAAsoB,YAAA9rB,EAAA+F,GAAAvC,EAAAxD,GAAA+F,GACtQ,QAAAgmB,IAAAvoB,EAAAE,EAAA1D,GAAmB0D,IAAAsoB,GAAAxoB,KAAA,MAAAE,EAAAkR,UAAA,MAAAlR,EAAAwnB,0BAAAnU,EAAA,MAAAvT,EAAAxD,KAAA,MAAA0D,EAAAwnB,0BAAA,MAAAxnB,EAAAkR,UAAAmC,EAAA,uBAAArT,GAAAwnB,yBAAA,UAAAxnB,GAAAwnB,yBAAAnU,EAAA,aAAArT,EAAAkoB,OAAA,iBAAAloB,GAAAkoB,OAAA7U,EAAA,KAAA/W,MACnB,QAAAisB,IAAAzoB,EAAAE,GAAiB,QAAAF,EAAA6M,QAAA,4BAAA3M,GAAAwoB,EAAoD,QAAA1oB,GAAU,yKAAkL,mBACjQ,QAAA2oB,IAAA3oB,EAAAE,GAAiBF,EAAA,IAAAA,EAAAke,UAAA,KAAAle,EAAAke,SAAAle,IAAA+hB,aAAoD,IAAAvlB,GAAA0oB,GAAAllB,EAAYE,GAAAsX,GAAAtX,EAAQ,QAAAzD,GAAA,EAAYA,EAAAyD,EAAAb,OAAW5C,IAAA,CAAK,GAAA8F,GAAArC,EAAAzD,EAAW,KAAAD,EAAAe,eAAAgF,KAAA/F,EAAA+F,GAAA,CAAgC,OAAAA,GAAU,aAAAyiB,GAAA,SAAAhlB,EAA6B,MAAM,wBAAAglB,GAAA,QAAAhlB,GAAuCglB,GAAA,OAAAhlB,GAAaxD,EAAAosB,MAAA,EAAUpsB,EAAAqsB,OAAA,CAAW,MAAM,0BAAA1K,GAAA5b,GAAA,IAAAyiB,GAAAziB,EAAAvC,EAA6C,MAAM,6CAAgD,cAAA8oB,GAAAjc,QAAAtK,IAAA2O,GAAA3O,EAAAvC,GAAmCxD,EAAA+F,IAAA,IACla,QAAAwmB,IAAA/oB,EAAAE,EAAA1D,EAAAC,GAAsS,MAAjRD,GAAA,IAAAA,EAAA0hB,SAAA1hB,IAAAulB,cAAmCtlB,IAAAusB,GAAAC,OAAAxsB,EAAAqrB,GAAA9nB,IAAuBvD,IAAAusB,GAAAC,KAAA,WAAAjpB,KAAAxD,EAAA2T,cAAA,OAAAnQ,EAAAkpB,UAAA,qBAAAlpB,IAAAmpB,YAAAnpB,EAAAulB,aAAAvlB,EAAA,iBAAAE,GAAAwoB,GAAAlsB,EAAA2T,cAAAnQ,GAAiK0oB,GAAAxoB,EAAAwoB,KAAQlsB,EAAA2T,cAAAnQ,KAAAxD,EAAA4sB,gBAAA3sB,EAAAuD,GAA8CA,EAAS,QAAAqpB,IAAArpB,EAAAE,GAAiB,WAAAA,EAAAge,SAAAhe,IAAA6hB,eAAA1a,eAAArH,GAChU,QAAAspB,IAAAtpB,EAAAE,EAAA1D,EAAAC,GAAqB,GAAA8F,GAAAkmB,GAAAvoB,EAAA1D,EAAc,QAAA0D,GAAU,0BAAAgR,GAAA,OAAAlR,EAAwC,IAAA4C,GAAApG,CAAQ,MAAM,6BAAAoG,EAAA,EAAkCA,EAAAkmB,GAAAzpB,OAAYuD,IAAAsO,GAAA4X,GAAAlmB,GAAA5C,EAAe4C,GAAApG,CAAI,MAAM,cAAA0U,GAAA,QAAAlR,GAA2B4C,EAAApG,CAAI,MAAM,kCAAA0U,GAAA,QAAAlR,GAAiDkR,GAAA,OAAAlR,GAAY4C,EAAApG,CAAI,MAAM,YAAA0U,GAAA,QAAAlR,GAAyBkR,GAAA,SAAAlR,GAAc4C,EAAApG,CAAI,MAAM,eAAA0U,GAAA,SAAAlR,GAA6B4C,EAAApG,CAAI,MAAM,aAAA+kB,GAAAvhB,EAAAxD,GAAqBoG,EAAAse,GAAAlhB,EAAAxD,GAAU0U,GAAA,UAAAlR,GAAe2oB,GAAAlsB,EAAA,WAAiB,MAAM,cAAAmG,EAAAskB,GAAAlnB,EAAAxD,EAAwB,MAAM,cAAA8qB,GAAAtnB,EAAAxD,GAAsBoG,EAAApF,MAAMhB,GAAIyF,UAAA,KACjfiP,GAAA,UAAAlR,GAAe2oB,GAAAlsB,EAAA,WAAiB,MAAM,gBAAAkrB,GAAA3nB,EAAAxD,GAAwBoG,EAAA6kB,GAAAznB,EAAAxD,GAAU0U,GAAA,UAAAlR,GAAe2oB,GAAAlsB,EAAA,WAAiB,MAAM,SAAAmG,EAAApG,EAAY+rB,GAAAroB,EAAA0C,EAAA2mB,GAAW,IAAAvY,GAAA5O,EAAAQ,CAAU,KAAAoO,IAAA5O,GAAA,GAAAA,EAAA7E,eAAAyT,GAAA,CAAmC,GAAA+B,GAAA3Q,EAAA4O,EAAW,WAAAA,EAAAmX,GAAAnoB,EAAA+S,EAAAwW,IAAA,4BAAAvY,EAAA,OAAA+B,MAAAyW,WAAA,KAAAC,GAAAzpB,EAAA+S,GAAA,aAAA/B,EAAA,iBAAA+B,IAAA,aAAA7S,GAAA,KAAA6S,IAAAiV,GAAAhoB,EAAA+S,GAAA,iBAAAA,IAAAiV,GAAAhoB,EAAA,GAAA+S,GAAA,mCAAA/B,GAAA,6BAAAA,GAAA,cAAAA,IAAAuG,GAAAha,eAAAyT,GAAA,MAAA+B,GAAA4V,GAAAlsB,EAC7LuU,GAAA,MAAA+B,GAAAgO,GAAA/gB,EAAAgR,EAAA+B,EAAAxQ,IAAyB,OAAArC,GAAU,YAAA0e,GAAA5e,GAAmB8hB,GAAA9hB,EAAAxD,GAAA,EAAW,MAAM,gBAAAoiB,GAAA5e,GAAsB6nB,GAAA7nB,EAAAxD,EAAQ,MAAM,oBAAAA,EAAAyF,OAAAjC,EAAAoe,aAAA,QAAA5hB,EAAAyF,MAA6D,MAAM,cAAAjC,EAAAwnB,WAAAhrB,EAAAgrB,SAAsCtnB,EAAA1D,EAAAyF,MAAU,MAAA/B,EAAAinB,GAAAnnB,IAAAxD,EAAAgrB,SAAAtnB,GAAA,SAAA1D,EAAA4kB,cAAA+F,GAAAnnB,IAAAxD,EAAAgrB,SAAAhrB,EAAA4kB,cAAA,EAA2F,MAAM,4BAAAxe,GAAA8mB,UAAA1pB,EAAA2pB,QAAAzW,KAC/T,QAAA0W,IAAA5pB,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB,GAAAK,GAAA,IAAW,QAAA1C,GAAU,YAAA1D,EAAA0kB,GAAAlhB,EAAAxD,GAAuBC,EAAAykB,GAAAlhB,EAAAvD,GAAUmG,IAAK,MAAM,cAAApG,EAAA0qB,GAAAlnB,EAAAxD,GAAwBC,EAAAyqB,GAAAlnB,EAAAvD,GAAUmG,IAAK,MAAM,cAAApG,EAAAgB,MAAoBhB,GAAIyF,UAAA,KAAexF,EAAAe,MAAMf,GAAIwF,UAAA,KAAeW,IAAK,MAAM,gBAAApG,EAAAirB,GAAAznB,EAAAxD,GAA0BC,EAAAgrB,GAAAznB,EAAAvD,GAAUmG,IAAK,MAAM,4BAAApG,GAAAktB,SAAA,mBAAAjtB,GAAAitB,UAAA1pB,EAAA2pB,QAAAzW,IAAoFqV,GAAAroB,EAAAzD,EAAA8sB,IAAWrpB,EAAAF,MAAA,EAAW,IAAAoC,GAAA,IAAW,KAAApC,IAAAxD,GAAA,IAAAC,EAAAc,eAAAyC,IAAAxD,EAAAe,eAAAyC,IAAA,MAAAxD,EAAAwD,GAAA,aAAAA,EAAA,CAAoF,GAAAgR,GAAAxU,EAAAwD,EAAW,KAAAE,IAAA8Q,KAAAzT,eAAA2C,KAAAkC,IACndA,MAAKA,EAAAlC,GAAA,QAAW,4BAAAF,GAAA,aAAAA,GAAA,mCAAAA,GAAA,6BAAAA,GAAA,cAAAA,IAAAuX,GAAAha,eAAAyC,GAAA4C,oBAAAtB,KAAAtB,EAAA,MAAkM,KAAAA,IAAAvD,GAAA,CAAY,GAAAsW,GAAAtW,EAAAuD,EAAiC,IAAtBgR,EAAA,MAAAxU,IAAAwD,OAAA,GAAsBvD,EAAAc,eAAAyC,IAAA+S,IAAA/B,IAAA,MAAA+B,GAAA,MAAA/B,GAAA,aAAAhR,EAAA,GAAAgR,EAAA,CAAuE,IAAA9Q,IAAA8Q,MAAAzT,eAAA2C,IAAA6S,KAAAxV,eAAA2C,KAAAkC,UAAkEA,EAAAlC,GAAA,GAAW,KAAAA,IAAA6S,KAAAxV,eAAA2C,IAAA8Q,EAAA9Q,KAAA6S,EAAA7S,KAAAkC,UAAsDA,EAAAlC,GAAA6S,EAAA7S,QAAakC,KAAAQ,YAAAtB,KAAAtB,EAAAoC,IACtdA,EAAA2Q,MAAI,4BAAA/S,GAAA+S,MAAAyW,WAAA,GAAAxY,MAAAwY,WAAA,SAAAzW,GAAA/B,IAAA+B,IAAAnQ,SAAAtB,KAAAtB,EAAA,GAAA+S,IAAA,aAAA/S,EAAAgR,IAAA+B,GAAA,iBAAAA,IAAA,iBAAAA,KAAAnQ,SAAAtB,KAAAtB,EAAA,GAAA+S,GAAA,mCAAA/S,GAAA,6BAAAA,IAAAuX,GAAAha,eAAAyC,IAAA,MAAA+S,GAAA4V,GAAApmB,EAAAvC,GAAA4C,GAAAoO,IAAA+B,IAAAnQ,iBAAAtB,KAAAtB,EAAA+S,IAA4X,MAA7B3Q,KAAAQ,SAAAtB,KAAA,QAAAc,GAA6BQ,EAChY,QAAAinB,IAAA7pB,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB,UAAA/F,GAAA,UAAA+F,EAAA0J,MAAA,MAAA1J,EAAA7F,MAAAilB,GAAA3hB,EAAAuC,GAAqDkmB,GAAAjsB,EAAAC,GAAQA,EAAAgsB,GAAAjsB,EAAA+F,EAAU,QAAAK,GAAA,EAAYA,EAAA1C,EAAAb,OAAWuD,GAAA,GAAM,GAAAR,GAAAlC,EAAA0C,GAAAoO,EAAA9Q,EAAA0C,EAAA,EAAoB,WAAAR,EAAA+lB,GAAAnoB,EAAAgR,EAAAuY,IAAA,4BAAAnnB,EAAAqnB,GAAAzpB,EAAAgR,GAAA,aAAA5O,EAAA4lB,GAAAhoB,EAAAgR,GAAA+P,GAAA/gB,EAAAoC,EAAA4O,EAAAvU,GAAgG,OAAAD,GAAU,YAAAolB,GAAA5hB,EAAAuC,EAAqB,MAAM,gBAAAqlB,GAAA5nB,EAAAuC,EAAwB,MAAM,cAAAvC,EAAAqhB,cAAAI,iBAAA,GAAAvhB,EAAAF,EAAAqhB,cAAAkG,YAAAvnB,EAAAqhB,cAAAkG,cAAAhlB,EAAAilB,SAAAhrB,EAAA+F,EAAAN,MAAA,MAAAzF,EAAA2qB,GAAAnnB,IAAAuC,EAAAilB,SAAAhrB,GAAA,GAAA0D,MAAAqC,EAAAilB,WAAA,MAAAjlB,EAAA6e,aAClT+F,GAAAnnB,IAAAuC,EAAAilB,SAAAjlB,EAAA6e,cAAA,GAAA+F,GAAAnnB,IAAAuC,EAAAilB,SAAAjlB,EAAAilB,YAAA,SACA,QAAAsC,IAAA9pB,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB,OAAArC,GAAU,0BAAAgR,GAAA,OAAAlR,EAAwC,MAAM,6BAAAvD,EAAA,EAAkCA,EAAAqsB,GAAAzpB,OAAY5C,IAAAyU,GAAA4X,GAAArsB,GAAAuD,EAAe,MAAM,cAAAkR,GAAA,QAAAlR,EAA2B,MAAM,kCAAAkR,GAAA,QAAAlR,GAAiDkR,GAAA,OAAAlR,EAAY,MAAM,YAAAkR,GAAA,QAAAlR,GAAyBkR,GAAA,SAAAlR,EAAc,MAAM,eAAAkR,GAAA,SAAAlR,EAA6B,MAAM,aAAAuhB,GAAAvhB,EAAAxD,GAAqB0U,GAAA,UAAAlR,GAAe2oB,GAAApmB,EAAA,WAAiB,MAAM,cAAA+kB,GAAAtnB,EAAAxD,GAAsB0U,GAAA,UAAAlR,GAAe2oB,GAAApmB,EAAA,WAAiB,MAAM,gBAAAolB,GAAA3nB,EAAAxD,GAAA0U,GAAA,UAAAlR,GAAA2oB,GAAApmB,EAAA,YAAwDgmB,GAAAroB,EACrf1D,EAAA+sB,IAAM9sB,EAAA,IAAO,QAAAmG,KAAApG,GAAA,GAAAA,EAAAe,eAAAqF,GAAA,CAAuC,GAAAR,GAAA5F,EAAAoG,EAAW,cAAAA,EAAA,iBAAAR,GAAApC,EAAAylB,cAAArjB,IAAA3F,GAAA,WAAA2F,IAAA,iBAAAA,IAAApC,EAAAylB,cAAA,GAAArjB,IAAA3F,GAAA,cAAA2F,IAAAmV,GAAAha,eAAAqF,IAAA,MAAAR,GAAAumB,GAAApmB,EAAAK,GAAiL,OAAA1C,GAAU,YAAA0e,GAAA5e,GAAmB8hB,GAAA9hB,EAAAxD,GAAA,EAAW,MAAM,gBAAAoiB,GAAA5e,GAAsB6nB,GAAA7nB,EAAAxD,EAAQ,MAAM,gCAAkC,4BAAAA,GAAAktB,UAAA1pB,EAAA2pB,QAAAzW,IAAqD,MAAAzW,GAAS,QAAAstB,IAAA/pB,EAAAE,GAAiB,MAAAF,GAAAkoB,YAAAhoB,EAE7I,QAAA8pB,IAAAhqB,EAAAE,GAAiB,OAAAF,GAAU,6DAAAE,EAAA+pB,UAA6E,SAC9Y,QAAAC,IAAAlqB,EAAAE,GAAiB,mBAAAF,GAAA,iBAAAE,GAAAkR,UAAA,iBAAAlR,GAAAkR,UAAA,iBAAAlR,GAAAwnB,yBAAA,OAAAxnB,EAAAwnB,yBAAA,iBAAAxnB,GAAAwnB,wBAAA8B,OAA0O,QAAAW,IAAAnqB,GAAe,IAAAA,IAAA2lB,YAAoB3lB,GAAA,IAAAA,EAAAke,UAAA,IAAAle,EAAAke,UAAkCle,IAAA2lB,WAAiB,OAAA3lB,GAAS,QAAAoqB,IAAApqB,GAAe,IAAAA,IAAAulB,WAAmBvlB,GAAA,IAAAA,EAAAke,UAAA,IAAAle,EAAAke,UAAkCle,IAAA2lB,WAAiB,OAAA3lB,GAAiC,QAAAqqB,IAAArqB,GAAe,OAAO0R,QAAA1R,GACte,QAAA+Q,IAAA/Q,GAAc,EAAAsqB,KAAAtqB,EAAA0R,QAAA6Y,GAAAD,IAAAC,GAAAD,IAAA,KAAAA,MAA0C,QAAA3Y,IAAA3R,EAAAE,GAAgBoqB,KAAKC,GAAAD,IAAAtqB,EAAA0R,QAAiB1R,EAAA0R,QAAAxR,EAAyC,QAAAsqB,IAAAxqB,GAAe,MAAAyqB,IAAAzqB,GAAA0qB,GAAAC,GAAAjZ,QACtJ,QAAAkZ,IAAA5qB,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAAiM,KAAA4e,YAA0B,KAAAruB,EAAA,MAAAsuB,GAAgB,IAAAruB,GAAAuD,EAAA4Y,SAAkB,IAAAnc,KAAAsuB,8CAAA7qB,EAAA,MAAAzD,GAAAuuB,yCAA2G,IAAQpoB,GAARL,IAAW,KAAAK,IAAApG,GAAA+F,EAAAK,GAAA1C,EAAA0C,EAAsI,OAAjHnG,KAAAuD,IAAA4Y,UAAA5Y,EAAA+qB,4CAAA7qB,EAAAF,EAAAgrB,0CAAAzoB,GAAiHA,EAAS,QAAAkoB,IAAAzqB,GAAe,WAAAA,EAAAqZ,KAAA,MAAArZ,EAAAiM,KAAAgf,kBAAiD,QAAAC,IAAAlrB,GAAeyqB,GAAAzqB,KAAA+Q,GAAA+B,GAAA9S,GAAA+Q,GAAA4Z,GAAA3qB,IAAwB,QAAAmrB,IAAAnrB,GAAe+Q,GAAA+B,GAAA9S,GAAO+Q,GAAA4Z,GAAA3qB,GAC/c,QAAAorB,IAAAprB,EAAAE,EAAA1D,GAAmBmuB,GAAAjZ,UAAAoZ,IAAAvX,EAAA,OAAgC5B,GAAAgZ,GAAAzqB,EAAAF,GAAU2R,GAAAmB,GAAAtW,EAAAwD,GAAS,QAAAqrB,IAAArrB,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAA4Y,UAAAnc,EAAAuD,EAAAiM,KAAAgf,iBAA6C,uBAAAzuB,GAAA8uB,gBAAA,MAAAprB,EAAkD1D,KAAA8uB,iBAAsB,QAAA/oB,KAAA/F,GAAA+F,IAAA9F,IAAA8W,EAAA,MAAA0L,GAAAjf,IAAA,UAAAuC,EAAyD,OAAA/E,OAAW0C,EAAA1D,GAAM,QAAA+uB,IAAAvrB,GAAe,IAAAyqB,GAAAzqB,GAAA,QAAmB,IAAAE,GAAAF,EAAA4Y,SAAgH,OAA9F1Y,QAAAsrB,2CAAAV,GAAqDJ,GAAAC,GAAAjZ,QAAcC,GAAAgZ,GAAAzqB,EAAAF,GAAU2R,GAAAmB,MAAApB,QAAA1R,IAAiB,EACxa,QAAAyrB,IAAAzrB,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAA4Y,SAAoC,IAAlBpc,GAAA+W,EAAA,OAAkBrT,EAAA,CAAM,GAAAzD,GAAA4uB,GAAArrB,EAAA0qB,GAAeluB,GAAAgvB,0CAAA/uB,EAA8CsU,GAAA+B,GAAA9S,GAAO+Q,GAAA4Z,GAAA3qB,GAAQ2R,GAAAgZ,GAAAluB,EAAAuD,OAAU+Q,IAAA+B,GAAA9S,EAAY2R,IAAAmB,GAAA5S,EAAAF,GAC7J,QAAA0rB,IAAA1rB,EAAAE,EAAA1D,EAAAC,GAAqB2D,KAAAiZ,IAAArZ,EAAWI,KAAAd,IAAA9C,EAAW4D,KAAAsjB,QAAAtjB,KAAAqjB,MAAArjB,KAAAqZ,OAAArZ,KAAAwY,UAAAxY,KAAA6L,KAAA,KAAkE7L,KAAA6F,MAAA,EAAa7F,KAAA6Q,IAAA,KAAc7Q,KAAAof,aAAAtf,EAAoBE,KAAAurB,cAAAvrB,KAAAwrB,YAAAxrB,KAAAyrB,cAAA,KAA4DzrB,KAAA8M,KAAAzQ,EAAY2D,KAAAkjB,UAAA,EAAiBljB,KAAA0rB,WAAA1rB,KAAA2rB,YAAA3rB,KAAA4rB,WAAA,KAAsD5rB,KAAA6rB,eAAA,EAAsB7rB,KAAAga,UAAA,KACjU,QAAA8R,IAAAlsB,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAuD,EAAAoa,SAAqY,OAAnX,QAAA3d,KAAA,GAAAivB,IAAA1rB,EAAAqZ,IAAAnZ,EAAAF,EAAAV,IAAAU,EAAAkN,MAAAzQ,EAAAwP,KAAAjM,EAAAiM,KAAAxP,EAAAmc,UAAA5Y,EAAA4Y,UAAAnc,EAAA2d,UAAApa,IAAAoa,UAAA3d,MAAA+iB,aAAAtf,EAAAzD,EAAA6mB,UAAA,EAAA7mB,EAAAuvB,WAAA,KAAAvvB,EAAAsvB,YAAA,KAAAtvB,EAAAqvB,WAAA,MAAoMrvB,EAAAwvB,eAAAzvB,EAAmBC,EAAAgnB,MAAAzjB,EAAAyjB,MAAgBhnB,EAAAovB,cAAA7rB,EAAA6rB,cAAgCpvB,EAAAkvB,cAAA3rB,EAAA2rB,cAAgClvB,EAAAmvB,YAAA5rB,EAAA4rB,YAA4BnvB,EAAAinB,QAAA1jB,EAAA0jB,QAAoBjnB,EAAAwJ,MAAAjG,EAAAiG,MAAgBxJ,EAAAwU,IAAAjR,EAAAiR,IAAYxU,EACxZ,QAAA0vB,IAAAnsB,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAuD,EAAAiM,KAAA1J,EAAAvC,EAAAV,GAA+B,IAAVU,IAAAwQ,MAAU,mBAAA/T,GAAA,GAAAmG,GAAAnG,EAAAa,WAAAb,EAAAa,UAAAuW,iBAAA,QAA6E,qBAAApX,GAAAmG,EAAA,MAAgC,QAAAnG,GAAe,IAAA4iB,IAAA,MAAA+M,IAAApsB,EAAAoR,SAAAlR,EAAA1D,EAAA+F,EAAoC,KAAA4c,IAAAvc,EAAA,GAAa1C,GAAA,CAAK,MAAM,KAAAwf,IAAA9c,EAAA,GAAa1C,GAAA,CAAK,MAAM,KAAAqf,IAAA,MAAA9iB,GAAA,GAAAivB,IAAA,GAAA1rB,EAAAuC,EAAA,EAAArC,GAAAzD,EAAAwP,KAAAsT,GAAA9iB,EAAAwvB,eAAAzvB,EAAAC,CAAmE,KAAAkjB,IAAA/c,EAAA,GAAa1C,GAAA,CAAK,MAAM,SAAAF,EAAA,CAAW,wBAAAvD,IAAA,OAAAA,IAAA6U,SAAA,MAAsD,IAAAmO,IAAA7c,EAAA,EAAa,MAAA5C,EAAQ,KAAAof,IAAAxc,EAAA,EAAa,MAAA5C,EAAQ,KAAA4f,IAAAhd,EAAA,EAAa,MAAA5C,EAAQ,SAAAuT,EAAA,YAAA9W,EAC7dA,WAAA,IAAemG,MAAA,IAAwD,MAA9C1C,GAAA,GAAAwrB,IAAA9oB,EAAA5C,EAAAuC,EAAArC,GAAkBA,EAAA+L,KAAAxP,EAASyD,EAAA+rB,eAAAzvB,EAAmB0D,EAAS,QAAAksB,IAAApsB,EAAAE,EAAA1D,EAAAC,GAA2D,MAAtCuD,GAAA,GAAA0rB,IAAA,GAAA1rB,EAAAvD,EAAAyD,GAAmBF,EAAAisB,eAAAzvB,EAAmBwD,EAAS,QAAAqsB,IAAArsB,EAAAE,EAAA1D,GAA2D,MAAxCwD,GAAA,GAAA0rB,IAAA,EAAA1rB,EAAA,KAAAE,GAAqBF,EAAAisB,eAAAzvB,EAAmBwD,EAAS,QAAAssB,IAAAtsB,EAAAE,EAAA1D,GAA2L,MAAxK0D,GAAA,GAAAwrB,IAAA,SAAA1rB,EAAAoR,SAAApR,EAAAoR,YAAApR,EAAAV,IAAAY,GAAoDA,EAAA+rB,eAAAzvB,EAAmB0D,EAAA0Y,WAAa4L,cAAAxkB,EAAAwkB,cAAA+H,gBAAA,KAAAC,eAAAxsB,EAAAwsB,gBAAoFtsB,EACnZ,QAAAusB,IAAAzsB,EAAAE,EAAA1D,GAAyW,MAAtV0D,GAAA,GAAAwrB,IAAA,YAAAxrB,EAAA,KAA4BF,GAAG0R,QAAAxR,EAAAskB,cAAAxkB,EAAAusB,gBAAA,KAAAG,oBAAA,EAAAC,kBAAA,EAAAC,sBAAA,EAAAC,oBAAA,EAAAC,iBAAA,EAAAC,4BAAA,EAAAC,aAAA,KAAAvc,QAAA,KAAAwc,eAAA,KAAAC,QAAA1wB,EAAA2wB,wBAAA,EAAAC,WAAA,KAAAC,kBAAA,MAAuTntB,EAAA0Y,UAAA5Y,EAAyC,QAAAstB,IAAAttB,GAAe,gBAAAE,GAAmB,IAAI,MAAAF,GAAAE,GAAY,MAAA1D,MACpc,QAAA+wB,IAAAvtB,GAAe,uBAAAoW,gCAAA,QAAgE,IAAAlW,GAAAkW,8BAAqC,IAAAlW,EAAAstB,aAAAttB,EAAAutB,cAAA,QAA2C,KAAI,GAAAjxB,GAAA0D,EAAAwtB,OAAA1tB,EAAkB2tB,IAAAL,GAAA,SAAAttB,GAAkB,MAAAE,GAAA0tB,kBAAApxB,EAAAwD,KAAkC6tB,GAAAP,GAAA,SAAAttB,GAAkB,MAAAE,GAAA4tB,qBAAAtxB,EAAAwD,KAAqC,MAAAvD,IAAU,SAAS,QAAAsxB,IAAA/tB,GAAe,mBAAA2tB,QAAA3tB,GAA8B,QAAAguB,IAAAhuB,GAAe,mBAAA6tB,QAAA7tB,GAC/W,QAAAiuB,IAAAjuB,GAAe,OAAOisB,eAAA,EAAAiC,UAAAluB,EAAAmuB,YAAA,KAAAC,WAAA,KAAAC,oBAAA,KAAAC,mBAAA,KAAAvC,YAAA,KAAAD,WAAA,KAAAyC,oBAAA,KAAAC,mBAAA,MAAkM,QAAAC,IAAAzuB,GAAe,OAAOisB,eAAAjsB,EAAAisB,eAAAiC,UAAAluB,EAAAkuB,UAAAC,YAAAnuB,EAAAmuB,YAAAC,WAAApuB,EAAAouB,WAAAC,oBAAA,KAAAC,mBAAA,KAAAvC,YAAA,KAAAD,WAAA,KAAAyC,oBAAA,KAAAC,mBAAA,MAC9O,QAAAE,IAAA1uB,GAAe,OAAOisB,eAAAjsB,EAAAqZ,IAAA,EAAAsV,QAAA,KAAApoB,SAAA,KAAAuC,KAAA,KAAAkjB,WAAA,MAA6E,QAAA4C,IAAA5uB,EAAAE,EAAA1D,GAAmB,OAAAwD,EAAAouB,WAAApuB,EAAAmuB,YAAAnuB,EAAAouB,WAAAluB,GAAAF,EAAAouB,WAAAtlB,KAAA5I,EAAAF,EAAAouB,WAAAluB,IAAsF,IAAAF,EAAAisB,gBAAAjsB,EAAAisB,eAAAzvB,KAAAwD,EAAAisB,eAAAzvB,GAC5M,QAAAqyB,IAAA7uB,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAuD,EAAAoa,SAAkB,WAAA3d,EAAA,CAAa,GAAA8F,GAAAvC,EAAA4rB,YAAoBhpB,EAAA,IAAW,QAAAL,MAAAvC,EAAA4rB,YAAAqC,GAAAjuB,EAAA2rB,oBAAgDppB,GAAAvC,EAAA4rB,YAAAhpB,EAAAnG,EAAAmvB,YAAA,OAAArpB,EAAA,OAAAK,GAAAL,EAAAvC,EAAA4rB,YAAAqC,GAAAjuB,EAAA2rB,eAAA/oB,EAAAnG,EAAAmvB,YAAAqC,GAAAxxB,EAAAkvB,gBAAAppB,EAAAvC,EAAA4rB,YAAA6C,GAAA7rB,GAAA,OAAAA,MAAAnG,EAAAmvB,YAAA6C,GAAAlsB,GAAyL,QAAAK,GAAAL,IAAAK,EAAAgsB,GAAArsB,EAAArC,EAAA1D,GAAA,OAAA+F,EAAA6rB,YAAA,OAAAxrB,EAAAwrB,YAAAQ,GAAArsB,EAAArC,EAAA1D,GAAAoyB,GAAAhsB,EAAA1C,EAAA1D,KAAAoyB,GAAArsB,EAAArC,EAAA1D,GAAAoG,EAAAwrB,WAAAluB,GAC1T,QAAA4uB,IAAA9uB,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAuD,EAAA4rB,WAAoBnvB,GAAA,OAAAA,EAAAuD,EAAA4rB,YAAAqC,GAAAjuB,EAAA2rB,eAAAoD,GAAA/uB,EAAAvD,GAAqD,OAAAA,EAAA6xB,mBAAA7xB,EAAA4xB,oBAAA5xB,EAAA6xB,mBAAApuB,GAAAzD,EAAA6xB,mBAAAxlB,KAAA5I,EAAAzD,EAAA6xB,mBAAApuB,IAA8H,IAAAzD,EAAAwvB,gBAAAxvB,EAAAwvB,eAAAzvB,KAAAC,EAAAwvB,eAAAzvB,GAA+D,QAAAuyB,IAAA/uB,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAAoa,SAAuE,OAArD,QAAA5d,GAAA0D,IAAA1D,EAAAovB,cAAA1rB,EAAAF,EAAA4rB,YAAA6C,GAAAvuB,IAAqDA,EACjX,QAAA8uB,IAAAhvB,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,GAAyB,OAAApG,EAAA6c,KAAc,aAAArZ,GAAAxD,EAAAmyB,QAAA,mBAAA3uB,KAAA1D,KAAAsG,EAAAnG,EAAA8F,GAAAvC,CAAgE,QAAAA,EAAAsjB,WAAA,KAAAtjB,EAAAsjB,UAAA,EAAwC,QAA2D,GAA3DtjB,EAAAxD,EAAAmyB,QAA2D,QAAxCpsB,EAAA,mBAAAvC,KAAA1D,KAAAsG,EAAAnG,EAAA8F,GAAAvC,QAAwC,KAAAuC,EAAA,KAA8B,OAAA/E,OAAWf,EAAA8F,EAAM,QAAA0sB,IAAA,EAAa,MAAAxyB,GACtQ,QAAAyyB,IAAAlvB,EAAAE,EAAA1D,EAAAC,EAAA8F,GAA6B,GAAN0sB,IAAA,IAAM,IAAA/uB,EAAA+rB,gBAAA/rB,EAAA+rB,eAAA1pB,GAAA,CAAgDrC,EAAA6uB,GAAA/uB,EAAAE,EAAU,QAAA0C,GAAA1C,EAAAguB,UAAA9rB,EAAA,KAAA4O,EAAA,EAAA+B,EAAA7S,EAAAiuB,YAAAjxB,EAAA0F,EAAqD,OAAAmQ,GAAS,CAAE,GAAAC,GAAAD,EAAAkZ,cAAuBjZ,GAAAzQ,GAAQ,OAAAH,MAAA2Q,EAAAnQ,EAAA1F,IAAA,IAAA8T,KAAAgC,KAAAhC,EAAAgC,KAAsC9V,EAAA8xB,GAAAhvB,EAAAE,EAAA6S,EAAA7V,EAAAV,EAAAC,GAAA,OAAAsW,EAAAxM,WAAAvG,EAAAsjB,WAAA,GAAAvQ,EAAAiZ,WAAA,YAAA9rB,EAAA4rB,WAAA5rB,EAAA6rB,YAAA7rB,EAAA4rB,WAAA/Y,GAAA7S,EAAA4rB,WAAAE,WAAAjZ,EAAA7S,EAAA4rB,WAAA/Y,KAA0KA,IAAAjK,KAAgB,IAAPkK,EAAA,KAAOD,EAAA7S,EAAAmuB,oBAA4B,OAAAtb,GAAS,CAAE,GAAAI,GAAAJ,EAAAkZ,cAAuB9Y,GAAA5Q,GAAQ,OAAAyQ,MAAAD,EAAA,OAC5d3Q,IAAAQ,EAAA1F,KAAA,IAAA8T,KAAAmC,KAAAnC,EAAAmC,KAAyBjW,EAAA8xB,GAAAhvB,EAAAE,EAAA6S,EAAA7V,EAAAV,EAAAC,GAAA,OAAAsW,EAAAxM,WAAAvG,EAAAsjB,WAAA,GAAAvQ,EAAAiZ,WAAA,YAAA9rB,EAAAsuB,mBAAAtuB,EAAAquB,oBAAAruB,EAAAsuB,mBAAAzb,GAAA7S,EAAAsuB,mBAAAxC,WAAAjZ,EAAA7S,EAAAsuB,mBAAAzb,KAAkNA,IAAAjK,KAAS,OAAA1G,IAAAlC,EAAAkuB,WAAA,MAA8B,OAAApb,EAAA9S,EAAAouB,mBAAA,KAAAtuB,EAAAsjB,WAAA,GAAmD,OAAAlhB,GAAA,OAAA4Q,IAAApQ,EAAA1F,GAA0BgD,EAAAguB,UAAAtrB,EAAc1C,EAAAiuB,YAAA/rB,EAAgBlC,EAAAmuB,oBAAArb,EAAwB9S,EAAA+rB,eAAAjb,EAAmBhR,EAAA2rB,cAAAzuB,GACxa,QAAAiyB,IAAAnvB,EAAAE,GAAiB,mBAAAF,IAAAuT,EAAA,MAAAvT,GAAwCA,EAAA1D,KAAA4D,GACzD,QAAAkvB,IAAApvB,EAAAE,EAAA1D,GAAoN,IAAjM,OAAA0D,EAAAmuB,sBAAA,OAAAnuB,EAAAkuB,aAAAluB,EAAAkuB,WAAAtlB,KAAA5I,EAAAmuB,oBAAAnuB,EAAAkuB,WAAAluB,EAAAouB,oBAAApuB,EAAAmuB,oBAAAnuB,EAAAouB,mBAAA,MAAiLtuB,EAAAE,EAAA6rB,YAAgB7rB,EAAA6rB,YAAA7rB,EAAA4rB,WAAA,KAAoC,OAAA9rB,GAAS,CAAE,GAAAvD,GAAAuD,EAAAuG,QAAiB,QAAA9J,IAAAuD,EAAAuG,SAAA,KAAA4oB,GAAA1yB,EAAAD,IAAoCwD,IAAAgsB,WAAuC,IAAxBhsB,EAAAE,EAAAquB,oBAAwBruB,EAAAquB,oBAAAruB,EAAAsuB,mBAAA,KAAoD,OAAAxuB,GAASE,EAAAF,EAAAuG,SAAA,OAAArG,IAAAF,EAAAuG,SAAA,KAAA4oB,GAAAjvB,EAAA1D,IAAAwD,IAAAgsB,WAC5Z,QAAAqD,IAAArvB,EAAAE,GAAiB,OAAO+B,MAAAjC,EAAAhB,OAAAkB,EAAAiF,MAAA0a,GAAA3f,IAAmE,QAAAovB,IAAAtvB,GAAe,GAAAE,GAAAF,EAAAiM,KAAAmJ,QAAsBzD,IAAA4d,GAAArvB,EAAA8U,aAAAhV,GAAuB2R,GAAA6d,GAAAtvB,EAAA4U,cAAA9U,GAAwB2R,GAAA8d,GAAAzvB,KAAUE,EAAA4U,cAAA9U,EAAAwf,aAAAvd,MAAqC/B,EAAA8U,aAAAhV,EAAA4Y,UAA2B,QAAA8W,IAAA1vB,GAAe,GAAAE,GAAAqvB,GAAA7d,QAAAlV,EAAAgzB,GAAA9d,OAA8BX,IAAA0e,GAAAzvB,GAAQ+Q,GAAAye,GAAAxvB,GAAQ+Q,GAAAwe,GAAAvvB,GAAQA,IAAAiM,KAAAmJ,SAAkBpV,EAAA8U,cAAAtY,EAAkBwD,EAAAgV,aAAA9U,EAAyD,QAAAyvB,IAAA3vB,GAAsC,MAAvBA,KAAA4vB,IAAArc,EAAA,OAAuBvT,EACjc,QAAA6vB,IAAA7vB,EAAAE,GAAiByR,GAAAme,GAAA5vB,EAAAF,GAAU2R,GAAAoe,GAAA/vB,KAAU2R,GAAAqe,GAAAJ,GAAA5vB,EAAW,IAAAxD,GAAA0D,EAAAge,QAAiB,QAAA1hB,GAAU,eAAA0D,OAAA0a,iBAAA1a,EAAA+vB,aAAAlI,GAAA,QAAkE,MAAM,SAAAvrB,EAAA,IAAAA,EAAA0D,EAAAkZ,WAAAlZ,IAAA1D,EAAAyzB,cAAA,KAAAzzB,IAAA0zB,QAAAhwB,EAAA6nB,GAAA7nB,EAAA1D,GAA4EuU,GAAAif,GAAAhwB,GAAQ2R,GAAAqe,GAAA9vB,EAAAF,GAAU,QAAAmwB,IAAAnwB,GAAe+Q,GAAAif,GAAAhwB,GAAQ+Q,GAAAgf,GAAA/vB,GAAQ+Q,GAAA+e,GAAA9vB,GAAQ,QAAAowB,IAAApwB,GAAe+vB,GAAAre,UAAA1R,IAAA+Q,GAAAif,GAAAhwB,GAAA+Q,GAAAgf,GAAA/vB,IAAkC,QAAAqwB,IAAArwB,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAuD,EAAA2rB,aAAsBzrB,KAAA1D,EAAAC,GAASA,EAAA,OAAAyD,OAAA,KAAAA,EAAAzD,EAAAe,MAA6Bf,EAAAyD,GAAMF,EAAA2rB,cAAAlvB,EAAkC,QAAhBuD,IAAA4rB,cAAgB,IAAA5rB,EAAAisB,iBAAAjsB,EAAAkuB,UAAAzxB,GAEhZ,QAAA6zB,IAAAtwB,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,GAAyB,GAAAR,GAAApC,EAAA4Y,SAA2B,OAAT5Y,KAAAiM,KAAS,mBAAA7J,GAAAmuB,sBAAAnuB,EAAAmuB,sBAAA/zB,EAAA+F,EAAAK,IAAA5C,EAAA1C,YAAA0C,EAAA1C,UAAA2W,wBAAA2S,GAAA1mB,EAAA1D,KAAAoqB,GAAAnqB,EAAA8F,IACpG,QAAAiuB,IAAAxwB,EAAAE,EAAA1D,EAAAC,GAAqBuD,EAAAE,EAAAuwB,MAAU,mBAAAvwB,GAAAwwB,2BAAAxwB,EAAAwwB,0BAAAl0B,EAAAC,GAAkF,mBAAAyD,GAAAywB,kCAAAzwB,EAAAywB,iCAAAn0B,EAAAC,GAAgGyD,EAAAuwB,QAAAzwB,GAAA4wB,GAAAjd,oBAAAzT,IAAAuwB,MAAA,MACjN,QAAAI,IAAA7wB,EAAAE,GAAiB,GAAA1D,GAAAwD,EAAAiM,KAAAxP,EAAAuD,EAAA4Y,UAAArW,EAAAvC,EAAAwf,aAAA5c,EAAA4nB,GAAAxqB,EAAoDvD,GAAA+T,MAAAjO,EAAU9F,EAAAg0B,MAAAzwB,EAAA2rB,cAAwBlvB,EAAAiU,KAAAoa,GAAUruB,EAAAgU,QAAAma,GAAA5qB,EAAA4C,GAAkBA,EAAA5C,EAAA4rB,YAAgB,OAAAhpB,IAAAssB,GAAAlvB,EAAA4C,EAAAL,EAAA9F,EAAAyD,GAAAzD,EAAAg0B,MAAAzwB,EAAA2rB,eAAkD/oB,EAAA5C,EAAAiM,KAAA6kB,yBAAkC,mBAAAluB,KAAAytB,GAAArwB,EAAA4C,EAAAL,GAAA9F,EAAAg0B,MAAAzwB,EAAA2rB,eAA2D,mBAAAnvB,GAAAs0B,0BAAA,mBAAAr0B,GAAAs0B,yBAAA,mBAAAt0B,GAAAu0B,2BAAA,mBAAAv0B,GAAAw0B,qBAAAz0B,EAAAC,EAAAg0B,MAAA,mBAAAh0B,GAAAw0B,oBAClSx0B,EAAAw0B,qBAAA,mBAAAx0B,GAAAu0B,2BAAAv0B,EAAAu0B,4BAAAx0B,IAAAC,EAAAg0B,OAAAG,GAAAjd,oBAAAlX,IAAAg0B,MAAA,cAAA7tB,EAAA5C,EAAA4rB,eAAAsD,GAAAlvB,EAAA4C,EAAAL,EAAA9F,EAAAyD,GAAAzD,EAAAg0B,MAAAzwB,EAAA2rB,gBAA6N,mBAAAlvB,GAAAy0B,oBAAAlxB,EAAAsjB,WAAA,GAC7N,QAAA6N,IAAAnxB,EAAAE,EAAA1D,GAA2B,WAARwD,EAAAxD,EAAAyU,MAAQ,mBAAAjR,IAAA,iBAAAA,GAAA,CAAyD,GAAAxD,EAAAgV,OAAA,CAAahV,IAAAgV,MAAW,IAAA/U,OAAA,EAAaD,KAAA,IAAAA,EAAA6c,KAAA9F,EAAA,OAAA9W,EAAAD,EAAAoc,WAA6Cnc,GAAA8W,EAAA,MAAAvT,EAAoB,IAAAuC,GAAA,GAAAvC,CAAW,eAAAE,GAAA,OAAAA,EAAA+Q,KAAA,mBAAA/Q,GAAA+Q,KAAA/Q,EAAA+Q,IAAAmgB,aAAA7uB,EAAArC,EAAA+Q,KAAwF/Q,EAAA,SAAAF,GAAc,GAAAE,GAAAzD,EAAAiU,OAAAoa,GAAAruB,EAAAiU,QAA2BjU,EAAAiU,IAAQ,QAAA1Q,QAAAE,GAAAqC,GAAArC,EAAAqC,GAAAvC,GAA6BE,EAAAkxB,WAAA7uB,EAAerC,GAAS,iBAAAF,IAAAuT,EAAA,OAAoC/W,EAAAgV,QAAA+B,EAAA,MAAAvT,GAA2B,MAAAA,GAClc,QAAAqxB,IAAArxB,EAAAE,GAAiB,aAAAF,EAAAiM,MAAAsH,EAAA,yBAAA1W,OAAAS,UAAAqO,SAAArP,KAAA4D,GAAA,qBAAqGrD,OAAAgC,KAAAqB,GAAA1B,KAAA,UAA8B0B,EAAA,IACpJ,QAAAoxB,IAAAtxB,GAAe,QAAAE,KAAA1D,GAAgB,GAAAwD,EAAA,CAAM,GAAAvD,GAAAyD,EAAA4rB,UAAmB,QAAArvB,KAAAuvB,WAAAxvB,EAAA0D,EAAA4rB,WAAAtvB,GAAA0D,EAAA6rB,YAAA7rB,EAAA4rB,WAAAtvB,EAAsEA,EAAAwvB,WAAA,KAAkBxvB,EAAA8mB,UAAA,GAAe,QAAA9mB,KAAAC,GAAgB,IAAAuD,EAAA,WAAkB,MAAK,OAAAvD,GAASyD,EAAA1D,EAAAC,OAAAinB,OAAoB,aAAY,QAAAjnB,GAAAuD,EAAAE,GAAgB,IAAAF,EAAA,GAAAuxB,KAAc,OAAArxB,GAAS,OAAAA,EAAAZ,IAAAU,EAAA6K,IAAA3K,EAAAZ,IAAAY,GAAAF,EAAA6K,IAAA3K,EAAA+F,MAAA/F,OAAAwjB,OAA0D,OAAA1jB,GAAS,QAAAuC,GAAAvC,EAAAE,EAAA1D,GAAuD,MAArCwD,GAAAksB,GAAAlsB,EAAAE,EAAA1D,GAAYwD,EAAAiG,MAAA,EAAUjG,EAAA0jB,QAAA,KAAe1jB,EAAS,QAAA4C,GAAA1C,EAAA1D,EAAAC,GAA4B,MAAVyD,GAAA+F,MAAAxJ,EAAUuD,EAA6B,QAAdvD,EAAAyD,EAAAka,YAAc3d,IAAAwJ,MAAAxJ,EAAAD,GAAA0D,EAAAojB,UACld,EAAA9mB,GAAAC,IAAOyD,EAAAojB,UAAA,EAAc9mB,GADgaA,EACvZ,QAAA4F,GAAAlC,GAAqD,MAAvCF,IAAA,OAAAE,EAAAka,YAAAla,EAAAojB,UAAA,GAAuCpjB,EAAS,QAAA8Q,GAAAhR,EAAAE,EAAA1D,EAAAC,GAAoB,cAAAyD,GAAA,IAAAA,EAAAmZ,KAAAnZ,EAAAmsB,GAAA7vB,EAAAwD,EAAAkN,KAAAzQ,GAAAyD,EAAAuZ,OAAAzZ,EAAAE,IAA4DA,EAAAqC,EAAArC,EAAA1D,EAAAC,GAAWyD,EAAAuZ,OAAAzZ,EAAWE,GAAS,QAAA6S,GAAA/S,EAAAE,EAAA1D,EAAAC,GAAoB,cAAAyD,KAAA+L,OAAAzP,EAAAyP,MAAAxP,EAAA8F,EAAArC,EAAA1D,EAAAgU,MAAA/T,KAAAwU,IAAAkgB,GAAAnxB,EAAAE,EAAA1D,GAAAC,EAAAgd,OAAAzZ,EAAAvD,IAAkFA,EAAA0vB,GAAA3vB,EAAAwD,EAAAkN,KAAAzQ,GAAiBA,EAAAwU,IAAAkgB,GAAAnxB,EAAAE,EAAA1D,GAAgBC,EAAAgd,OAAAzZ,EAAWvD,GAAS,QAAAS,GAAA8C,EAAAE,EAAA1D,EAAAC,GAAoB,cAAAyD,GAAA,IAAAA,EAAAmZ,KAAAnZ,EAAA0Y,UAAA4L,gBAAAhoB,EAAAgoB,eAAAtkB,EAAA0Y,UAAA4T,iBAAAhwB,EAAAgwB,gBAAAtsB,EAC1XosB,GAAA9vB,EAAAwD,EAAAkN,KAAAzQ,GAAAyD,EAAAuZ,OAAAzZ,EAAAE,IAA4BA,EAAAqC,EAAArC,EAAA1D,EAAA4U,aAAA3U,GAAwByD,EAAAuZ,OAAAzZ,EAAWE,GAAS,QAAA8S,GAAAhT,EAAAE,EAAA1D,EAAAC,EAAAmG,GAAsB,cAAA1C,GAAA,KAAAA,EAAAmZ,KAAAnZ,EAAAksB,GAAA5vB,EAAAwD,EAAAkN,KAAAzQ,EAAAmG,GAAA1C,EAAAuZ,OAAAzZ,EAAAE,IAA+DA,EAAAqC,EAAArC,EAAA1D,EAAAC,GAAWyD,EAAAuZ,OAAAzZ,EAAWE,GAAS,QAAAiT,GAAAnT,EAAAE,EAAA1D,GAAkB,oBAAA0D,IAAA,iBAAAA,GAAA,MAAAA,GAAAmsB,GAAA,GAAAnsB,EAAAF,EAAAkN,KAAA1Q,GAAA0D,EAAAuZ,OAAAzZ,EAAAE,CAAoF,qBAAAA,IAAA,OAAAA,EAAA,CAAkC,OAAAA,EAAAoR,UAAmB,IAAAkgB,IAAA,MAAAh1B,GAAA2vB,GAAAjsB,EAAAF,EAAAkN,KAAA1Q,KAAAyU,IAAAkgB,GAAAnxB,EAAA,KAAAE,GAAA1D,EAAAid,OAAAzZ,EAAAxD,CAAgE,KAAA8iB,IAAA,MAAApf,GAAAosB,GAAApsB,EAAAF,EAAAkN,KAAA1Q,GAAA0D,EAAAuZ,OAAAzZ,EAAAE,EAA6C,GAAAuxB,GAAAvxB,IAAA6e,GAAA7e,GAAA,MAAAA,GAAAksB,GAAAlsB,EAAAF,EAAAkN,KAAA1Q,EAAA,MAAA0D,EAAAuZ,OACpczZ,EAAAE,CAAImxB,IAAArxB,EAAAE,GAAQ,YAAY,QAAA8R,GAAAhS,EAAAE,EAAA1D,EAAAC,GAAoB,GAAA8F,GAAA,OAAArC,IAAAZ,IAAA,IAA0B,qBAAA9C,IAAA,iBAAAA,GAAA,cAAA+F,EAAA,KAAAyO,EAAAhR,EAAAE,EAAA,GAAA1D,EAAAC,EAA+E,qBAAAD,IAAA,OAAAA,EAAA,CAAkC,OAAAA,EAAA8U,UAAmB,IAAAkgB,IAAA,MAAAh1B,GAAA8C,MAAAiD,EAAA/F,EAAAyP,OAAAoT,GAAArM,EAAAhT,EAAAE,EAAA1D,EAAAgU,MAAAY,SAAA3U,EAAA8F,GAAAwQ,EAAA/S,EAAAE,EAAA1D,EAAAC,GAAA,IAAiF,KAAA6iB,IAAA,MAAA9iB,GAAA8C,MAAAiD,EAAArF,EAAA8C,EAAAE,EAAA1D,EAAAC,GAAA,KAAyC,GAAAg1B,GAAAj1B,IAAAuiB,GAAAviB,GAAA,cAAA+F,EAAA,KAAAyQ,EAAAhT,EAAAE,EAAA1D,EAAAC,EAAA,KAAqD40B,IAAArxB,EAAAxD,GAAQ,YAAY,QAAAk1B,GAAA1xB,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB,oBAAA9F,IAAA,iBAAAA,GAAA,MAAAuD,KAAA/C,IAAAT,IAAA,KAAAwU,EAAA9Q,EAAAF,EAAA,GAAAvD,EAAA8F,EACpa,qBAAA9F,IAAA,OAAAA,EAAA,CAAkC,OAAAA,EAAA6U,UAAmB,IAAAkgB,IAAA,MAAAxxB,KAAA/C,IAAA,OAAAR,EAAA6C,IAAA9C,EAAAC,EAAA6C,MAAA,KAAA7C,EAAAwP,OAAAoT,GAAArM,EAAA9S,EAAAF,EAAAvD,EAAA+T,MAAAY,SAAA7O,EAAA9F,EAAA6C,KAAAyT,EAAA7S,EAAAF,EAAAvD,EAAA8F,EAA0G,KAAA+c,IAAA,MAAAtf,KAAA/C,IAAA,OAAAR,EAAA6C,IAAA9C,EAAAC,EAAA6C,MAAA,KAAApC,EAAAgD,EAAAF,EAAAvD,EAAA8F,GAA8D,GAAAkvB,GAAAh1B,IAAAsiB,GAAAtiB,GAAA,MAAAuD,KAAA/C,IAAAT,IAAA,KAAAwW,EAAA9S,EAAAF,EAAAvD,EAAA8F,EAAA,KAAwD8uB,IAAAnxB,EAAAzD,GAAQ,YAAY,QAAAk1B,GAAApvB,EAAAH,EAAA4O,EAAA+B,GAAqB,OAAAR,GAAA,KAAAa,EAAA,KAAA7B,EAAAnP,EAAAyQ,EAAAzQ,EAAA,EAAAlF,EAAA,KAAuC,OAAAqU,GAAAsB,EAAA7B,EAAA3R,OAAqBwT,IAAA,CAAKtB,EAAAtL,MAAA4M,GAAA3V,EAAAqU,IAAA,MAAArU,EAAAqU,EAAAmS,OAAmC,IAAArnB,GAAA2V,EAAAzP,EAAAgP,EAAAP,EAAA6B,GAAAE,EAAoB,WAAA1W,EAAA,CAAa,OAAAkV,MAAArU,EAAgB,OAAM8C,GAAAuR,GAAA,OAAAlV,EAAA+d,WAAAla,EAAAqC,EACzdgP,GAAGnP,EAAAQ,EAAAvG,EAAA+F,EAAAyQ,GAAW,OAAAO,EAAAb,EAAAlW,EAAA+W,EAAAsQ,QAAArnB,EAAyB+W,EAAA/W,EAAIkV,EAAArU,EAAI,GAAA2V,IAAA7B,EAAA3R,OAAA,MAAA7C,GAAA+F,EAAAgP,GAAAgB,CAAgC,WAAAhB,EAAA,CAAa,KAAKsB,EAAA7B,EAAA3R,OAAWwT,KAAAtB,EAAA4B,EAAA5Q,EAAAyO,EAAA6B,GAAAE,MAAA3Q,EAAAQ,EAAA2O,EAAAnP,EAAAyQ,GAAA,OAAAO,EAAAb,EAAAhB,EAAA6B,EAAAsQ,QAAAnS,EAAA6B,EAAA7B,EAA6D,OAAAgB,GAAS,IAAAhB,EAAA9U,EAAA8F,EAAAgP,GAAasB,EAAA7B,EAAA3R,OAAWwT,KAAA3V,EAAAw0B,EAAAngB,EAAAhP,EAAAsQ,EAAA7B,EAAA6B,GAAAE,MAAA/S,GAAA,OAAA9C,EAAAkd,WAAA7I,EAAAqgB,OAAA,OAAA10B,EAAAoC,IAAAuT,EAAA3V,EAAAoC,KAAA8C,EAAAQ,EAAA1F,EAAAkF,EAAAyQ,GAAA,OAAAO,EAAAb,EAAArV,EAAAkW,EAAAsQ,QAAAxmB,EAAAkW,EAAAlW,EAAiK,OAAzC8C,IAAAuR,EAAA5S,QAAA,SAAAqB,GAAyB,MAAAE,GAAAqC,EAAAvC,KAAgBuS,EAAS,QAAA3B,GAAArO,EAAAH,EAAA4O,EAAA+B,GAAoB,GAAAR,GAAAwM,GAAA/N,EAAY,oBAAAuB,IAAAgB,EAAA,OAAkD,OAAZvC,EAAAuB,EAAAjW,KAAA0U,KAAYuC,EAAA,MAAwB,QAAAhC,GAAAgB,EAAA,KAAArV,EAAAkF,EAAAgR,EAC9dhR,EAAA,EAAAiR,EAAA,KAAAhX,EAAA2U,EAAAlI,OAAsB,OAAA5L,IAAAb,EAAA2F,KAAkBoR,IAAA/W,EAAA2U,EAAAlI,OAAA,CAAgB5L,EAAA+I,MAAAmN,GAAAC,EAAAnW,IAAA,MAAAmW,EAAAnW,EAAAwmB,OAAmC,IAAA1Q,GAAAhB,EAAAzP,EAAArF,EAAAb,EAAA4F,MAAA8Q,EAAuB,WAAAC,EAAA,CAAa9V,MAAAmW,EAAS,OAAMrT,GAAA9C,GAAA,OAAA8V,EAAAoH,WAAAla,EAAAqC,EAAArF,GAAiCkF,EAAAQ,EAAAoQ,EAAA5Q,EAAAgR,GAAW,OAAA7B,EAAAgB,EAAAS,EAAAzB,EAAAmS,QAAA1Q,EAAyBzB,EAAAyB,EAAI9V,EAAAmW,EAAI,GAAAhX,EAAA2F,KAAA,MAAAxF,GAAA+F,EAAArF,GAAAqV,CAA0B,WAAArV,EAAA,CAAa,MAAKb,EAAA2F,KAAQoR,IAAA/W,EAAA2U,EAAAlI,OAAA,QAAAzM,EAAA8W,EAAA5Q,EAAAlG,EAAA4F,MAAA8Q,MAAA3Q,EAAAQ,EAAAvG,EAAA+F,EAAAgR,GAAA,OAAA7B,EAAAgB,EAAAlW,EAAAkV,EAAAmS,QAAArnB,EAAAkV,EAAAlV,EAAoF,OAAAkW,GAAS,IAAArV,EAAAT,EAAA8F,EAAArF,IAAab,EAAA2F,KAAQoR,IAAA/W,EAAA2U,EAAAlI,OAAA,QAAAzM,EAAAq1B,EAAAx0B,EAAAqF,EAAA6Q,EAAA/W,EAAA4F,MAAA8Q,MAAA/S,GAAA,OAAA3D,EAAA+d,WAAAld,EAAA00B,OAAA,OAAAv1B,EAAAiD,IAAA8T,EAAA/W,EAAAiD,KAAA8C,EAAAQ,EAAAvG,EAAA+F,EAAAgR,GAAA,OACjY7B,EAAAgB,EAAAlW,EAAAkV,EAAAmS,QAAArnB,EAAAkV,EAAAlV,EAAgE,OAAzC2D,IAAA9C,EAAAyB,QAAA,SAAAqB,GAAyB,MAAAE,GAAAqC,EAAAvC,KAAgBuS,EAAS,gBAAAvS,EAAAvD,EAAAmG,EAAAoO,GAAyB,GAAA+B,GAAA,iBAAAnQ,IAAA,OAAAA,KAAAqJ,OAAAoT,IAAA,OAAAzc,EAAAtD,GAA+DyT,KAAAnQ,IAAA4N,MAAAY,SAAwB,IAAAlU,GAAA,iBAAA0F,IAAA,OAAAA,CAAoC,IAAA1F,EAAA,OAAA0F,EAAA0O,UAAwB,IAAAkgB,IAAAxxB,EAAA,CAAmB,IAAR9C,EAAA0F,EAAAtD,IAAQyT,EAAAtW,EAAQ,OAAAsW,GAAS,CAAE,GAAAA,EAAAzT,MAAApC,EAAA,SAAA6V,EAAAsG,IAAAzW,EAAAqJ,OAAAoT,GAAAtM,EAAA9G,OAAArJ,EAAAqJ,KAAA,CAAwDzP,EAAAwD,EAAA+S,EAAA2Q,SAAejnB,EAAA8F,EAAAwQ,EAAAnQ,EAAAqJ,OAAAoT,GAAAzc,EAAA4N,MAAAY,SAAAxO,EAAA4N,MAAAQ,GAA8CvU,EAAAwU,IAAAkgB,GAAAnxB,EAAA+S,EAAAnQ,GAAgBnG,EAAAgd,OAAAzZ,EAAWA,EAAAvD,CAAI,MAAAuD,GAAaxD,EAAAwD,EAAA+S,EAAO,OAAM7S,EAAAF,EAAA+S,GAAYA,IAAA2Q,QAAY9gB,EAAAqJ,OAAAoT,IAAA5iB,EAAA2vB,GAAAxpB,EAAA4N,MAAAY,SACjepR,EAAAkN,KAAA8D,EAAApO,EAAAtD,KAAA7C,EAAAgd,OAAAzZ,IAAAvD,IAAAuU,EAAAmb,GAAAvpB,EAAA5C,EAAAkN,KAAA8D,KAAAC,IAAAkgB,GAAAnxB,EAAAvD,EAAAmG,GAAAoO,EAAAyI,OAAAzZ,IAAAgR,GAAkF,MAAA5O,GAAApC,EAAY,KAAAsf,IAAAtf,EAAA,CAAW,IAAA+S,EAAAnQ,EAAAtD,IAAY,OAAA7C,GAAS,CAAE,GAAAA,EAAA6C,MAAAyT,EAAA,QAAAtW,EAAA4c,KAAA5c,EAAAmc,UAAA4L,gBAAA5hB,EAAA4hB,eAAA/nB,EAAAmc,UAAA4T,iBAAA5pB,EAAA4pB,eAAA,CAAuHhwB,EAAAwD,EAAAvD,EAAAinB,SAAejnB,EAAA8F,EAAA9F,EAAAmG,EAAAwO,aAAAJ,GAAwBvU,EAAAgd,OAAAzZ,EAAWA,EAAAvD,CAAI,MAAAuD,GAAaxD,EAAAwD,EAAAvD,EAAO,OAAMyD,EAAAF,EAAAvD,GAAYA,IAAAinB,QAAYjnB,EAAA6vB,GAAA1pB,EAAA5C,EAAAkN,KAAA8D,GAAiBvU,EAAAgd,OAAAzZ,EAAWA,EAAAvD,EAAI,MAAA2F,GAAApC,GAAY,oBAAA4C,IAAA,iBAAAA,GAAA,MAAAA,GAAA,GAAAA,EAAA,OAAAnG,GAAA,IAAAA,EAAA4c,KAAA7c,EAAAwD,EAAAvD,EAAAinB,SAAAjnB,EAAA8F,EAAA9F,EAAAmG,EAAAoO,GAAAvU,EAAAgd,OAC3YzZ,IAAAvD,IAAAD,EAAAwD,EAAAvD,KAAA4vB,GAAAzpB,EAAA5C,EAAAkN,KAAA8D,GAAAvU,EAAAgd,OAAAzZ,IAAAvD,GAAA2F,EAAApC,EAAqD,IAAAyxB,GAAA7uB,GAAA,MAAA+uB,GAAA3xB,EAAAvD,EAAAmG,EAAAoO,EAA4B,IAAA+N,GAAAnc,GAAA,MAAAgO,GAAA5Q,EAAAvD,EAAAmG,EAAAoO,EAAsC,IAAX9T,GAAAm0B,GAAArxB,EAAA4C,GAAW,oBAAAA,KAAAmQ,EAAA,OAAA/S,EAAAqZ,KAA4C,cAAArI,EAAAhR,EAAAiM,KAAAsH,EAAA,MAAAvC,EAAAkO,aAAAlO,EAAAtU,MAAA,aAAmE,MAAAF,GAAAwD,EAAAvD,IAA6D,QAAAo1B,IAAA7xB,EAAAE,GAAiB,GAAA1D,GAAA,GAAAkvB,IAAA,cAA4BlvB,GAAAyP,KAAA,UAAiBzP,EAAAoc,UAAA1Y,EAAc1D,EAAAid,OAAAzZ,EAAWxD,EAAA8mB,UAAA,EAAc,OAAAtjB,EAAA8rB,YAAA9rB,EAAA8rB,WAAAE,WAAAxvB,EAAAwD,EAAA8rB,WAAAtvB,GAAAwD,EAAA+rB,YAAA/rB,EAAA8rB,WAAAtvB,EACxY,QAAAs1B,IAAA9xB,EAAAE,GAAiB,OAAAF,EAAAqZ,KAAc,UAAA7c,GAAAwD,EAAAiM,IAAwF,gBAApE/L,EAAA,IAAAA,EAAAge,UAAA1hB,EAAAiM,gBAAAvI,EAAA2d,SAAApV,cAAA,KAAAvI,KAAoEF,EAAA4Y,UAAA1Y,GAAA,EAAsC,uBAAAA,EAAA,KAAAF,EAAAwf,cAAA,IAAAtf,EAAAge,SAAA,KAAAhe,KAAAF,EAAA4Y,UAAA1Y,GAAA,EAA0F,mBAAkB,QAAA6xB,IAAA/xB,GAAe,GAAAgyB,GAAA,CAAO,GAAA9xB,GAAA+xB,EAAS,IAAA/xB,EAAA,CAAM,GAAA1D,GAAA0D,CAAQ,KAAA4xB,GAAA9xB,EAAAE,GAAA,CAAqB,KAARA,EAAAiqB,GAAA3tB,MAAQs1B,GAAA9xB,EAAAE,GAA2C,MAA1BF,GAAAsjB,WAAA,EAAe0O,IAAA,OAAME,GAAAlyB,EAAY6xB,IAAAK,GAAA11B,GAAS01B,GAAAlyB,EAAKiyB,GAAA7H,GAAAlqB,OAASF,GAAAsjB,WAAA,EAAA0O,IAAA,EAAAE,GAAAlyB,GACpZ,QAAAmyB,IAAAnyB,GAAe,IAAAA,IAAAyZ,OAAe,OAAAzZ,GAAA,IAAAA,EAAAqZ,KAAA,IAAArZ,EAAAqZ,KAA+BrZ,IAAAyZ,MAAYyY,IAAAlyB,EAAK,QAAAoyB,IAAApyB,GAAe,GAAAA,IAAAkyB,GAAA,QAAmB,KAAAF,GAAA,MAAAG,IAAAnyB,GAAAgyB,IAAA,IAA6B,IAAA9xB,GAAAF,EAAAiM,IAAa,QAAAjM,EAAAqZ,KAAA,SAAAnZ,GAAA,SAAAA,IAAAgqB,GAAAhqB,EAAAF,EAAA6rB,eAAA,IAAA3rB,EAAA+xB,GAAsE/xB,GAAE2xB,GAAA7xB,EAAAE,KAAAiqB,GAAAjqB,EAAkD,OAAjCiyB,IAAAnyB,GAAMiyB,GAAAC,GAAA/H,GAAAnqB,EAAA4Y,WAAA,MAA2B,EAAS,QAAAyZ,MAAcJ,GAAAC,GAAA,KAAWF,IAAA,EAAM,QAAAjgB,IAAA/R,EAAAE,EAAA1D,GAAkB81B,GAAAtyB,EAAAE,EAAA1D,EAAA0D,EAAA+rB,gBAA2B,QAAAqG,IAAAtyB,EAAAE,EAAA1D,EAAAC,GAAqByD,EAAAujB,MAAA,OAAAzjB,EAAAuyB,GAAAryB,EAAA,KAAA1D,EAAAC,GAAA+1B,GAAAtyB,EAAAF,EAAAyjB,MAAAjnB,EAAAC,GAC9X,QAAAg2B,IAAAzyB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAA+Q,KAAY,OAAAjR,GAAA,OAAAxD,GAAA,OAAAwD,KAAAiR,MAAAzU,KAAA0D,EAAAojB,WAAA,KAA4D,QAAAoP,IAAA1yB,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuBkwB,GAAAzyB,EAAAE,EAAQ,IAAA0C,GAAA,QAAA1C,EAAAojB,UAA2B,KAAA9mB,IAAAoG,EAAA,MAAAnG,IAAAgvB,GAAAvrB,GAAA,GAAAmS,GAAArS,EAAAE,EAAoC1D,GAAA0D,EAAA0Y,UAAc+Z,GAAAjhB,QAAAxR,CAAa,IAAAkC,GAAAQ,EAAA,KAAApG,EAAA0T,QAAgJ,OAAxHhQ,GAAAojB,WAAA,EAAe1gB,IAAA0vB,GAAAtyB,EAAAE,EAAA,KAAAqC,GAAArC,EAAAujB,MAAA,MAAiC6O,GAAAtyB,EAAAE,EAAAkC,EAAAG,GAAYrC,EAAAyrB,cAAAnvB,EAAAi0B,MAAwBvwB,EAAA2rB,cAAArvB,EAAAgU,MAAwB/T,GAAAgvB,GAAAvrB,GAAA,GAAYA,EAAAujB,MAClW,QAAAmP,IAAA5yB,GAAe,GAAAE,GAAAF,EAAA4Y,SAAkB1Y,GAAA+sB,eAAA7B,GAAAprB,EAAAE,EAAA+sB,eAAA/sB,EAAA+sB,iBAAA/sB,EAAAuQ,SAAAvQ,EAAAuQ,SAAA2a,GAAAprB,EAAAE,EAAAuQ,SAAA,GAAmGof,GAAA7vB,EAAAE,EAAAskB,eACpI,QAAAqO,IAAA7yB,EAAAE,EAAA1D,EAAAC,GAAqB,GAAA8F,GAAAvC,EAAAyjB,KAAqC,KAAvB,OAAAlhB,MAAAkX,OAAAzZ,GAA4B,OAAAuC,GAAS,CAAE,OAAAA,EAAA8W,KAAc,WAAAzW,GAAA,EAAAL,EAAAqW,SAA4B,IAAArW,EAAA0J,OAAA/L,GAAA,KAAA0C,EAAApG,GAAA,CAA0B,IAAAoG,EAAAL,EAAQ,OAAAK,GAAS,CAAE,GAAAR,GAAAQ,EAAAwX,SAAkB,QAAAxX,EAAAqpB,gBAAArpB,EAAAqpB,eAAAxvB,EAAAmG,EAAAqpB,eAAAxvB,EAAA,OAAA2F,IAAA,IAAAA,EAAA6pB,gBAAA7pB,EAAA6pB,eAAAxvB,KAAA2F,EAAA6pB,eAAAxvB,OAA0I,WAAA2F,KAAA,IAAAA,EAAA6pB,gBAAA7pB,EAAA6pB,eAAAxvB,GAAgF,KAAhF2F,GAAA6pB,eAAAxvB,EAA2FmG,IAAA6W,OAAW7W,EAAA,SAAOA,GAAAL,EAAAkhB,KAAe,MAAM,SAAA7gB,EAAAL,EAAA0J,OAAAjM,EAAAiM,KAAA,KAAA1J,EAAAkhB,KAAuC,MAAM,SAAA7gB,EAC5eL,EAAAkhB,MAAQ,UAAA7gB,IAAA6W,OAAAlX,MAAuB,KAAAK,EAAAL,EAAa,OAAAK,GAAS,CAAE,GAAAA,IAAA5C,EAAA,CAAU4C,EAAA,IAAO,OAAkB,WAAZL,EAAAK,EAAA8gB,SAAY,CAAanhB,EAAAkX,OAAA7W,EAAA6W,OAAkB7W,EAAAL,CAAI,OAAMK,IAAA6W,OAAWlX,EAAAK,GAC9I,QAAAkwB,IAAA9yB,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAyD,EAAA+L,KAAAmJ,SAAA7S,EAAArC,EAAAsf,aAAA5c,EAAA1C,EAAA2rB,cAAAzpB,GAAA,CAA8D,IAAA0Q,GAAApB,QAAAtP,GAAA,MAAkB,IAAAQ,IAAAL,EAAA,MAAArC,GAAA0Y,UAAA,EAAA0W,GAAApvB,GAAAmS,GAAArS,EAAAE,EAAgD,IAAA8Q,GAAAzO,EAAAN,KAAgC,IAAlB/B,EAAA2rB,cAAAtpB,EAAkB,OAAAK,EAAAoO,EAAA,eAAyB,IAAApO,EAAAX,QAAAM,EAAAN,MAAA,CAA2B,GAAAW,EAAAwO,WAAA7O,EAAA6O,UAAAhP,EAAA,MAAAlC,GAAA0Y,UAAA,EAAA0W,GAAApvB,GAAAmS,GAAArS,EAAAE,EAAgE8Q,GAAA,MAAI,CAAK,GAAA+B,GAAAnQ,EAAAX,KAAc,IAAA8Q,IAAA/B,IAAA,IAAA+B,GAAA,EAAAA,IAAA,EAAA/B,IAAA+B,OAAA/B,MAAA,CAA4C,GAAApO,EAAAwO,WAAA7O,EAAA6O,UAAAhP,EAAA,MAAAlC,GAAA0Y,UAAA,EAAA0W,GAAApvB,GAAAmS,GAAArS,EAAAE,EAAgE8Q,GAAA,MAAI,IAAAA,EAAA,mBAAAvU,GAAAmY,sBAAAnY,EAAAmY,sBAAA7B,EAC9a/B,GAAA,gBAAAA,GAAA,IAA0B,GAAApO,EAAAwO,WAAA7O,EAAA6O,UAAAhP,EAAA,MAAAlC,GAAA0Y,UAAA,EAAA0W,GAAApvB,GAAAmS,GAAArS,EAAAE,OAAgE2yB,IAAA3yB,EAAAzD,EAAAuU,EAAAxU,GAAuD,MAAtC0D,GAAA0Y,UAAA5H,EAAcse,GAAApvB,GAAM6R,GAAA/R,EAAAE,EAAAqC,EAAA6O,UAAkBlR,EAAAujB,MAAe,QAAApR,IAAArS,EAAAE,GAA4D,GAA5C,OAAAF,GAAAE,EAAAujB,QAAAzjB,EAAAyjB,OAAAlQ,EAAA,OAA4C,OAAArT,EAAAujB,MAAA,CAAmBzjB,EAAAE,EAAAujB,KAAU,IAAAjnB,GAAA0vB,GAAAlsB,IAAAwf,aAAAxf,EAAAisB,eAAsD,KAAV/rB,EAAAujB,MAAAjnB,EAAUA,EAAAid,OAAAvZ,EAAe,OAAAF,EAAA0jB,SAAiB1jB,IAAA0jB,QAAAlnB,IAAAknB,QAAAwI,GAAAlsB,IAAAwf,aAAAxf,EAAAisB,gBAAAzvB,EAAAid,OAAAvZ,CAA0E1D,GAAAknB,QAAA,KAAe,MAAAxjB,GAAAujB,MACxa,QAAAsP,IAAA/yB,EAAAE,EAAA1D,GAAmB,OAAA0D,EAAA+rB,gBAAA/rB,EAAA+rB,eAAAzvB,EAAA,CAA6C,OAAA0D,EAAAmZ,KAAc,OAAAuZ,GAAA1yB,EAAa,MAAM,QAAAqrB,GAAArrB,EAAa,MAAM,QAAA2vB,GAAA3vB,IAAA0Y,UAAA4L,cAAuC,MAAM,SAAA8K,GAAApvB,GAAc,YAAY,OAAAA,EAAAmZ,KAAc,cAAArZ,GAAAuT,EAAA,MAAgC,IAAA9W,GAAAyD,EAAA+L,KAAA1J,EAAArC,EAAAsf,aAAA5c,EAAA4nB,GAAAtqB,EACjF,OADuH0C,GAAAgoB,GAAA1qB,EAAA0C,GAAUnG,IAAA8F,EAAAK,GAAS1C,EAAAojB,WAAA,EAAe,iBAAA7mB,IAAA,OAAAA,GAAA,mBAAAA,GAAAyT,YAAA,KAAAzT,EAAA6U,UAAA1O,EAAA1C,EAAA+L,KAAA/L,EAAAmZ,IAAA,EAAAnZ,EAAAyrB,cAAA,OAAAlvB,EAAAg0B,WAAA,KAAAh0B,EAAAg0B,MAAAh0B,EAAAg0B,MAAA,KAAA7tB,IAAAkuB,yBAAA,mBACjTluB,IAAAytB,GAAAnwB,EAAA0C,EAAAL,KAAAgpB,GAAArrB,GAAAzD,EAAAkU,QAAAigB,GAAA1wB,EAAA0Y,UAAAnc,IAAAu2B,oBAAA9yB,EAAA2wB,GAAA3wB,EAAA1D,GAAAwD,EAAA0yB,GAAA1yB,EAAAE,GAAA,EAAAqC,EAAA/F,KAAA0D,EAAAmZ,IAAA,EAAAtH,GAAA/R,EAAAE,EAAAzD,GAAAyD,EAAA2rB,cAAAtpB,EAAAvC,EAAAE,EAAAujB,OAAwJzjB,CAAS,cAAAuC,GAAArC,EAAA+L,KAAAzP,EAAA0D,EAAAsf,aAAA1M,GAAApB,SAAAxR,EAAA2rB,gBAAArvB,GAAAC,EAAA+tB,GAAAtqB,GAAAzD,EAAAmuB,GAAA1qB,EAAAzD,GAAA8F,IAAA/F,EAAAC,GAAAyD,EAAAojB,WAAA,EAAAvR,GAAA/R,EAAAE,EAAAqC,GAAArC,EAAA2rB,cAAArvB,EAAAwD,EAAAE,EAAAujB,OAAAzjB,EAAAqS,GAAArS,EAAAE,GAAAF,CAAmK,QAAe,GAAfuC,EAAAgpB,GAAArrB,GAAe,OAAAF,EAAA,UAAAE,EAAA0Y,UAAA,CAAmC,GAAAxW,GAAAlC,EAAAsf,aAAAxO,EAAA9Q,EAAA+L,IAA8BxP,GAAA+tB,GAAAtqB,EAAQ,IAAA6S,GAAA,IAAA7S,EAAAmZ,KAAA,MAAAnZ,EAAA+L,KAAA4e,YAA2CjoB,GAAAmQ,EAAA6X,GAAA1qB,EAAAzD,GAAAquB,GAAe1oB,EAAA,GAAA4O,GAAA5O,EAAAQ,GAAa1C,EAAAyrB,cAAA,OACnevpB,EAAAquB,WAAA,KAAAruB,EAAAquB,MAAAruB,EAAAquB,MAAA,KAAuCruB,EAAAuO,QAAAigB,GAAa1wB,EAAA0Y,UAAAxW,EAAcA,EAAA4wB,oBAAA9yB,EAAwB6S,MAAA7S,EAAA0Y,UAAA7F,EAAAgY,4CAAAtuB,EAAAsW,EAAAiY,0CAAApoB,GAAiHiuB,GAAA3wB,EAAA1D,GAAQC,GAAA,MAAK,CAAKuU,EAAA9Q,EAAA+L,KAASxP,EAAAyD,EAAA0Y,UAAc7F,EAAA7S,EAAA2rB,cAAkBjpB,EAAA1C,EAAAsf,aAAiB/iB,EAAA+T,MAAAuC,CAAU,IAAA7V,GAAAT,EAAAgU,OAAgBrO,GAAAooB,GAAAtqB,GAAQkC,EAAAwoB,GAAA1qB,EAAAkC,EAAU,IAAA4Q,GAAAhC,EAAA8f,0BAAiC9f,EAAA,mBAAAgC,IAAA,mBAAAvW,GAAAs0B,0BAAA,mBAAAt0B,GAAAk0B,kCAAA,mBAAAl0B,GAAAi0B,4BACpW3d,IAAAnQ,GAAA1F,IAAAkF,IAAAouB,GAAAtwB,EAAAzD,EAAAmG,EAAAR,GAA4B6sB,IAAA,CAAM,IAAA9b,GAAAjT,EAAAyrB,aAAsBzuB,GAAAT,EAAAg0B,MAAAtd,CAAY,IAAAnB,GAAA9R,EAAA0rB,WAAoB,QAAA5Z,IAAAkd,GAAAhvB,EAAA8R,EAAApP,EAAAnG,EAAAD,GAAAU,EAAAgD,EAAAyrB,eAA4C5Y,IAAAnQ,GAAAuQ,IAAAjW,GAAA4V,GAAApB,SAAAud,IAAA,mBAAAjc,KAAAqd,GAAAnwB,EAAA8S,EAAApQ,GAAA1F,EAAAgD,EAAAyrB,gBAAA5Y,EAAAkc,IAAAqB,GAAApwB,EAAA6S,EAAAnQ,EAAAuQ,EAAAjW,EAAAkF,KAAA4O,GAAA,mBAAAvU,GAAAu0B,2BAAA,mBAAAv0B,GAAAw0B,qBAAA,mBAAAx0B,GAAAw0B,oBAAAx0B,EAAAw0B,qBAAA,mBAAAx0B,GAAAu0B,2BAAAv0B,EAAAu0B,6BAAA,mBAAAv0B,GAAAy0B,oBACpIhxB,EAAAojB,WAAA,wBAAA7mB,GAAAy0B,oBAAAhxB,EAAAojB,WAAA,GAAApjB,EAAA2rB,cAAAjpB,EAAA1C,EAAAyrB,cAAAzuB,GAAAT,EAAA+T,MAAA5N,EAAAnG,EAAAg0B,MAAAvzB,EAAAT,EAAAgU,QAAArO,EAAA3F,EAAAsW,IAAA,mBAAAtW,GAAAy0B,oBAAAhxB,EAAAojB,WAAA,GAAA7mB,GAAA,OAAwNuU,GAAA9Q,EAAA+L,KAAAxP,EAAAyD,EAAA0Y,UAAAhW,EAAA1C,EAAA2rB,cAAA9Y,EAAA7S,EAAAsf,aAAA/iB,EAAA+T,MAAA5N,EAAA1F,EAAAT,EAAAgU,QAAArO,EAAAooB,GAAAtqB,GAAAkC,EAAAwoB,GAAA1qB,EAAAkC,GAAA4Q,EAAAhC,EAAA8f,0BAAA9f,EAAA,mBAAAgC,IAAA,mBAAAvW,GAAAs0B,0BAAA,mBAAAt0B,GAAAk0B,kCAAA,mBAAAl0B,GAAAi0B,4BACxN9tB,IAAAmQ,GAAA7V,IAAAkF,IAAAouB,GAAAtwB,EAAAzD,EAAAsW,EAAA3Q,GAAA6sB,IAAA,EAAA/xB,EAAAgD,EAAAyrB,cAAAxY,EAAA1W,EAAAg0B,MAAAvzB,EAAA8U,EAAA9R,EAAA0rB,YAAA,OAAA5Z,IAAAkd,GAAAhvB,EAAA8R,EAAAe,EAAAtW,EAAAD,GAAA2W,EAAAjT,EAAAyrB,eAAA/oB,IAAAmQ,GAAA7V,IAAAiW,GAAAL,GAAApB,SAAAud,IAAA,mBAAAjc,KAAAqd,GAAAnwB,EAAA8S,EAAAD,GAAAI,EAAAjT,EAAAyrB,gBAAA3Y,EAAAic,IAAAqB,GAAApwB,EAAA0C,EAAAmQ,EAAA7V,EAAAiW,EAAA/Q,KAAA4O,GAAA,mBAAAvU,GAAAw2B,4BAAA,mBAAAx2B,GAAAy2B,sBAAA,mBAAAz2B,GAAAy2B,qBAAAz2B,EAAAy2B,oBAAAngB,EAAAI,EAAA/Q,GAAA,mBAAA3F,GAAAw2B,4BAAAx2B,EAAAw2B,2BAAAlgB,EAAAI,EAAA/Q,IAAA,mBAAA3F,GAAA02B,qBACAjzB,EAAAojB,WAAA,sBAAA7mB,GAAAs0B,0BAAA7wB,EAAAojB,WAAA,0BAAA7mB,GAAA02B,oBAAAvwB,IAAA5C,EAAA6rB,eAAA3uB,IAAA8C,EAAA2rB,gBAAAzrB,EAAAojB,WAAA,sBAAA7mB,GAAAs0B,yBAAAnuB,IAAA5C,EAAA6rB,eAAA3uB,IAAA8C,EAAA2rB,gBAAAzrB,EAAAojB,WAAA,KAAApjB,EAAA2rB,cAAA9Y,EAAA7S,EAAAyrB,cAAAxY,GAAA1W,EAAA+T,MAAAuC,EAAAtW,EAAAg0B,MAAAtd,EAAA1W,EAAAgU,QAAArO,EAAA3F,EAAAuW,IAAA,mBAAAvW,GAAA02B,oBAAAvwB,IAAA5C,EAAA6rB,eAAA3uB,IAAA8C,EAAA2rB,gBAAAzrB,EAAAojB,WAAA,sBAAA7mB,GAAAs0B,yBACAnuB,IAAA5C,EAAA6rB,eAAA3uB,IAAA8C,EAAA2rB,gBAAAzrB,EAAAojB,WAAA,KAAA7mB,GAAA,EAAmE,OAAAi2B,IAAA1yB,EAAAE,EAAAzD,EAAA8F,EAAA/F,EAAqB,QAAuW,MAAvWo2B,IAAA1yB,GAAaqC,EAAArC,EAAA0rB,YAAgB,OAAArpB,GAAA9F,EAAAyD,EAAAyrB,cAAAlvB,EAAA,OAAAA,IAAA22B,QAAA,KAAAlE,GAAAhvB,EAAAqC,EAAArC,EAAAsf,aAAA,KAAAhjB,IAAA+F,EAAArC,EAAAyrB,cAAAyH,WAAA32B,GAAA41B,KAAAryB,EAAAqS,GAAArS,EAAAE,KAA4IzD,EAAAyD,EAAA0Y,WAAcnc,GAAA,OAAAuD,GAAA,OAAAA,EAAAyjB,QAAAhnB,EAAAywB,WAAA+E,GAAA7H,GAAAlqB,EAAA0Y,UAAA4L,eAAA0N,GAAAhyB,EAAAzD,EAAAu1B,IAAA,GAAyFv1B,GAAAyD,EAAAojB,WAAA,EAAApjB,EAAAujB,MAAA8O,GAAAryB,EAAA,KAAAqC,EAAA/F,KAAA61B,KAAAtgB,GAAA/R,EAAAE,EAAAqC,IAA0DvC,EAAAE,EAAAujB,SAAU4O,KAAAryB,EAAAqS,GAAArS,EAAAE,IAAmBF,CAAS,QACf,MADyB2vB,IAAAG,GAAApe,SAAenP,EAAAotB,GAAAK,GAAAte,SAAiBjV,EAAAsrB,GAAAxlB,EAClfrC,EAAA+L,MAAQ1J,IAAA9F,IAAAkV,GAAAoe,GAAA7vB,KAAAyR,GAAAqe,GAAAvzB,EAAAyD,IAA6B,OAAAF,GAAA+xB,GAAA7xB,GAAgBqC,EAAArC,EAAA+L,KAAS8G,EAAA7S,EAAA2rB,cAAkBpvB,EAAAyD,EAAAsf,aAAiB5c,EAAA,OAAA5C,IAAA6rB,cAAA,KAAgC/Y,GAAApB,SAAAqB,IAAAtW,KAAsBsW,EAAA,EAAA7S,EAAAgN,QAAAzQ,EAAA42B,UAAAnzB,EAAA+rB,eAAA,YAAsDlZ,GAAA,aAAAvW,IAAyCuW,EAAAtW,EAAA2U,SAAa8Y,GAAA3nB,EAAA9F,GAAAsW,EAAA,KAAAnQ,GAAAsnB,GAAA3nB,EAAAK,KAAA1C,EAAAojB,WAAA,IAA6CmP,GAAAzyB,EAAAE,GAAQ,aAAA1D,GAAA,EAAA0D,EAAAgN,MAAAzQ,EAAA42B,QAAAnzB,EAAA+rB,eAAA,WAAA/rB,EAAA2rB,cAAApvB,EAAAuD,EAAA,OAAA+R,GAAA/R,EAAAE,EAAA6S,GAAA7S,EAAA2rB,cAAApvB,EAAAuD,EAAAE,EAAAujB,QAApFzjB,EAAAqS,GAAArS,EAAAE,GAAqNF,CAAS,sBAAAA,GAAA+xB,GAAA7xB,KAAA2rB,cAAA3rB,EAAAsf,aAClc,IAAK,oBAAoB,cAAAqQ,IAAA3vB,IAAA0Y,UAAA4L,eAAAjiB,EAAArC,EAAAsf,aAAA1M,GAAApB,SAAAxR,EAAA2rB,gBAAAtpB,GAAA,OAAAvC,EAAAE,EAAAujB,MAAA+O,GAAAtyB,EAAA,KAAAqC,EAAA/F,GAAAuV,GAAA/R,EAAAE,EAAAqC,GAAArC,EAAA2rB,cAAAtpB,EAAAvC,EAAAE,EAAAujB,OAAAzjB,EAAAqS,GAAArS,EAAAE,GAAAF,CAAgL,eAAAuC,GAAArC,EAAA+L,KAAAiE,OAAA1T,EAAA0D,EAAAsf,aAAA/iB,EAAAyD,EAAA+Q,IAAA6B,GAAApB,SAAAxR,EAAA2rB,gBAAArvB,GAAAC,KAAA,OAAAuD,IAAAiR,IAAA,OAAA1O,IAAA/F,EAAAC,GAAAsV,GAAA/R,EAAAE,EAAAqC,GAAArC,EAAA2rB,cAAArvB,EAAAwD,EAAAE,EAAAujB,OAAAzjB,EAAAqS,GAAArS,EAAAE,GAAAF,CAA6K,eAAAxD,GAAA0D,EAAAsf,aAAA1M,GAAApB,SAAAxR,EAAA2rB,gBAAArvB,GAAAuV,GAAA/R,EAAAE,EAAA1D,GAAA0D,EAAA2rB,cAAArvB,EAAAwD,EAAAE,EAAAujB,OAAAzjB,EAAAqS,GAAArS,EAAAE,GAAAF,CAAiH,eAAAxD,GACve0D,EAAAsf,aAAApO,SAAA0B,GAAApB,SAAA,OAAAlV,GAAA0D,EAAA2rB,gBAAArvB,GAAAuV,GAAA/R,EAAAE,EAAA1D,GAAA0D,EAAA2rB,cAAArvB,EAAAwD,EAAAE,EAAAujB,OAAAzjB,EAAAqS,GAAArS,EAAAE,GAAAF,CAAmH,eAAAxD,GAAA0D,EAAAsf,aAAAtf,EAAA2rB,gBAAArvB,EAAAwD,EAAAqS,GAAArS,EAAAE,IAAA6R,GAAA/R,EAAAE,EAAA1D,EAAA4U,UAAAlR,EAAA2rB,cAAArvB,EAAAwD,EAAAE,EAAAujB,OAAAzjB,CAA+G,eAAA8yB,IAAA9yB,EAAAE,EAAA1D,EAAyB,SAAAwD,EAAA,GAAAvD,EAAAyD,EAAA+L,KAAArJ,EAAA1C,EAAAsf,aAAAzM,EAAA7S,EAAA2rB,cAAAtpB,EAAA9F,EAAAqY,cAAA1S,EAAA3F,EAAAuY,aAAAlC,GAAApB,SAAA,IAAAtP,GAAA2Q,IAAAnQ,EAAA,CAAoN,GAA/F1C,EAAA2rB,cAAAjpB,EAAkBoO,EAAApO,EAAA0wB,0BAA0B,KAAAtiB,GAAA,OAAAA,MAAA,YAAqC9Q,EAAA0Y,UAAA5H,EAAc,KAAA5O,EAAA4O,GAAA6hB,GAAA3yB,EAAAzD,EAAA2F,EAAA5F,OAAyB,IAAAuW,IAAAnQ,EAAA,CAAe5C,EACvfqS,GAAArS,EAAAE,EAAO,MAAAF,GAAQxD,EAAAoG,EAAAwO,SAAa5U,IAAA+F,GAAOrC,EAAAojB,WAAA,EAAevR,GAAA/R,EAAAE,EAAA1D,GAASwD,EAAAE,EAAAujB,UAAUzjB,GAAAqS,GAAArS,EAAAE,EAAc,OAAAF,EAAS,SAAAuT,EAAA,QAAkB,QAAAggB,IAAAvzB,GAAeA,EAAAsjB,WAAA,EAC7H,QAAAkQ,IAAAxzB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAAsf,YAAqB,QAAAtf,EAAAmZ,KAAc,kBAAmB,cAAA6R,IAAAhrB,GAAA,IAAyB,QAAAiwB,GAAAjwB,GAAairB,GAAAjrB,EAAM,IAAAzD,GAAAyD,EAAA0Y,SAA+I,OAA7Hnc,GAAAwwB,iBAAAxwB,EAAAgU,QAAAhU,EAAAwwB,eAAAxwB,EAAAwwB,eAAA,MAAqE,OAAAjtB,GAAA,OAAAA,EAAAyjB,QAAA2O,GAAAlyB,KAAAojB,YAAA,GAAkDmQ,GAAAvzB,GAAM,IAAY,QAAAkwB,GAAAlwB,GAAazD,EAAAkzB,GAAAG,GAAApe,QAAiB,IAAAnP,GAAArC,EAAA+L,IAAa,WAAAjM,GAAA,MAAAE,EAAA0Y,UAAA,CAAgC,GAAAhW,GAAA5C,EAAA6rB,cAAAzpB,EAAAlC,EAAA0Y,UAAA5H,EAAA2e,GAAAK,GAAAte,QAAqDtP,GAAAwnB,GAAAxnB,EAAAG,EAAAK,EAAApG,EAAAC,GAAgBi3B,GAAA1zB,EAAAE,EAAAkC,EAAAG,EAAAK,EAAApG,EAAAC,EAAAuU,GAAoBhR,EAAAiR,MAAA/Q,EAAA+Q,MAAA/Q,EAAAojB,WAAA,SAAkC,CAAK,IAAA9mB,EAAA,cAAA0D,EAAA0Y,WACzdrF,EAAA,WAAsC,IAAjBvT,EAAA2vB,GAAAK,GAAAte,SAAiB0gB,GAAAlyB,GAAA1D,EAAA0D,EAAA0Y,UAAArW,EAAArC,EAAA+L,KAAArJ,EAAA1C,EAAA2rB,cAAArvB,EAAAiW,IAAAvS,EAAA1D,EAAAgd,IAAA5W,EAAAnG,EAAAqtB,GAAAttB,EAAA+F,EAAAK,EAAA5C,EAAAvD,GAAAyD,EAAA0rB,YAAAnvB,EAAA,OAAAA,GAAA82B,GAAArzB,OAAiH,CAAKF,EAAA+oB,GAAAxmB,EAAA/F,EAAAC,EAAAuD,GAAcA,EAAAyS,IAAAvS,EAAOF,EAAAwZ,IAAAhd,CAAQwD,GAAA,IAAA4C,EAAA1C,EAAAujB,MAAgB,OAAA7gB,GAAS,CAAE,OAAAA,EAAAyW,KAAA,IAAAzW,EAAAyW,IAAArZ,EAAA2zB,YAAA/wB,EAAAgW,eAAmD,QAAAhW,EAAAyW,KAAA,OAAAzW,EAAA6gB,MAAA,CAAmC7gB,EAAA6gB,MAAAhK,OAAA7W,EAAiBA,IAAA6gB,KAAU,UAAS,GAAA7gB,IAAA1C,EAAA,KAAe,MAAK,OAAA0C,EAAA8gB,SAAiB,CAAE,UAAA9gB,EAAA6W,QAAA7W,EAAA6W,SAAAvZ,EAAA,KAAAF,EAAyC4C,KAAA6W,OAAW7W,EAAA8gB,QAAAjK,OAAA7W,EAAA6W,OAA0B7W,IAAA8gB,QAAY4F,GAAAtpB,EAAAuC,EAAA/F,EAAAC,GAAYutB,GAAAznB,EAAA/F,IAAA+2B,GAAArzB,GAAeA,EAAA0Y,UAC1e5Y,EAAE,OAAAE,EAAA+Q,MAAA/Q,EAAAojB,WAAA,KAAiC,WAAY,WAAAtjB,GAAA,MAAAE,EAAA0Y,UAAAgb,GAAA5zB,EAAAE,EAAAF,EAAA6rB,cAAArvB,OAAyD,CAAK,oBAAAA,GAAA,cAAA0D,EAAA0Y,WAAArF,EAAA,WAAsE9W,GAAAkzB,GAAAG,GAAApe,SAAiBie,GAAAK,GAAAte,SAAe0gB,GAAAlyB,IAAAzD,EAAAyD,EAAA0Y,UAAApc,EAAA0D,EAAA2rB,cAAApvB,EAAAgW,IAAAvS,EAAA6pB,GAAAttB,EAAAD,IAAA+2B,GAAArzB,KAAAzD,EAAA4sB,GAAA7sB,EAAAC,KAAAgW,IAAAvS,IAAA0Y,UAAAnc,GAA+F,WAAY,SAAoB,QAAoB,QAAoB,QAAoB,mBAAoB,cAAA0zB,IAAAjwB,GAAAuzB,GAAAvzB,GAAA,IAA+B,eAAAwvB,IAAAxvB,GAAA,IAA0B,oBAAoB,QAAAqT,EAAA,MAC/e,SAAAA,EAAA,QAAkB,QAAAsgB,IAAA7zB,EAAAE,GAAiB,GAAA1D,GAAA0D,EAAAlB,MAAe,QAAAkB,EAAAiF,OAAA,OAAA3I,GAAAqjB,GAAArjB,GAAgC,OAAAA,GAAAyiB,GAAAziB,GAAgB0D,IAAA+B,MAAU,OAAAjC,GAAA,IAAAA,EAAAqZ,KAAA4F,GAAAjf,EAA2B,KAAIE,KAAA4zB,2BAAAjvB,QAAA/B,MAAA5C,GAAiD,MAAAzD,GAASA,KAAAq3B,2BAAAjvB,QAAA/B,MAAArG,IAAkD,QAAAs3B,IAAA/zB,GAAe,GAAAE,GAAAF,EAAAiR,GAAY,WAAA/Q,EAAA,sBAAAA,GAAA,IAAyCA,EAAA,MAAQ,MAAA1D,GAASw3B,GAAAh0B,EAAAxD,OAAQ0D,GAAAwR,QAAA,KACpV,QAAAuiB,IAAAj0B,GAA6C,OAA9B,mBAAAguB,QAAAhuB,GAA8BA,EAAAqZ,KAAc,OAAA0a,GAAA/zB,EAAa,IAAAE,GAAAF,EAAA4Y,SAAkB,uBAAA1Y,GAAAg0B,qBAAA,IAAkDh0B,EAAAsQ,MAAAxQ,EAAA6rB,cAAA3rB,EAAAuwB,MAAAzwB,EAAA2rB,cAAAzrB,EAAAg0B,uBAAyE,MAAA13B,GAASw3B,GAAAh0B,EAAAxD,GAAQ,KAAM,QAAAu3B,GAAA/zB,EAAa,MAAM,QAAAm0B,GAAAn0B,IAAc,QAAAo0B,IAAAp0B,GAAe,WAAAA,EAAAqZ,KAAA,IAAArZ,EAAAqZ,KAAA,IAAArZ,EAAAqZ,IAC5R,QAAAgb,IAAAr0B,GAAeA,EAAA,CAAG,OAAAE,GAAAF,EAAAyZ,OAAmB,OAAAvZ,GAAS,CAAE,GAAAk0B,GAAAl0B,GAAA,CAAU,GAAA1D,GAAA0D,CAAQ,MAAAF,GAAQE,IAAAuZ,OAAWlG,EAAA,OAAS/W,MAAA,GAAS,GAAAC,GAAAyD,MAAA,EAAe,QAAA1D,EAAA6c,KAAc,OAAAnZ,EAAA1D,EAAAoc,UAAqBnc,GAAA,CAAK,MAAM,QAA8C,OAAAyD,EAAA1D,EAAAoc,UAAA4L,cAAmC/nB,GAAA,CAAK,MAAM,SAAA8W,EAAA,OAAiB,GAAA/W,EAAA8mB,YAAA0E,GAAA9nB,EAAA,IAAA1D,EAAA8mB,YAAA,GAA4CtjB,GAAAE,EAAA,IAAA1D,EAAAwD,IAAa,CAAE,KAAK,OAAAxD,EAAAknB,SAAiB,CAAE,UAAAlnB,EAAAid,QAAA2a,GAAA53B,EAAAid,QAAA,CAAkCjd,EAAA,IAAO,MAAAwD,GAAQxD,IAAAid,OAAqC,IAA1Bjd,EAAAknB,QAAAjK,OAAAjd,EAAAid,OAA0Bjd,IAAAknB,QAAgB,IAAAlnB,EAAA6c,KAAA,IAAA7c,EAAA6c,KAAqB,CAAE,KAAA7c,EAAA8mB,UAAA,QAAApjB,EACje,WAAA1D,EAAAinB,OAAA,IAAAjnB,EAAA6c,IAAA,QAAAnZ,EAAwC1D,GAAAinB,MAAAhK,OAAAjd,MAAAinB,MAAgC,OAAAjnB,EAAA8mB,WAAA,CAAqB9mB,IAAAoc,SAAc,MAAA5Y,IAAS,OAAAuC,GAAAvC,IAAa,CAAE,OAAAuC,EAAA8W,KAAA,IAAA9W,EAAA8W,IAAA,GAAA7c,EAAA,GAAAC,EAAA,CAAmC,GAAAmG,GAAA1C,EAAAkC,EAAAG,EAAAqW,UAAA5H,EAAAxU,CAA0B,KAAAoG,EAAAsb,SAAAtb,EAAAwW,WAAAkb,aAAAlyB,EAAA4O,GAAApO,EAAA0xB,aAAAlyB,EAAA4O,OAAkE9Q,GAAAo0B,aAAA/xB,EAAAqW,UAAApc,OAAmCC,IAAAmG,EAAA1C,EAAAkC,EAAAG,EAAAqW,UAAA,IAAAhW,EAAAsb,SAAAtb,EAAAwW,WAAAkb,aAAAlyB,EAAAQ,KAAA+wB,YAAAvxB,IAAAlC,EAAAyzB,YAAApxB,EAAAqW,eAAqH,QAAArW,EAAA8W,KAAA,OAAA9W,EAAAkhB,MAAA,CAAmClhB,EAAAkhB,MAAAhK,OAAAlX,EAAiBA,IAAAkhB,KAAU,UAAS,GAAAlhB,IAAAvC,EAAA,KAAe,MAAK,OACrfuC,EAAAmhB,SAAU,CAAE,UAAAnhB,EAAAkX,QAAAlX,EAAAkX,SAAAzZ,EAAA,MAAwCuC,KAAAkX,OAAWlX,EAAAmhB,QAAAjK,OAAAlX,EAAAkX,OAA0BlX,IAAAmhB,SACzF,QAAAyQ,IAAAn0B,GAAe,OAAAE,GAAAF,EAAAxD,GAAA,EAAAC,MAAA,GAAA8F,MAAA,KAAoC,CAAE,IAAA/F,EAAA,CAAOA,EAAA0D,EAAAuZ,MAAWzZ,GAAA,OAAQ,CAA2B,OAAzB,OAAAxD,GAAA+W,EAAA,OAAyB/W,EAAA6c,KAAc,OAAA5c,EAAAD,EAAAoc,UAAqBrW,GAAA,CAAK,MAAAvC,EAAQ,QAAgD,OAAAvD,EAAAD,EAAAoc,UAAA4L,cAAmCjiB,GAAA,CAAK,MAAAvC,GAAQxD,IAAAid,OAAWjd,GAAA,EAAK,OAAA0D,EAAAmZ,KAAA,IAAAnZ,EAAAmZ,IAAA,CAAyBrZ,EAAA,OAAA4C,GAAA1C,EAAAkC,EAAAQ,IAAmB,GAAAqxB,GAAA7xB,GAAA,OAAAA,EAAAqhB,OAAA,IAAArhB,EAAAiX,IAAAjX,EAAAqhB,MAAAhK,OAAArX,MAAAqhB,UAA+D,CAAK,GAAArhB,IAAAQ,EAAA,KAAe,MAAK,OAAAR,EAAAshB,SAAiB,CAAE,UAAAthB,EAAAqX,QAAArX,EAAAqX,SAAA7W,EAAA,KAAA5C,EAAyCoC,KAAAqX,OAAWrX,EAAAshB,QAAAjK,OAAArX,EAAAqX,OAA0BrX,IAAAshB,QAAYnhB,GAC3fK,EAAAnG,EAAA2F,EAAAlC,EAAA0Y,UAAA,IAAAhW,EAAAsb,SAAAtb,EAAAwW,WAAA+P,YAAA/mB,GAAAQ,EAAAumB,YAAA/mB,IAAA3F,EAAA0sB,YAAAjpB,EAAA0Y,eAA2G,QAAA1Y,EAAAmZ,IAAA5c,EAAAyD,EAAA0Y,UAAA4L,cAAAyP,GAAA/zB,GAAA,OAAAA,EAAAujB,MAAA,CAAoEvjB,EAAAujB,MAAAhK,OAAAvZ,EAAiBA,IAAAujB,KAAU,UAAS,GAAAvjB,IAAAF,EAAA,KAAe,MAAK,OAAAE,EAAAwjB,SAAiB,CAAE,UAAAxjB,EAAAuZ,QAAAvZ,EAAAuZ,SAAAzZ,EAAA,MAAwCE,KAAAuZ,OAAW,IAAAvZ,EAAAmZ,MAAA7c,GAAA,GAAkB0D,EAAAwjB,QAAAjK,OAAAvZ,EAAAuZ,OAA0BvZ,IAAAwjB,SACzV,QAAA6Q,IAAAv0B,EAAAE,GAAiB,OAAAA,EAAAmZ,KAAc,YAAa,WAAA7c,GAAA0D,EAAA0Y,SAAyB,UAAApc,EAAA,CAAY,GAAAC,GAAAyD,EAAA2rB,aAAsB7rB,GAAA,OAAAA,IAAA6rB,cAAApvB,CAA6B,IAAA8F,GAAArC,EAAA+L,KAAArJ,EAAA1C,EAAA0rB,WAA6B1rB,GAAA0rB,YAAA,KAAmB,OAAAhpB,IAAApG,EAAAgd,IAAA/c,EAAAotB,GAAArtB,EAAAoG,EAAAL,EAAAvC,EAAAvD,IAAkC,KAAM,eAAAyD,EAAA0Y,WAAArF,EAAA,OAA0CrT,EAAA0Y,UAAAsP,UAAAhoB,EAAA2rB,aAAsC,MAAM,QAAa,QAAc,aAAc,SAAAtY,EAAA,QAAkB,QAAAihB,IAAAx0B,EAAAE,EAAA1D,GAAmBA,EAAAkyB,GAAAlyB,GAAQA,EAAA6c,IAAA,EAAQ7c,EAAAmyB,SAAWyE,QAAA,KAAc,IAAA32B,GAAAyD,EAAA+B,KAAmD,OAArCzF,GAAA+J,SAAA,WAAsBkuB,GAAAh4B,GAAMo3B,GAAA7zB,EAAAE,IAAS1D,EAC5d,QAAAk4B,IAAA10B,EAAAE,EAAA1D,GAAmBA,EAAAkyB,GAAAlyB,GAAQA,EAAA6c,IAAA,CAAQ,IAAA5c,GAAAuD,EAAA4Y,SAAiO,OAA/M,QAAAnc,GAAA,mBAAAA,GAAAk4B,oBAAAn4B,EAAA+J,SAAA,WAA0E,OAAAquB,MAAA,GAAAC,MAAAz0B,OAAAw0B,GAAAE,IAAA10B,KAA0C,IAAA5D,GAAA0D,EAAA+B,MAAAxF,EAAAyD,EAAAiF,KAAwB0uB,IAAA7zB,EAAAE,GAAQE,KAAAu0B,kBAAAn4B,GAA0Bu4B,eAAA,OAAAt4B,IAAA,OAAiCD,EACpQ,QAAAw4B,IAAAh1B,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,GAAyBpG,EAAA8mB,WAAA,IAAiB9mB,EAAAuvB,YAAAvvB,EAAAsvB,WAAA,KAAgCrvB,EAAA4yB,GAAA5yB,EAAAD,GAAUwD,EAAAE,CAAI,IAAG,OAAAF,EAAAqZ,KAAc,OAA+C,MAA/CrZ,GAAAsjB,WAAA,KAAyB7mB,EAAA+3B,GAAAx0B,EAAAvD,EAAAmG,OAAYksB,IAAA9uB,EAAAvD,EAAAmG,EAAiB,WAAA1C,EAAAzD,EAAAD,EAAAwD,EAAA4Y,UAAA,QAAA5Y,EAAAsjB,YAAA,OAAA9mB,GAAA,mBAAAA,GAAAm4B,oBAAA,OAAAC,QAAAvmB,IAAA7R,IAAsK,MAAxCwD,GAAAsjB,WAAA,KAAkB7mB,EAAAi4B,GAAA10B,EAAAE,EAAA0C,OAAYksB,IAAA9uB,EAAAvD,EAAAmG,GAAkB5C,IAAAyZ,aAAW,OAAAzZ,GACxV,QAAAi1B,IAAAj1B,GAAe,OAAAA,EAAAqZ,KAAc,OAAA6R,GAAAlrB,EAAa,IAAAE,GAAAF,EAAAsjB,SAAkB,aAAApjB,GAAAF,EAAAsjB,WAAA,KAAApjB,EAAA,GAAAF,GAAA,IAA8C,cAAAmwB,IAAAnwB,GAAAmrB,GAAAnrB,GAAAE,EAAAF,EAAAsjB,UAAA,KAAApjB,GAAAF,EAAAsjB,WAAA,KAAApjB,EAAA,GAAAF,GAAA,IAA+E,cAAAowB,IAAApwB,GAAA,IAAyB,eAAAE,GAAAF,EAAAsjB,UAAA,KAAApjB,GAAAF,EAAAsjB,WAAA,KAAApjB,EAAA,GAAAF,GAAA,IAAoE,cAAAmwB,IAAAnwB,GAAA,IAAyB,eAAA0vB,IAAA1vB,GAAA,IAA0B,sBACzU,QAAAk1B,MAAc,UAAA5iB,GAAA,OAAAtS,GAAAsS,GAAAmH,OAA+B,OAAAzZ,GAAS,CAAE,GAAAE,GAAAF,CAAQ,QAAAE,EAAAmZ,KAAc,OAAA6R,GAAAhrB,EAAa,MAAM,QAAAiwB,GAAAjwB,GAAairB,GAAAjrB,EAAM,MAAM,QAAAkwB,GAAAlwB,EAAa,MAAM,QAAAiwB,GAAAjwB,EAAa,MAAM,SAAAwvB,GAAAxvB,GAAcF,IAAAyZ,OAAW0b,GAAA,KAAQ3iB,GAAA,EAAI4iB,IAAA,EAAMC,IAAA,EAAM/iB,GAAA,KAAOgjB,IAAA,EACxN,QAAAC,IAAAv1B,GAAe,OAAM,CAAE,GAAAE,GAAAF,EAAAoa,UAAA5d,EAAAwD,EAAAyZ,OAAAhd,EAAAuD,EAAA0jB,OAAyC,aAAA1jB,EAAAsjB,WAAA,CAA0BpjB,EAAAszB,GAAAtzB,EAAAF,EAAAwS,GAAY,IAAAjQ,GAAAvC,CAAQ,iBAAAwS,IAAA,aAAAjQ,EAAA0pB,eAAA,CAAkD,GAAArpB,GAAA,CAAQ,QAAAL,EAAA8W,KAAc,iBAAAjX,GAAAG,EAAAqpB,WAAkC,QAAAxpB,IAAAQ,EAAAR,EAAA6pB,gBAA+B,IAAA7pB,EAAAG,EAAAkhB,MAAc,OAAArhB,GAAS,IAAAA,EAAA6pB,iBAAA,IAAArpB,KAAAR,EAAA6pB,kBAAArpB,EAAAR,EAAA6pB,gBAAA7pB,IAAAshB,OAAqFnhB,GAAA0pB,eAAArpB,EAAmB,UAAA1C,EAAA,MAAAA,EAC9L,IADmN,OAAA1D,GAAA,SAAAA,EAAA8mB,aAAA,OAAA9mB,EAAAuvB,cAAAvvB,EAAAuvB,YAAA/rB,EAAA+rB,aAAA,OAAA/rB,EAAA8rB,aAC3Y,OAAAtvB,EAAAsvB,aAAAtvB,EAAAsvB,WAAAE,WAAAhsB,EAAA+rB,aAAAvvB,EAAAsvB,WAAA9rB,EAAA8rB,YAAA,EAAA9rB,EAAAsjB,YAAA,OAAA9mB,EAAAsvB,WAAAtvB,EAAAsvB,WAAAE,WAAAhsB,EAAAxD,EAAAuvB,YAAA/rB,EAAAxD,EAAAsvB,WAAA9rB,IAAwL,OAAAvD,EAAA,MAAAA,EAAqB,WAAAD,EAAgB,CAAK84B,IAAA,CAAM,OAA3Bt1B,EAAAxD,MAAkC,CAAkB,WAAbwD,EAAAi1B,GAAAj1B,EAAAq1B,GAAA7iB,KAAa,MAAAxS,GAAAsjB,WAAA,IAAAtjB,CAAmG,IAA7D,OAAAxD,MAAAuvB,YAAAvvB,EAAAsvB,WAAA,KAAAtvB,EAAA8mB,WAAA,KAA6D,OAAA7mB,EAAA,MAAAA,EAAqB,WAAAD,EAAgB,KAAhBwD,GAAAxD,GAA4B,YACrZ,QAAAg5B,IAAAx1B,GAAe,GAAAE,GAAA6yB,GAAA/yB,EAAAoa,UAAApa,EAAAwS,GAA8D,OAApC,QAAAtS,MAAAq1B,GAAAv1B,IAAoB2yB,GAAAjhB,QAAA,KAAgBxR,EAC7E,QAAAu1B,IAAAz1B,EAAAE,EAAA1D,GAAmBk5B,IAAAniB,EAAA,OAAmBmiB,IAAA,EAAMx1B,IAAAsS,IAAAxS,IAAAm1B,IAAA,OAAA7iB,KAAA4iB,KAAAC,GAAAn1B,EAAAwS,GAAAtS,EAAAk1B,IAAA,EAAA9iB,GAAA4Z,GAAAiJ,GAAAzjB,QAAA,KAAAc,IAAAxS,EAAA+sB,4BAAA,EAAuG,IAAAtwB,IAAA,CAAsB,KAAb44B,IAAA74B,GAAAgW,IAAAmjB,KAAa,CAAG,IAAI,GAAAn5B,EAAA,KAAU,OAAA8V,KAAAsjB,MAAgBtjB,GAAAkjB,GAAAljB,QAAS,MAAU,OAAAA,IAASA,GAAAkjB,GAAAljB,IAAS,MAAA1P,GAAS,UAAA0P,GAAA7V,GAAA,EAAAg4B,GAAA7xB,OAAuB,CAAK,OAAA0P,IAAAiB,EAAA,OAAyB/W,EAAA8V,EAAI,IAAA/P,GAAA/F,EAAAid,MAAe,WAAAlX,EAAA,CAAa9F,GAAA,EAAKg4B,GAAA7xB,EAAM,OAAMoyB,GAAAh1B,EAAAuC,EAAA/F,EAAAoG,EAAAyyB,GAAA7iB,GAAAqjB,IAAoBvjB,GAAAijB,GAAA/4B,IAAS,MAAqB,GAANk5B,IAAA,EAAMj5B,EAAA,WAAiB,WAAA6V,GAAA,CAAa,GAAAgjB,GAAA,MAAAt1B,GAAA+sB,4BAAA7sB,EAAAF,EAAA0R,QAAA0I,SAAiEib,KAAA9hB,EAAA,OACxe,GAAA6hB,IAAAlwB,WAAA,WAA6B,GAAAhF,GAAAF,EAAA0R,QAAAua,cAA+B,KAAA/rB,IAAA,IAAAF,EAAAmtB,yBAAAntB,EAAAmtB,wBAAAjtB,IAAA41B,GAAA91B,EAAAE,IAA6Ek1B,IAAKW,GAAA/1B,EAAA0R,QAAAua,gBAA6B,YAClL,QAAA+H,IAAAh0B,EAAAE,GAAiB,GAAA1D,EAAMwD,GAAA,CAA2B,IAAxB01B,KAAAM,IAAAziB,EAAA,OAAwB/W,EAAAwD,EAAAyZ,OAAe,OAAAjd,GAAS,CAAE,OAAAA,EAAA6c,KAAc,UAAA5c,GAAAD,EAAAoc,SAAyB,uBAAApc,GAAAyP,KAAAgqB,0BAAA,mBAAAx5B,GAAAk4B,oBAAA,OAAAC,QAAAvmB,IAAA5R,IAAA,CAA0HuD,EAAAqvB,GAAAnvB,EAAAF,GAAUA,EAAA00B,GAAAl4B,EAAAwD,EAAA,GAAY6uB,GAAAryB,EAAAwD,EAAA,GAAUk2B,GAAA15B,EAAA,GAAQA,MAAA,EAAS,MAAAwD,GAAQ,KAAM,QAAAA,EAAAqvB,GAAAnvB,EAAAF,GAAiBA,EAAAw0B,GAAAh4B,EAAAwD,EAAA,GAAY6uB,GAAAryB,EAAAwD,EAAA,GAAUk2B,GAAA15B,EAAA,GAAQA,MAAA,EAAS,MAAAwD,GAAQxD,IAAAid,OAAW,IAAAzZ,EAAAqZ,MAAA7c,EAAA6yB,GAAAnvB,EAAAF,GAAAxD,EAAAg4B,GAAAx0B,EAAAxD,EAAA,GAAAqyB,GAAA7uB,EAAAxD,EAAA,GAAA05B,GAAAl2B,EAAA,IAAqDxD,MAAA,GAAS,MAAAA,GACrb,QAAA25B,MAAc,GAAAn2B,GAAA,UAAAo2B,KAAA,aAAmD,OAAhBp2B,IAAAq2B,KAAAr2B,EAAAq2B,GAAA,GAAgBA,GAAAr2B,EAAY,QAAAs2B,IAAAt2B,EAAAE,GAAmI,MAAlHF,GAAA,IAAAu2B,MAAAb,GAAAM,GAAA,EAAAxjB,GAAA,EAAAtS,EAAAgN,KAAAspB,GAAA,UAAAx2B,EAAA,uBAAAA,EAAA,gBAAuFw2B,KAAA,IAAAC,IAAAz2B,EAAAy2B,SAAAz2B,GAA2BA,EAChN,QAAAk2B,IAAAl2B,EAAAE,GAAiB,KAAK,OAAAF,GAAS,CAAoL,IAAlL,IAAAA,EAAAisB,gBAAAjsB,EAAAisB,eAAA/rB,KAAAF,EAAAisB,eAAA/rB,GAA+D,OAAAF,EAAAoa,YAAA,IAAApa,EAAAoa,UAAA6R,gBAAAjsB,EAAAoa,UAAA6R,eAAA/rB,KAAAF,EAAAoa,UAAA6R,eAAA/rB,GAAmH,OAAAF,EAAAyZ,OAAA,QAAAzZ,EAAAqZ,IAAiJ,KAAhH,IAAA7c,GAAAwD,EAAA4Y,WAAkB8c,IAAA,IAAAljB,IAAAtS,EAAAsS,IAAA0iB,IAAsB,IAAAz4B,GAAAD,EAAAkV,QAAAua,cAA+ByJ,MAAAM,IAAAb,KAAA34B,GAAAs5B,GAAAt5B,EAAAC,GAAyBi6B,GAAAC,IAAApjB,EAAA,OAA2BvT,IAAAyZ,QAAY,QAAA2c,MAAyB,MAAXP,IAAAe,KAAAC,GAAWlB,GAAA,GAAAE,GAAA,MACpZ,QAAAiB,IAAA92B,GAAe,GAAAE,GAAAq2B,EAASA,IAAA,UAAAH,KAAA,aAAgC,KAAI,MAAAp2B,KAAW,QAAQu2B,GAAAr2B,GAAM,QAAA62B,IAAA/2B,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB,GAAAK,GAAA2zB,EAASA,IAAA,CAAK,KAAI,MAAAv2B,GAAAE,EAAA1D,EAAAC,EAAA8F,GAAkB,QAAQg0B,GAAA3zB,GAAmI,QAAAo0B,IAAAh3B,GAAe,OAAAi3B,GAAA,CAAW,GAAAj3B,EAAAi3B,GAAA,MAAe,QAAAC,IAAAC,GAAAD,IAAkB,GAAAh3B,GAAA02B,KAAAC,EAAcI,IAAAj3B,EAAKk3B,GAAAE,GAAAC,IAAUpyB,QAAA,IAAAjF,EAAA,GAAAE,IACnX,QAAA41B,IAAA91B,EAAAE,GAAiB,UAAAF,EAAAqtB,kBAAArtB,EAAAmtB,wBAAAjtB,EAAA,OAAAyS,IAAA2kB,GAAA3kB,GAAA3S,IAAAqtB,kBAAArtB,IAAA2S,MAAA0a,kBAAArtB,EAAA2S,GAAA0a,kBAAAiK,QAAmJ,CAAK,GAAA96B,GAAAwD,EAAAmtB,yBAAgC,IAAA3wB,GAAA0D,EAAA1D,KAAAwD,EAAAmtB,wBAAAjtB,GAA0C0S,KAAAsD,GAAAqhB,KAAAnjB,GAAApU,EAAAgW,GAAA,EAAAwhB,GAAAx3B,EAAA,WAAAE,EAAAu3B,KAAAT,GAAA92B,IACnP,QAAAw3B,MAAc,GAAA13B,GAAA,EAAAE,EAAA,IAAe,WAAAyS,GAAA,OAAAnW,GAAAmW,GAAAlW,EAAA66B,GAA6B,OAAA76B,GAAS,CAAE,GAAA8F,GAAA9F,EAAA0wB,uBAAgC,QAAA5qB,EAAA,CAA6C,IAAnC,OAAA/F,GAAA,OAAAmW,KAAAY,EAAA,OAAmC9W,MAAA4wB,kBAAA,CAA4BiK,GAAA3kB,GAAAlW,EAAA4wB,kBAAA,IAA8B,OAAM,GAAA5wB,IAAA66B,MAAA/0B,EAAA9F,EAAA4wB,kBAAA1a,GAAA0a,kBAAA9qB,EAAA9F,EAAA4wB,kBAAA,SAAuF,IAAA5wB,IAAAkW,GAAA,CAAeA,GAAAnW,EAAImW,GAAA0a,kBAAAiK,GAAuB76B,EAAA4wB,kBAAA,IAAyB,OAAM7wB,EAAA6wB,kBAAA5wB,EAAA4wB,kBAAA5wB,EAAA4wB,kBAAA,KAAsE5wB,EAAAD,EAAA6wB,sBAAsB,CAA2B,IAAtB,IAAArtB,GAAAuC,EAAAvC,OAAAuC,EAAArC,EAAAzD,GAAsBA,IAAAkW,GAAA,KACzenW,GAAAC,EAAIA,IAAA4wB,mBAAuB7wB,EAAA4X,GAAI,OAAA5X,OAAA0D,GAAA,IAAAF,EAAA02B,QAAA,EAAiCtiB,GAAAlU,EAAI8V,GAAAhW,EAAI,QAAAq3B,IAAAr3B,GAAe23B,GAAA,KAAA33B,GAAW,QAAAy3B,MAAcE,GAAA,WAAc,QAAAA,IAAA33B,EAAAE,EAAA1D,GAA6B,GAAVo7B,GAAAp7B,EAAKk7B,KAAKx3B,EAAA,KAAU,OAAAkU,IAAA,IAAA4B,KAAA,IAAAhW,MAAAgW,OAAA6hB,IAAAzB,MAAApgB,KAA+CogB,KAAAoB,GAAApjB,GAAA4B,IAAA6hB,IAAAH,SAAuB,MAAU,OAAAtjB,IAAA,IAAA4B,KAAA,IAAAhW,MAAAgW,KAA+BwhB,GAAApjB,GAAA4B,IAAA,GAAA0hB,IAAiB,QAAAE,KAAAX,GAAA,EAAAC,GAAA,MAA0B,IAAAlhB,IAAAghB,GAAAhhB,IAAa4hB,GAAA,KAAQC,IAAA,EAAMC,KAAK,QAAAC,IAAA/3B,EAAAE,GAAiB0S,IAAAW,EAAA,OAAkBa,GAAApU,EAAIgW,GAAA9V,EAAIs3B,GAAAx3B,EAAAE,GAAA,GAAWu3B,KAAKK,KAC1Z,QAAAA,MAAmB,GAALpB,GAAA,EAAK,OAAAsB,GAAA,CAAc,GAAAh4B,GAAAg4B,EAASA,IAAA,IAAQ,QAAA93B,GAAA,EAAYA,EAAAF,EAAAX,OAAWa,IAAA,CAAK,GAAA1D,GAAAwD,EAAAE,EAAW,KAAI1D,EAAAy7B,cAAgB,MAAAx7B,GAASy7B,SAAA,EAAAC,GAAA17B,KAAmB,GAAAy7B,GAAA,KAAAl4B,GAAAm4B,MAAA,KAAAD,IAAA,EAAAl4B,EAAkC,QAAAw3B,IAAAx3B,EAAAE,EAAA1D,GAAmBoW,IAAAW,EAAA,OAAkBX,IAAA,EAAKpW,KAAAwD,EAAAgtB,aAAA,OAAAxwB,EAAA47B,GAAAp4B,EAAAxD,EAAA0D,GAAA,QAAA1D,EAAAi5B,GAAAz1B,EAAAE,GAAA,MAAA01B,KAAA51B,EAAAgtB,aAAAxwB,EAAA47B,GAAAp4B,EAAAxD,EAAA0D,MAAA1D,EAAAwD,EAAAgtB,aAAA,OAAAxwB,EAAA47B,GAAAp4B,EAAAxD,EAAA0D,GAAA,QAAA1D,EAAAi5B,GAAAz1B,EAAAE,GAAA,KAAAk4B,GAAAp4B,EAAAxD,EAAA0D,IAA4K0S,IAAA,EACjY,QAAAwlB,IAAAp4B,EAAAE,EAAA1D,GAAmB,GAAAC,GAAAuD,EAAAotB,UAAmB,WAAA3wB,KAAA47B,iBAAA77B,IAAA,OAAAw7B,OAAAv7B,GAAAu7B,GAAA12B,KAAA7E,KAAA67B,QAAwH,MAA7Ct4B,GAAAgtB,aAAA9sB,OAAiBF,EAAAmtB,wBAAA,EAAuN,IAApLntB,EAAAgtB,aAAA,KAAoBgJ,GAAAN,IAAA,EAASl5B,EAAA0D,EAAA0Y,UAAcpc,EAAAkV,UAAAxR,GAAAqT,EAAA,OAA8B9W,EAAAD,EAAAuwB,4BAAgC,IAAAtwB,GAAA8W,EAAA,OAAsB/W,EAAAuwB,4BAAA,EAAgCqJ,KAAKzD,GAAAjhB,QAAA,KAAgB,EAAAxR,EAAAojB,UAAA,UAAApjB,EAAA4rB,WAAA,CAAyC5rB,EAAA4rB,WAAAE,WAAA9rB,CAA0B,IAAAqC,GAAArC,EAAA6rB,gBAAoBxpB,GAAArC,MAASqC,GAAArC,EAAA6rB,WAAqBwM,IAAA5T,EAAM,IAAA/hB,GAAAqjB,IAAW,IAAAL,GAAAhjB,GAAA,CAAU,qBACzeA,GAAA,GAAAR,IAAS8jB,MAAAtjB,EAAAujB,eAAAC,IAAAxjB,EAAAyjB,kBAA2CrmB,GAAA,CAAQ,GAAAgR,GAAAxO,OAAA8jB,cAAA9jB,OAAA8jB,cAAiD,IAAAtV,GAAA,IAAAA,EAAAwnB,WAAA,CAAwBp2B,EAAA4O,EAAAuV,UAAe,IAAAxT,GAAA/B,EAAAwV,aAAAtpB,EAAA8T,EAAAyV,SAAmCzV,KAAA0V,WAAgB,KAAItkB,EAAA8b,SAAAhhB,EAAAghB,SAAsB,MAAAua,GAAUr2B,EAAA,IAAO,MAAApC,GAAQ,GAAAgT,GAAA,EAAAG,GAAA,EAAAnB,GAAA,EAAA0f,EAAA,EAAAC,EAAA,EAAA/gB,EAAAhO,EAAA2O,EAAA,IAAuCrR,GAAA,OAAQ,CAAE,OAAAkT,GAAaxC,IAAAxO,GAAA,IAAA2Q,GAAA,IAAAnC,EAAAsN,WAAA/K,EAAAH,EAAAD,GAAsCnC,IAAA1T,GAAA,IAAA8T,GAAA,IAAAJ,EAAAsN,WAAAlM,EAAAgB,EAAAhC,GAAsC,IAAAJ,EAAAsN,WAAAlL,GAAApC,EAAAsX,UAAA7oB,QAAwC,QAAA+T,EAAAxC,EAAA2U,aAAiChU,EAAAX,EAAIA,EAAAwC,CAAI,QAAM,CAAE,GAAAxC,IAAAhO,EAAA,KAAA1C,EACtb,IADucqR,IAAAnP,KAC9esvB,IAAA3e,IAAAI,EAAAH,GAAgBzB,IAAArU,KAAAy0B,IAAA3gB,IAAAgB,EAAAgB,GAAuB,QAAAI,EAAAxC,EAAA+U,aAAA,KAAkC/U,GAAAW,EAAIA,EAAAX,EAAAwI,WAAexI,EAAAwC,EAAIhR,GAAA,IAAA+Q,IAAA,IAAAnB,EAAA,MAAuBkU,MAAA/S,EAAAiT,IAAApU,OAAe5P,GAAA,KAAYA,MAAM8jB,MAAA,EAAAE,IAAA,OAAehkB,GAAA,IAAuD,KAA3Cs2B,IAAIC,YAAA/1B,EAAAg2B,eAAAx2B,GAAgCsiB,IAAA,GAAOhS,GAAAnQ,EAAQ,OAAAmQ,IAAS,CAAE9P,GAAA,EAAKR,MAAA,EAAS,KAAI,KAAK,OAAAsQ,IAAS,CAAE,OAAAA,GAAA4Q,UAAA,CAAoB,GAAA/Q,GAAAG,GAAA0H,SAAsB,QAAJrH,EAAAL,GAAIK,EAAAsG,KAAc,cAAAtG,EAAAuQ,WAAA,OAAA/Q,EAAA,CAAqC,GAAAc,GAAAd,EAAAsZ,cAAAxb,EAAAkC,EAAAoZ,cAAAkN,EAAA9lB,EAAA6F,SAAuDigB,GAAAroB,MAAAuC,EAAA8Y,cAAyBgN,EAAApI,MAAA1d,EAAA4Y,aAAyB,IAAAmN,GAAAD,EAAA9H,wBAAA1d,EACzdhD,EAAGwoB,GAAAE,oCAAAD,EAA0C,KAAM,kCAAkC,SAAAvlB,EAAA,QAAkBb,MAAAsZ,YAAgB,MAAAyM,GAAU71B,GAAA,EAAAR,EAAAq2B,EAAU71B,IAAA,OAAA8P,IAAAa,EAAA,OAAAygB,GAAAthB,GAAAtQ,GAAA,OAAAsQ,WAAAsZ,aAAiE,IAAAtZ,GAAAnQ,EAAQ,OAAAmQ,IAAS,CAAEH,GAAA,EAAKc,MAAA,EAAS,KAAI,KAAK,OAAAX,IAAS,CAAE,GAAAG,GAAAH,GAAA4Q,SAA2C,IAAzB,GAAAzQ,GAAAmV,GAAAtV,GAAAkG,UAAA,IAAyB,IAAA/F,EAAA,CAAU,GAAAS,GAAAZ,GAAA0H,SAAkB,WAAA9G,EAAA,CAAa,GAAAjX,GAAAiX,EAAArC,GAAY,QAAA5U,IAAA,mBAAAA,KAAA,MAAAA,EAAAqV,QAAA,OAA0D,UAAAmB,GAAa,OAAAwhB,GAAA3hB,IAAaA,GAAA4Q,YAAA,CAAgB,MAAM,QAAA+Q,GAAA3hB,IAAaA,GAAA4Q,YAAA,EAAgBiR,GAAA7hB,GAAA0H,UACxe1H,GAAG,MAAM,QAAA6hB,GAAA7hB,GAAA0H,UAAA1H,GAAyB,MAAM,QAAArC,EAAAqC,GAAAyhB,GAAA9jB,KAAAoJ,OAAA,KAAApJ,EAAAoT,MAAA,KAAApT,EAAA+J,YAAA/J,EAAA+J,UAAAqJ,MAAA,KAAApT,EAAA+J,UAAAX,OAAA,MAA0G/G,MAAAsZ,YAAgB,MAAAyM,GAAUlmB,GAAA,EAAAc,EAAAolB,EAAUlmB,IAAA,OAAAG,IAAAa,EAAA,OAAAygB,GAAAthB,GAAAW,GAAA,OAAAX,WAAAsZ,aAAgH,GAA/C3vB,EAAAq8B,GAAKplB,EAAA2S,KAAOpT,EAAAxW,EAAAs8B,YAAgBpmB,EAAAlW,EAAAu8B,eAAmBtlB,IAAAT,GAAAmmB,GAAA5xB,SAAAwT,gBAAA/H,GAAA,CAA0C,OAAAN,GAAAqT,GAAA/S,KAAAS,EAAAf,EAAA2T,MAAA7pB,EAAAkW,EAAA6T,QAAA,KAAA/pB,MAAAiX,GAAA,kBAAAT,MAAAsT,eAAA7S,EAAAT,EAAAwT,aAAA4S,KAAAC,IAAA78B,EAAAwW,EAAA5Q,MAAA5C,SAAAmD,OAAA8jB,eAAAhT,EAAA9Q,OAAA8jB,eAChVjT,EAAAR,EAAA4H,KAAApb,OAAAhD,EAAA48B,KAAAC,IAAA3mB,EAAA2T,MAAA7S,GAAAd,MAAA,KAAAA,EAAA6T,IAAA/pB,EAAA48B,KAAAC,IAAA3mB,EAAA6T,IAAA/S,IAAAC,EAAA6lB,QAAA98B,EAAAkW,IAAAc,EAAAd,IAAAlW,IAAAgX,KAAAmS,GAAA3S,EAAAxW,GAAAgU,EAAAmV,GAAA3S,EAAAN,GAAAc,GAAAhD,IAAA,IAAAiD,EAAAklB,YAAAllB,EAAAiT,aAAAlT,EAAAlM,MAAAmM,EAAAkT,eAAAnT,EAAAqS,QAAApS,EAAAmT,YAAApW,EAAAlJ,MAAAmM,EAAAoT,cAAArW,EAAAqV,UAAAmT,EAAAzxB,SAAAgyB,cAAAP,EAAAQ,SAAAhmB,EAAAlM,KAAAkM,EAAAqS,QAAApS,EAAAgmB,kBAAAj9B,EAAAkW,GAAAe,EAAAimB,SAAAV,GAAAvlB,EAAA6lB,OAAA9oB,EAAAlJ,KAAAkJ,EAAAqV,UAAAmT,EAAAW,OAAAnpB,EAAAlJ,KAAAkJ,EAAAqV,QAAApS,EAAAimB,SAAAV,OAAoavlB,IAAK,KAAAjX,EAAAwW,EAAQxW,IAAA+c,YAAe,IAAA/c,EAAA6hB,UAAA5K,EAAAhS,MAAyB8xB,QAAA/2B,EAAAo9B,KAAAp9B,EAAAq9B,WACzdC,IAAAt9B,EAAAu9B,WAAyD,KAAvC,mBAAA/mB,GAAAgW,OAAAhW,EAAAgW,QAAuChW,EAAA,EAAQA,EAAAS,EAAAjU,OAAWwT,IAAAxW,EAAAiX,EAAAT,GAAAxW,EAAA+2B,QAAAsG,WAAAr9B,EAAAo9B,KAAAp9B,EAAA+2B,QAAAwG,UAAAv9B,EAAAs9B,IAAoG,IAAnCjB,GAAA,KAAQhU,GAAA6T,IAAOA,GAAA,KAAQ/7B,EAAAkV,QAAAxR,EAAYwS,GAAAnQ,EAAQ,OAAAmQ,IAAS,CAAEnQ,GAAA,EAAKsQ,MAAA,EAAS,KAAI,IAAAS,EAAA7W,EAAQ,OAAAiW,IAAS,CAAE,GAAAmnB,GAAAnnB,GAAA4Q,SAAmB,OAAAuW,EAAA,CAAU,GAAAC,GAAApnB,GAAA0H,SAA2B,QAAR/d,EAAAqW,GAAIH,EAAAe,EAAIjX,EAAAgd,KAAc,UAAA0gB,GAAA19B,EAAAuc,SAA0B,MAAAvc,EAAAinB,UAAA,UAAAwW,EAAAC,EAAAvpB,MAAAnU,EAAAwvB,cAAAkO,EAAAtJ,MAAAp0B,EAAAsvB,cAAAoO,EAAA7I,wBAAuG,CAAK,GAAA8I,GAAAF,EAAAjO,cAAAoO,EAAAH,EAAAnO,aAA4CoO,GAAAvpB,MAAAnU,EAAAwvB,cAChekO,EAAAtJ,MAAAp0B,EAAAsvB,cAAyBoO,EAAA5G,mBAAA6G,EAAAC,EAAAF,EAAAhB,qCAAoE,GAAAmB,GAAA79B,EAAAuvB,WAAqB,QAAAsO,IAAAH,EAAAvpB,MAAAnU,EAAAwvB,cAAAkO,EAAAtJ,MAAAp0B,EAAAsvB,cAAAyD,GAAA/yB,EAAA69B,EAAAH,EAAAxnB,GAA6E,MAAM,WAAA4nB,GAAA99B,EAAAuvB,WAA4B,WAAAuO,EAAA,CAAqB,GAAP9mB,EAAA,KAAO,OAAAhX,EAAAonB,MAAA,OAAApnB,EAAAonB,MAAApK,KAAsC,OAAAhG,EAAAhX,EAAAonB,MAAA7K,SAA2B,MAAM,QAAAvF,EAAAhX,EAAAonB,MAAA7K,UAA2BwW,GAAA/yB,EAAA89B,EAAA9mB,EAAAd,GAAa,KAAM,WAAA6nB,GAAA/9B,EAAAuc,SAA0B,QAAAkhB,GAAA,EAAAz9B,EAAAinB,WAAA0G,GAAA3tB,EAAA4P,KAAA5P,EAAAwvB,gBAAAuO,EAAAvR,OAAiE,MAAM,QAAa,OAAa,QAAc,aACpf,SAAAtV,EAAA,QAAkB,OAAAsmB,EAAA,CAAWx9B,MAAA,EAAS,IAAAg+B,GAAA3nB,GAAAzB,GAAa,WAAAopB,EAAA,CAAc,GAAAC,GAAA5nB,GAAAkG,SAAmB,QAAAlG,GAAA2G,KAAc,OAAAhd,EAAAi+B,CAAY,MAAM,SAAAj+B,EAAAi+B,EAAa,mBAAAD,KAAAh+B,GAAAg+B,EAAA3oB,QAAArV,GAA2C,GAAAk+B,GAAA7nB,GAAAsZ,UAAoBtZ,IAAAsZ,WAAA,KAAkBtZ,GAAA6nB,GAAM,MAAA9B,GAAUl2B,GAAA,EAAAsQ,EAAA4lB,EAAUl2B,IAAA,OAAAmQ,IAAAa,EAAA,OAAAygB,GAAAthB,GAAAG,GAAA,OAAAH,WAAAsZ,aAAiE0J,GAAAM,IAAA,EAAS,mBAAAjI,QAAA7tB,EAAA0Y,WAAwC1Y,EAAA1D,EAAAkV,QAAAua,eAA2B,IAAA/rB,IAAA00B,GAAA,MAAiB50B,EAAAmtB,wBAAAjtB,EAA4B,QAAA01B,MAAc,eAAAgC,OAAA4C,gBAAAC,MAAA5C,IAAA,GACpb,QAAApD,IAAAz0B,GAAe,OAAAoU,IAAAb,EAAA,OAAyBa,GAAA+Y,wBAAA,EAA4B+K,SAAA,EAAAC,GAAAn4B,GAAiB,QAAA+1B,IAAA/1B,GAAe,OAAAoU,IAAAb,EAAA,OAAyBa,GAAA+Y,wBAAAntB,EAA4B,QAAA06B,IAAA16B,EAAAE,GAAiB,GAAA1D,GAAA0Z,EAAQA,KAAA,CAAK,KAAI,MAAAlW,GAAAE,GAAY,SAAQgW,GAAA1Z,IAAAoW,IAAA6kB,MAAgB,QAAAkD,IAAA36B,EAAAE,GAAiB,GAAAgW,KAAAqhB,GAAA,CAAWA,IAAA,CAAM,KAAI,MAAAv3B,GAAAE,GAAY,QAAQq3B,IAAA,GAAO,MAAAv3B,GAAAE,GAAY,QAAA06B,IAAA56B,EAAAE,GAAiB0S,IAAAW,EAAA,MAAkB,IAAA/W,GAAA0Z,EAAQA,KAAA,CAAK,KAAI,MAAA6gB,IAAA/2B,EAAAE,GAAe,QAAQgW,GAAA1Z,EAAAi7B,MACvX,QAAAoD,IAAA76B,EAAAE,EAAA1D,GAAmB,GAAAg6B,GAAA,MAAAx2B,GAAAE,EAAA1D,EAAoB0Z,KAAAtD,IAAA,IAAA6jB,KAAAkB,GAAAlB,IAAA,QAAAA,GAAA,EAAoC,IAAAh6B,GAAA+5B,GAAAj0B,EAAA2T,EAAaA,IAAAsgB,IAAA,CAAQ,KAAI,MAAAx2B,GAAAE,EAAA1D,GAAc,QAAQg6B,GAAA/5B,GAAAyZ,GAAA3T,IAAAqQ,IAAA6kB,MAAqB,QAAAqD,IAAA96B,GAAe,GAAAE,GAAAgW,EAAQA,KAAA,CAAK,KAAI6gB,GAAA/2B,GAAM,SAAQkW,GAAAhW,IAAA0S,IAAA+kB,GAAA,YAC7L,QAAAoD,IAAA/6B,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB,GAAAK,GAAA1C,EAAAwR,OAAgB,IAAAlV,EAAA,CAAMA,IAAAw2B,mBAAwB,IAAA5wB,EAAMlC,GAAA,CAAwC,IAArC,IAAAmjB,GAAA7mB,IAAA,IAAAA,EAAA6c,KAAA9F,EAAA,OAAqCnR,EAAA5F,EAAQ,IAAA4F,EAAAiX,KAAU,CAAE,GAAAoR,GAAAroB,GAAA,CAAUA,IAAAwW,UAAA4S,yCAAwD,MAAAtrB,IAAQkC,IAAAqX,SAAAlG,EAAA,OAA6BnR,IAAAwW,UAAAnI,QAAsBjU,EAAAiuB,GAAAjuB,GAAA6uB,GAAA7uB,EAAA4F,SAAkB5F,GAAAsuB,EAA2J,OAAjJ,QAAA5qB,EAAAuQ,QAAAvQ,EAAAuQ,QAAAjU,EAAA0D,EAAA+sB,eAAAzwB,EAAgD0D,EAAAqC,EAAIA,EAAAmsB,GAAAjyB,GAAQ8F,EAAAosB,SAAWyE,QAAApzB,GAAWE,MAAA,KAAAA,EAAA,KAAAA,EAAoB,OAAAA,IAAAqC,EAAAgE,SAAArG,GAAyB2uB,GAAAjsB,EAAAL,EAAA9F,GAAUy5B,GAAAtzB,EAAAnG,GAAQA,EACjb,QAAAu+B,IAAAh7B,GAAe,GAAAE,GAAAF,EAAAgzB,mBAAgH,YAApF,KAAA9yB,IAAA,mBAAAF,GAAAkQ,OAAAqD,EAAA,OAAAA,EAAA,MAAA1W,OAAAgC,KAAAmB,KAA4EA,EAAA2jB,GAAAzjB,GAAQ,OAAAF,EAAA,KAAAA,EAAA4Y,UAAiC,QAAAqiB,IAAAj7B,EAAAE,EAAA1D,EAAAC,GAAqB,GAAA8F,GAAArC,EAAAwR,OAAiC,OAAVnP,GAAA+zB,GAAvBF,KAAuB7zB,GAAUw4B,GAAA/6B,EAAAE,EAAA1D,EAAA+F,EAAA9F,GAAqB,QAAAy+B,IAAAl7B,GAA2B,GAAZA,IAAA0R,SAAY1R,EAAAyjB,MAAA,WAAwB,QAAAzjB,EAAAyjB,MAAApK,KAAoB,OAAgC,cAAArZ,GAAAyjB,MAAA7K,WAClV,QAAAuiB,IAAAn7B,GAAe,GAAAE,GAAAF,EAAAo7B,uBAAgC,OAAA7N,IAAA/vB,MAAcwC,GAAIq7B,wBAAA,SAAAr7B,GAA4C,MAARA,GAAA2jB,GAAA3jB,GAAQ,OAAAA,EAAA,KAAAA,EAAA4Y,WAAiCwiB,wBAAA,SAAAp7B,GAAqC,MAAAE,KAAAF,GAAA,SAEnL,QAAAs7B,IAAAt7B,EAAAE,EAAA1D,GAAmB,GAAAC,GAAA,EAAA2C,UAAAC,YAAA,KAAAD,UAAA,GAAAA,UAAA,OAAkE,QAAOkS,SAAAgO,GAAAhgB,IAAA,MAAA7C,EAAA,QAAAA,EAAA2U,SAAApR,EAAAwkB,cAAAtkB,EAAAssB,eAAAhwB,GAAyH,QAAA++B,IAAAv7B,GAAeI,KAAAi4B,gBAAAlC,KAA0B/1B,KAAA6a,MAAAjb,EAAaI,KAAAo7B,WAAAp7B,KAAAq7B,MAAA,KAAgCr7B,KAAAs7B,aAAAt7B,KAAAu7B,cAAA,EAAuCv7B,KAAAw7B,UAAA,KAAoBx7B,KAAAk4B,QAAA,EAGvL,QAAAuD,MAAcz7B,KAAAo7B,WAAA,KAAqBp7B,KAAA07B,YAAA,EAAmB17B,KAAA27B,UAAA37B,KAAA27B,UAAAj6B,KAAA1B,MACnC,QAAA47B,IAAAh8B,EAAAE,EAAA1D,GAAmB4D,KAAA67B,cAAAxP,GAAAzsB,EAAAE,EAAA1D,GAE0C,QAAA0/B,IAAAl8B,GAAe,SAAAA,GAAA,IAAAA,EAAAke,UAAA,IAAAle,EAAAke,UAAA,KAAAle,EAAAke,WAAA,IAAAle,EAAAke,UAAA,iCAAAle,EAAAkoB,YAC9Q,QAAAiU,IAAAn8B,EAAAE,GAAwI,GAAvHA,MAAAF,EAAA,IAAAA,EAAAke,SAAAle,EAAA4a,gBAAA5a,EAAAulB,WAAA,KAAArlB,QAAA,IAAAA,EAAAge,WAAAhe,EAAAk8B,aAAA,qBAAuHl8B,EAAA,OAAA1D,GAAgBA,EAAAwD,EAAAioB,WAAcjoB,EAAAmpB,YAAA3sB,EAAkB,WAAAw/B,IAAAh8B,GAAA,EAAAE,GACxL,QAAAm8B,IAAAr8B,EAAAE,EAAA1D,EAAAC,EAAA8F,GAAuB25B,GAAA1/B,IAAA+W,EAAA,MAAsB,IAAA3Q,GAAApG,EAAA8/B,mBAA4B,IAAA15B,EAAA,CAAM,sBAAAL,GAAA,CAA0B,GAAAH,GAAAG,CAAQA,GAAA,WAAa,GAAAvC,GAAAk7B,GAAAt4B,EAAAq5B,cAA0B75B,GAAA9F,KAAA0D,IAAW,MAAAA,EAAA4C,EAAA25B,kCAAAv8B,EAAAE,EAAAqC,GAAAK,EAAAsN,OAAAhQ,EAAAqC,OAAiE,CAAqC,GAAhCK,EAAApG,EAAA8/B,oBAAAH,GAAA3/B,EAAAC,GAAgC,mBAAA8F,GAAA,CAA0B,GAAAyO,GAAAzO,CAAQA,GAAA,WAAa,GAAAvC,GAAAk7B,GAAAt4B,EAAAq5B,cAA0BjrB,GAAA1U,KAAA0D,IAAW26B,GAAA,WAAc,MAAA36B,EAAA4C,EAAA25B,kCAAAv8B,EAAAE,EAAAqC,GAAAK,EAAAsN,OAAAhQ,EAAAqC,KAAmE,MAAA24B,IAAAt4B,EAAAq5B,eAC9a,QAAAO,IAAAx8B,EAAAE,GAAiB,GAAA1D,GAAA,EAAA4C,UAAAC,YAAA,KAAAD,UAAA,GAAAA,UAAA,OAAwF,OAAtB88B,IAAAh8B,IAAAqT,EAAA,OAAsB+nB,GAAAt7B,EAAAE,EAAA,KAAA1D,GAhO5F,GAAA6Z,IAAAta,EAAA,GAAAkrB,GAAAlrB,EAAA,GAAAQ,GAAAR,EAAA,IAAAyB,GAAAzB,EAAA,GAAAmX,GAAAnX,EAAA,GAAAkqB,GAAAlqB,EAAA,IAAA6qB,GAAA7qB,EAAA,IAAAi9B,GAAAj9B,EAAA,IAAA+uB,GAAA/uB,EAAA,EACwTkrB,KAAA1T,EAAA,MAErU,IAAAC,KAAOgD,aAAA,KAAAD,iBAAA,EAAAK,cAAA,KAAAD,kBAAA,EAAA8lB,sBAAA,SAAAz8B,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,EAAAR,EAAA4O,EAAA+B,GAA8HuD,EAAAG,MAAAjD,GAAApU,YAAsB2Y,wCAAA,SAAA/X,EAAAE,EAAA1D,EAAAC,EAAA8F,EAAAK,EAAAR,EAAA4O,EAAA+B,GAAmH,GAA9CS,GAAAipB,sBAAAhmB,MAAArW,KAAAhB,WAA8CoU,GAAAkpB,iBAAA,CAAuB,GAAAx/B,GAAAsW,GAAAmpB,kBAA2BnpB,IAAAmD,mBAAAnD,GAAAmD,kBAAA,EAAAnD,GAAAoD,cAAA1Z,KAA+D+b,mBAAA,WAA+B,MAAAvC,GAAAD,MAAAjD,GAAApU,YAA6Bs9B,eAAA,WAA2B,MAAAlpB,IAAA+C,iBAAyBomB,iBAAA,WAA6B,GAAAnpB,GAAA+C,gBAAA,CAAsB,GAAAvW,GACliBwT,GAAAgD,YAAwD,OAAzChD,IAAAgD,aAAA,KAAoBhD,GAAA+C,iBAAA,EAAqBvW,EAASuT,EAAA,SAA2HuD,GAAA,KAAAC,MAEtGC,MAAAG,MAAeI,MAAMC,MAC3GolB,IAAQC,QAAA7lB,GAAA8lB,yBAAA3lB,GAAA4lB,wBAAAxlB,GAAAylB,6BAAAxlB,GAAAylB,0BAAA,KAAAC,uBAAAxlB,EAAAylB,yBAAAxlB,GAAuLkB,GAAA,KAAAkE,GAAA,KAAAjF,GAAA,KACkEkB,GAAA,KACsFokB,IAAQF,uBAAAxlB,EAAAylB,yBAAAxlB,GAEnG0lB,IAAQC,UAAAF,GAAAG,YAAA5kB,EAAA6kB,iBAAAzkB,EAAA0kB,0BAAAvkB,GAA6EwkB,GAAAzE,KAAA0E,SAAAhyB,SAAA,IAAAxD,MAAA,GAAAsK,GAAA,2BAAAirB,GAAAlkB,GAAA,wBAAAkkB,GACpGE,IAAQC,kBAAA,SAAA79B,EAAAE,GAAgCA,EAAAuS,IAAAzS,GAAO89B,2BAAA3kB,EAAA4kB,oBAAA,SAAA/9B,GAAsE,MAAPA,KAAAyS,KAAOzS,GAAA,IAAAA,EAAAqZ,KAAA,IAAArZ,EAAAqZ,IAAA,KAAArZ,GAAsCg+B,oBAAA1kB,EAAA2kB,6BAAA1kB,EAAA2kB,iBAAA,SAAAl+B,EAAAE,GAAuFF,EAAAwZ,IAAAtZ,IAI/di+B,IAAQC,6BAAAlkB,EAAAmkB,uCAAA,SAAAr+B,GAAmFkY,EAAAlY,EAAA+Z,IAASukB,+BAAAnkB,EAAAokB,2BAAA,SAAAv+B,GAA0EkY,EAAAlY,EAAAia,KAC9KM,IAAQikB,aAAAnkB,EAAA,4BAAAokB,mBAAApkB,EAAA,kCAAAqkB,eAAArkB,EAAA,8BAAAskB,cAAAtkB,EAAA,+BAAmM5Y,MAAM+Y,KAAOje,IAAAoe,YAAAH,GAAApT,SAAA+I,cAAA,OAAAiY,MAAA,kBAAA5lB,gBAAA+X,IAAAikB,aAAAI,gBAAArkB,IAAAkkB,mBAAAG,gBAAArkB,IAAAmkB,eAAAE,WAAA,mBAAAp8B,eAAA+X,IAAAokB,cAAAE,WAC5E,IAAAC,IAAAxkB,EAAA,gBAAAykB,GAAAzkB,EAAA,sBAAA0kB,GAAA1kB,EAAA,kBAAA2kB,GAAA3kB,EAAA,iBAAAwO,GAAA,sNAAApqB,MAAA,KAAAgc,GAAA,KAC1B7J,IAAOoK,MAAA,KAAAF,WAAA,KAAAD,cAAA,MACzHokB,GAAA,uHAAAxgC,MAAA,KAAAygC,IAA6IlzB,KAAA,KAAAlN,OAAA,KAAA8Y,cAAA3E,GAAAvP,gBAAAy7B,WAAA,KAAAC,QAAA,KAAAC,WAAA,KAAAC,UAAA,SAAAv/B,GAAyH,MAAAA,GAAAu/B,WAAAC,KAAAC,OAA+BpkB,iBAAA,KAAAqkB,UAAA,KAErSliC,IAAAsT,EAAAxT,WAAeqiC,eAAA,WAA0Bv/B,KAAAib,kBAAA,CAAyB,IAAArb,GAAAI,KAAA8a,WAAuBlb,OAAA2/B,eAAA3/B,EAAA2/B,iBAAA,kBAAA3/B,GAAAsb,cAAAtb,EAAAsb,aAAA,GAAAlb,KAAAgb,mBAAAlI,GAAAxP,kBAAwIk8B,gBAAA,WAA4B,GAAA5/B,GAAAI,KAAA8a,WAAuBlb,OAAA4/B,gBAAA5/B,EAAA4/B,kBAAA,kBAAA5/B,GAAA6/B,eAAA7/B,EAAA6/B,cAAA,GAAAz/B,KAAAkY,qBAAApF,GAAAxP,kBAA8Io8B,QAAA,WAAoB1/B,KAAAmY,aAAArF,GAAAxP,iBAAoC6U,aAAArF,GAAAzP,iBAC1diY,WAAA,WAAsB,GAAAxb,GAAAF,EAAAI,KAAAU,YAAAqa,SAAmC,KAAAjb,IAAAF,GAAAI,KAAAF,GAAA,IAAwB,KAAAF,EAAA,EAAQA,EAAAk/B,GAAA7/B,OAAYW,IAAAI,KAAA8+B,GAAAl/B,IAAA,QAAwB8Q,EAAAqK,UAAAgkB,GAAeruB,EAAAqoB,OAAA,SAAAn5B,GAAqB,QAAAE,MAAc,QAAA1D,KAAa,MAAAC,GAAAga,MAAArW,KAAAhB,WAA+B,GAAA3C,GAAA2D,IAAWF,GAAA5C,UAAAb,EAAAa,SAAwB,IAAAiF,GAAA,GAAArC,EAA6H,OAAjH1C,IAAA+E,EAAA/F,EAAAc,WAAiBd,EAAAc,UAAAiF,EAAc/F,EAAAc,UAAAwD,YAAAtE,EAA0BA,EAAA2e,UAAA3d,MAAgBf,EAAA0e,UAAAnb,GAAgBxD,EAAA28B,OAAA18B,EAAA08B,OAAkBxd,EAAAnf,GAAMA,GAAUmf,EAAA7K,EACzF,IAAAivB,IAAAjvB,EAAAqoB,QAAiB3xB,KAAA,OAAUw4B,GAAAlvB,EAAAqoB,QAAe3xB,KAAA,OAAUsU,IAAA,YAAAU,GAAAjgB,GAAAoe,WAAA,oBAAAnY,QAAAy9B,GAAA,IAAsE1jC,IAAAoe,WAAA,gBAAAvT,YAAA64B,GAAA74B,SAAA84B,aACta,IAAAC,IAAA5jC,GAAAoe,WAAA,aAAAnY,UAAAy9B,GAAApjB,GAAAtgB,GAAAoe,aAAA6B,IAAAyjB,IAAA,EAAAA,IAAA,IAAAA,IAAA5jB,GAAAle,OAAAG,aAAA,IAAA8hC,IAAqHC,aAAajpB,yBAAyB4M,QAAA,gBAAAC,SAAA,wBAAwDxM,cAAA,kDAAgE6oB,gBAAiBlpB,yBAAyB4M,QAAA,mBAAAC,SAAA,2BAA8DxM,aAAA,uDAAA/Y,MAAA,MAAgF6hC,kBAAmBnpB,yBAAyB4M,QAAA,qBACvfC,SAAA,6BAAqCxM,aAAA,yDAAA/Y,MAAA,MAAkF8hC,mBAAoBppB,yBAAyB4M,QAAA,sBAAAC,SAAA,8BAAoExM,aAAA,0DAAA/Y,MAAA,OAAoF0d,IAAA,EACzDG,IAAA,EAEnQkkB,IAAQvpB,WAAAkpB,GAAAnpB,cAAA,SAAAjX,EAAAE,EAAA1D,EAAAC,GAA8C,GAAA8F,OAAA,GAAaK,MAAA,EAAa,IAAA4Z,GAAAtc,EAAA,CAAS,OAAAF,GAAU,uBAAAuC,EAAA69B,GAAAG,gBAA8C,MAAArgC,EAAQ,sBAAAqC,EAAA69B,GAAAE,cAA0C,MAAApgC,EAAQ,yBAAAqC,EAAA69B,GAAAI,iBAAgD,MAAAtgC,GAAQqC,MAAA,OAASga,IAAAV,EAAA7b,EAAAxD,KAAA+F,EAAA69B,GAAAE,gBAAA,YAAAtgC,GAAA,MAAAxD,EAAAuf,UAAAxZ,EAAA69B,GAAAG,iBACrI,OADoOh+B,IAAAsa,KAAAN,IAAAha,IAAA69B,GAAAG,iBAAAh+B,IAAA69B,GAAAE,gBAAA/jB,KAAA3Z,EAAAiY,MAAAhK,GAAAoK,MAAAxe,EAAAoU,GAAAkK,WAAAC,IAAAuB,IAAA,IAAAha,EAAAw9B,GAAAnkB,UAAArZ,EAAArC,EAAA1D,EAAAC,GAAAmG,EAAAL,EAAAiF,KAC3W5E,EAAA,QAAAA,EAAAoZ,EAAAxf,MAAA+F,EAAAiF,KAAA5E,GAAAsX,EAAA3X,GAAAK,EAAAL,GAAAK,EAAA,MAAmD5C,EAAAmgC,GAAAjkB,EAAAlc,EAAAxD,GAAA8f,EAAAtc,EAAAxD,KAAA0D,EAAA8/B,GAAApkB,UAAAwkB,GAAAC,YAAAngC,EAAA1D,EAAAC,GAAAyD,EAAAsH,KAAAxH,EAAAka,EAAAha,MAAA,KAAoF,OAAA0C,EAAA1C,EAAA,OAAAA,EAAA0C,KAAA1C,KAAoC8c,GAAA,KAAA0jB,IAAaC,mCAAA,SAAA3gC,GAA+Cgd,GAAAhd,IAAMmd,GAAA,KAAAC,GAAA,KACzGwjB,IAAQtD,UAAAoD,GAAAG,oBAAA3jB,EAAA4jB,kBAAAzjB,EAAA0jB,qBAAAzjB,GAA+JK,IAAA,EAC3SG,IAAQkjB,OAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,kBAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAv1B,MAAA,EAAAw1B,MAAA,EAAA30B,KAAA,EAAA40B,MAAA,GAIRjP,GAAA1L,GAAAnR,mDAAAC,kBAAA8rB,GAAA,mBAAA34B,gBAAA+J,IAAAue,GAAAqQ,GAAA34B,OAAA+J,IAAA,uBAAAqM,GAAAuiB,GAAA34B,OAAA+J,IAAA,sBAAAoM,GAAAwiB,GAAA34B,OAAA+J,IAAA,wBAAAyM,GAAAmiB,GAAA34B,OAAA+J,IAAA,2BAAAsM,GAAAsiB,GAAA34B,OAAA+J,IAAA,wBAAAwM,GAAAoiB,GAAA34B,OAAA+J,IAAA,wBAAAmM,GAAAyiB,GAAA34B,OAAA+J,IAAA,uBAAAkM,GAAA0iB,GAAA34B,OAAA+J,IAAA,0BAAA2M,GAAAiiB,GAAA34B,OAAA+J,IAAA,2BAAA0M,GAAAkiB,GAAA34B,OAAA+J,IAAA,iBACA,MAAA+L,GAAA,mBAAA9V,gBAAAL,SAGAwX,GAAA,8VAAAD,MAA0WD,MAErM1O,KAAS,wIAAA/S,MAAA,KAAAC,QAAA,SAAAqB,GAAsKyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAA,UACpV,sGAAArB,QAAA,SAAAqB,GAA4H,GAAAE,GAAAF,EAAA,EAAWyR,IAAAvR,GAAA,GAAA8T,IAAA9T,EAAA,KAAAF,EAAA,YAA+B,oDAAArB,QAAA,SAAAqB,GAAyEyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAAyI,cAAA,SAA0C,2DAAA9J,QAAA,SAAAqB,GAAgFyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAA,QACzW,gMAAAtB,MAAA,KAAAC,QAAA,SAAAqB,GAA+NyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAAyI,cAAA,SAA0C,yCAAA9J,QAAA,SAAAqB,GAA8DyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAAyI,cAAA,SAA0C,sBAAA9J,QAAA,SAAAqB,GAA2CyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAAyI,cAAA,SAC5Z,6BAAA9J,QAAA,SAAAqB,GAAkDyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAAyI,cAAA,SAA0C,mBAAA9J,QAAA,SAAAqB,GAAwCyR,GAAAzR,GAAA,GAAAgU,IAAAhU,EAAA,KAAAA,EAAAyI,cAAA,OAA0C,IAAAq5B,IAAA,eAC9K,2jCAAApjC,MAAA,KAAAC,QAAA,SAAAqB,GAAylC,GAAAE,GAAAF,EAAAkD,QAAA4+B,GACzlChhB,GAAIrP,IAAAvR,GAAA,GAAA8T,IAAA9T,EAAA,KAAAF,EAAA,QAA4B,sFAAAtB,MAAA,KAAAC,QAAA,SAAAqB,GAAqH,GAAAE,GAAAF,EAAAkD,QAAA4+B,GAAAhhB,GAAuBrP,IAAAvR,GAAA,GAAA8T,IAAA9T,EAAA,KAAAF,EAAA,mCAAsD,mCAAArB,QAAA,SAAAqB,GAAwD,GAAAE,GAAAF,EAAAkD,QAAA4+B,GAAAhhB,GAAuBrP,IAAAvR,GAAA,GAAA8T,IAAA9T,EAAA,KAAAF,EAAA,0CAA8DyR,GAAAswB,SAAA,GAAA/tB,IAAA,gCAK1O,IAAAkO,KAAQC,QAAQ/K,yBAAyB4M,QAAA,WAAAC,SAAA,mBAA8CxM,aAAA,8DAAA/Y,MAAA,OAAgL8jB,GAAA,KAAAG,GAAA,KAClWqf,IAAA,CAAUzlC,IAAAoe,YAAAqnB,GAAA7jB,GAAA,YAAA/W,SAAA84B,cAAA,EAAA94B,SAAA84B,cAEpD,IAAA+B,KAAQ/qB,WAAAgL,GAAAggB,uBAAAF,GAAA/qB,cAAA,SAAAjX,EAAAE,EAAA1D,EAAAC,GAAwE,GAAA8F,GAAArC,EAAAoZ,EAAApZ,GAAAsC,OAAAI,MAAA,GAAAR,MAAA,GAAA4O,EAAAzO,EAAAsb,UAAAtb,EAAAsb,SAAApV,aAAmP,IAArK,WAAAuI,GAAA,UAAAA,GAAA,SAAAzO,EAAA0J,KAAArJ,EAAA0f,GAAA1E,EAAArb,GAAAy/B,GAAAp/B,EAAAogB,IAAApgB,EAAAkgB,GAAA1gB,EAAAwgB,KAAA5R,EAAAzO,EAAAsb,WAAA,UAAA7M,EAAAvI,gBAAA,aAAAlG,EAAA0J,MAAA,UAAA1J,EAAA0J,QAAArJ,EAAAmgB,IAAqKngB,QAAA5C,EAAAE,IAAA,MAAA+hB,IAAArf,EAAApG,EAAAC,EAAkC2F,MAAApC,EAAAuC,EAAArC,GAAY,SAAAF,MAAAuC,EAAA8e,gBAAArhB,EAAA0hB,YAAA,WAAAnf,EAAA0J,MAAA4V,GAAAtf,EAAA,SAAAA,EAAAN,SAA0FkgC,GAAArxB,EAAAqoB,QAAc3uB,KAAA,KAAAyR,OAAA,OAAsBkH,IAAMif,IAAA,SACrfC,QAAA,UAAAC,KAAA,UAAAC,MAAA,YACAC,GAAAL,GAAAhJ,QAAkBsJ,QAAA,KAAAC,QAAA,KAAAC,QAAA,KAAAC,QAAA,KAAAC,MAAA,KAAAC,MAAA,KAAArmB,QAAA,KAAAsmB,SAAA,KAAArmB,OAAA,KAAAC,QAAA,KAAAuG,iBAAAE,GAAA4f,OAAA,KAAAC,QAAA,KAAAC,cAAA,SAAAljC,GAAqM,MAAAA,GAAAkjC,gBAAAljC,EAAAmjC,cAAAnjC,EAAAge,WAAAhe,EAAAojC,UAAApjC,EAAAmjC,gBAAkFE,GAAAb,GAAArJ,QAAgBmK,UAAA,KAAAC,MAAA,KAAAC,OAAA,KAAAC,SAAA,KAAAC,MAAA,KAAAC,MAAA,KAAAC,YAAA,KAAAC,UAAA,OAA0GC,IAAMC,YAAYzsB,iBAAA,eAAAG,cAAA,yBACrbusB,YAAY1sB,iBAAA,eAAAG,cAAA,yBAAsEwsB,cAAe3sB,iBAAA,iBAAAG,cAAA,6BAA4EysB,cAAe5sB,iBAAA,iBAAAG,cAAA,8BAA6EtT,IAAK+S,WAAA4sB,GAAA7sB,cAAA,SAAAjX,EAAAE,EAAA1D,EAAAC,GAA8C,GAAA8F,GAAA,cAAAvC,GAAA,gBAAAA,EAAA4C,EAAA,aAAA5C,GAAA,eAAAA,CAA4E,IAAAuC,IAAA/F,EAAA0mC,eAAA1mC,EAAA2mC,eAAAvgC,IAAAL,EAAA,WACrT,IADgXA,EAAA9F,EAAA+F,SAAA/F,KAAA8F,EAAA9F,EAAAslB,eAAAxf,EAAA4hC,aACnc5hC,EAAA6hC,aAAA5hC,OAAsBI,KAAA1C,OAAA1D,EAAA0mC,eAAA1mC,EAAA4mC,WAAAjqB,EAAAjZ,GAAA,MAAA0C,EAAA,KAA6DA,IAAA1C,EAAA,WAAqB,IAAAkC,OAAA,GAAA4O,MAAA,GAAA+B,MAAA,GAAA7V,MAAA,EACjG,OADyI,aAAA8C,GAAA,cAAAA,GAAAoC,EAAAogC,GAAAxxB,EAAA8yB,GAAAE,WAAAjxB,EAAA+wB,GAAAC,WAAA7mC,EAAA,SAAkF,eAAA8C,GAAA,gBAAAA,IAAAoC,EAAAihC,GAAAryB,EAAA8yB,GAAAI,aAAAnxB,EAAA+wB,GAAAG,aAAA/mC,EAAA,WAAiG8C,EAAA,MAAA4C,EAAAL,EAAA+W,EAAA1W,GAAkBL,EAAA,MAAArC,EAAAqC,EAAA+W,EAAApZ,GAAkB8Q,EAAA5O,EAAAwZ,UAAA5K,EAAApO,EAAApG,EAAAC,GAAuBuU,EAAA/E,KAAA/O,EAAA,QAAiB8T,EAAAjS,OAAAiB,EAAWgR,EAAAkyB,cAAA3gC,EAAkB/F,EAAA4F,EAAAwZ,UAAA7I,EAAA7S,EAAA1D,EAAAC,GAAuBD,EAAAyP,KAAA/O,EAAA,QAAiBV,EAAAuC,OAAAwD,EAAW/F,EAAA0mC,cAAAljC,EAAkBma,EAAAnJ,EACjfxU,EAAAoG,EAAA1C,IAAO8Q,EAAAxU,KAG8Q6nC,GAAAvzB,EAAAqoB,QAAiBmL,cAAA,KAAAC,YAAA,KAAAC,cAAA,OAAuDC,GAAA3zB,EAAAqoB,QAAeuL,cAAA,SAAA1kC,GAA0B,uBAAAA,KAAA0kC,cAAAliC,OAAAkiC,iBAAgEC,GAAAxC,GAAAhJ,QAAgB+J,cAAA,OAEtd0B,IAAQC,IAAA,SAAAC,SAAA,IAAAC,KAAA,YAAAC,GAAA,UAAAC,MAAA,aAAAC,KAAA,YAAAC,IAAA,SAAAC,IAAA,KAAAC,KAAA,cAAAC,KAAA,cAAAC,OAAA,aAAAC,gBAAA,gBAA2MC,IAAKC,EAAA,YAAAC,EAAA,MAAAC,GAAA,QAAAC,GAAA,QAAAC,GAAA,QAAAC,GAAA,UAAAC,GAAA,MAAAC,GAAA,QAAAC,GAAA,WAAAC,GAAA,SAAAC,GAAA,IAAAC,GAAA,SAAAC,GAAA,WAAAC,GAAA,MAAAC,GAAA,OAAAC,GAAA,YAAAC,GAAA,UAAAC,GAAA,aAAAC,GAAA,YAAAC,GAAA,SAAAC,GAAA,SAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KACxNC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,MAAAC,IAAA,UAAAC,IAAA,aAAAC,IAAA,QAAqHC,GAAA3F,GAAAhJ,QAAe75B,IAAA,SAAAU,GAAgB,GAAAA,EAAAV,IAAA,CAAU,GAAAY,GAAA0kC,GAAA5kC,EAAAV,MAAAU,EAAAV,GAAuB,qBAAAY,EAAA,MAAAA,GAA+B,mBAAAF,EAAAiM,MAAAjM,EAAA6jB,GAAA7jB,GAAA,KAAAA,EAAA,QAAA7B,OAAAG,aAAA0B,IAAA,YAAAA,EAAAiM,MAAA,UAAAjM,EAAAiM,KAAAw5B,GAAAzlC,EAAA+b,UAAA,mBAAgJnN,SAAA,KAAA6N,QAAA,KAAAsmB,SAAA,KAAArmB,OAAA,KAAAC,QAAA,KAAAorB,OAAA,KAAAC,OAAA,KAAA9kB,iBAAAE,GAAAU,SAAA,SAAA9jB,GAAoI,mBACxeA,EAAAiM,KAAA4X,GAAA7jB,GAAA,GAAe+b,QAAA,SAAA/b,GAAqB,kBAAAA,EAAAiM,MAAA,UAAAjM,EAAAiM,KAAAjM,EAAA+b,QAAA,GAAuDI,MAAA,SAAAnc,GAAmB,mBAAAA,EAAAiM,KAAA4X,GAAA7jB,GAAA,YAAAA,EAAAiM,MAAA,UAAAjM,EAAAiM,KAAAjM,EAAA+b,QAAA,KAAkFksB,GAAAzF,GAAArJ,QAAgB+O,aAAA,OAAkBC,GAAAhG,GAAAhJ,QAAgBiP,QAAA,KAAAC,cAAA,KAAAC,eAAA,KAAA5rB,OAAA,KAAAC,QAAA,KAAAF,QAAA,KAAAsmB,SAAA,KAAA7f,iBAAAE,KAA4HmlB,GAAAz3B,EAAAqoB,QAAetY,aAAA,KAAA0jB,YAAA,KAAAC,cAAA,OAAsDgE,GAAAhG,GAAArJ,QAAgBsP,OAAA,SAAAzoC,GAAmB,gBAAAA,KAAAyoC,OAAA,eACtdzoC,MAAA0oC,YAAA,GAAmBC,OAAA,SAAA3oC,GAAoB,gBAAAA,KAAA2oC,OAAA,eAAA3oC,MAAA4oC,YAAA,cAAA5oC,MAAA6oC,WAAA,GAA8FC,OAAA,KAAAC,UAAA,OAA4BC,KAAA,kBAAAlK,GAAA,iBAAAC,GAAA,uBAAAC,GAAA,qRACjK,sfACA,gGAAAC,GAAA,0DAAA9a,MAAmKC,QACnK,6fACA,kOAAAzlB,QAAA,SAAAqB,GAAuP+jB,GAAA/jB,GAAA,KAAWgpC,GAAArqC,QAAA,SAAAqB,GAAuB+jB,GAAA/jB,GAAA,IACzR,IAAAipC,KAAQ/xB,WAAAiN,GAAA+kB,+BAAA,SAAAlpC,GAAiE,iBAARA,EAAAokB,GAAApkB,MAAQ,IAAAA,EAAAkkB,eAAwCjN,cAAA,SAAAjX,EAAAE,EAAA1D,EAAAC,GAAiC,GAAA8F,GAAA6hB,GAAApkB,EAAY,KAAAuC,EAAA,WAAkB,QAAAvC,GAAU,sBAAA6jB,GAAArnB,GAAA,WAAyC,2BAAAwD,EAAA8nC,EAAiC,MAAM,wBAAA9nC,EAAA2kC,EAA8B,MAAM,oBAAAnoC,EAAAwmC,OAAA,WAAyC,+GAAAhjC,EAAAwiC,EAA0H,MAAM,mHAAAxiC,EACvdioC,EAAG,MAAM,mEAAAjoC,EAAAmoC,EAA2E,MAAM,KAAArJ,IAAA,IAAAC,IAAA,IAAAC,IAAAh/B,EAAAqkC,EAA6B,MAAM,KAAApF,IAAAj/B,EAAAuoC,EAAa,MAAM,cAAAvoC,EAAAmiC,EAAmB,MAAM,aAAAniC,EAAAwoC,EAAkB,MAAM,kCAAAxoC,EAAAykC,EAAyC,MAAM,6JAAAzkC,EAAAqjC,EAAyK,MAAM,SAAArjC,EAAA8Q,EAAyC,MAA7B5Q,GAAAF,EAAA4b,UAAArZ,EAAArC,EAAA1D,EAAAC,GAAuByd,EAAAha,GAAMA,IAAU0kB,GAAAqkB,GAAAC,+BACldjkB,MAAkTN,IAAA,EAElTwkB,IAAQC,eAAe,MAAAzkB,KAAU0kB,WAAA3kB,GAAA4kB,UAAA,WAAoC,MAAA3kB,KAAU4kB,iBAAAr4B,GAAAs4B,kBAAAxkB,GAAAykB,cAAA3kB,IAA0DO,MAAMD,GAAA,EAAAD,GAAA,wBAAA8T,KAAA0E,UAAAx1B,MAAA,GAE/IuhC,GAAAntC,GAAAoe,WAAA,gBAAAvT,WAAA,IAAAA,SAAA84B,aAAArZ,IAA6EC,QAAQ1P,yBAAyB4M,QAAA,WAAAC,SAAA,mBAA8CxM,aAAA,yEAAA/Y,MAAA,OAAmGsnB,GAAA,KAAAe,GAAA,KAAAJ,GAAA,KAAAZ,IAAA,EAE/P4jB,IAAQzyB,WAAA2P,GAAA5P,cAAA,SAAAjX,EAAAE,EAAA1D,EAAAC,GAA8C,GAAAmG,GAAAL,EAAA9F,EAAA+F,SAAA/F,IAAA2K,SAAA,IAAA3K,EAAAyhB,SAAAzhB,IAAAslB,aAAiE,MAAAnf,GAAAL,GAAA,CAAYvC,EAAA,CAAGuC,EAAA2iB,GAAA3iB,GAAQK,EAAA4U,GAAAoyB,QAAc,QAAAxnC,GAAA,EAAYA,EAAAQ,EAAAvD,OAAW+C,IAAA,CAAK,GAAA4O,GAAApO,EAAAR,EAAW,KAAAG,EAAAhF,eAAAyT,KAAAzO,EAAAyO,GAAA,CAAgCzO,GAAA,CAAK,MAAAvC,IAASuC,GAAA,EAAKK,GAAAL,EAAK,GAAAK,EAAA,WAAkC,QAAjBL,EAAArC,EAAAoZ,EAAApZ,GAAAsC,OAAiBxC,GAAU,aAAA4d,EAAArb,IAAA,SAAAA,EAAAsjB,mBAAAG,GAAAzjB,EAAAwkB,GAAA7mB,EAAAymB,GAAA,KAAoE,MAAM,YAAAA,GAAAI,GAAAf,GAAA,IAA0B,MAAM,iBAAAD,IAAA,CAAuB,MAAM,uCAAAA,KAAA,EAAAD,GAAAtpB,EAAAC,EAAuD,0BAAAitC,GAAA,KACre,iCAAA5jB,IAAAtpB,EAAAC,GAA2C,aAAc2gC,IAAAF,uBAAA,yIAAAx+B,MAAA,MAA+Kma,GAAA+kB,GAAAK,6BAAmClhB,GAAA6gB,GAAAG,oBAA0BjmB,GAAA8lB,GAAAI,oBAA0BZ,GAAAD,0BAA6B0M,kBAAAZ,GAAAa,sBAAA3lC,GAAA4lC,kBAAA9H,GAAA+H,kBAAAL,GAAAM,uBAAAxJ,IAC5V,IAAAyJ,IAAA,mBAAAC,iDAAA,GAAAC,GAAA5K,KAAA6K,GAAAnlC,WAAAolC,GAAAtlC,aAAAulC,OAAA,EAA8H,qBAAAC,cAAA,mBAAAA,aAAA/K,IAAA,CAAuE,GAAAgL,IAAAD,WAAmBD,IAAA,WAAc,MAAAE,IAAAhL,WAAiB8K,IAAA,WAAmB,MAAAH,IAAA3K,MAAiB,IAAAiL,QAAA,GAAAC,OAAA,EAC3R,IAAApuC,GAAAoe,UAAA,CAAgB,GAAAiwB,IAAA,mBAAAV,OAAA,WAA4C32B,EAAA,QAASpC,GAAA,KAAA05B,GAAA,KAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,GAAA,GAAAC,GAAA,GAAAC,IAAuDC,YAAA,EAAA7Q,cAAA,WAAuC,GAAAx6B,GAAAirC,GAAAV,IAAc,UAAAvqC,IAAA,IAAgBsrC,GAAA,SAAAtrC,EAAAE,GAAkB,GAAA1D,GAAAwD,EAAAurC,kBAAA9uC,GAAA,CAA+B,KAAID,EAAA0D,GAAAzD,GAAA,EAAU,QAAQkuC,GAAA3qC,GAAAvD,IAAAsuC,IAAA,EAAAvoC,OAAAgpC,YAAAC,GAAA,QAA6CA,GAAA,uBAAAxS,KAAA0E,SAAAhyB,SAAA,IAAAxD,MAAA,EAA+D3F,QAAAuiB,iBAAA,mBAAA/kB,GAA8C,GAAAA,EAAAhB,SAAAwD,QAAAxC,EAAAwH,OAAAikC,KAAAV,IAAA,SAAA55B,IAAA,CAAqD,UAAAA,GAAA,CAAa,GAAAjR,GAAAqqC,IAAW,WAC/eO,OAAA5qC,GAAA,CAAWF,GAAA,CAAK,QAAAxD,MAAAC,EAAA0U,GAAiB,OAAA1U,GAAS,CAAE,GAAA8F,GAAA9F,EAAAivC,aAAoB,IAAAnpC,MAAArC,EAAA1D,EAAA8E,KAAA7E,IAAA,IAAA8F,KAAA,IAAAvC,GAAAuC,EAAAvC,OAAAuC,GAAoD9F,IAAAqM,KAAS,KAAAtM,EAAA6C,OAAA,IAAA+rC,GAAAC,YAAA,EAAAnrC,EAAA,EAAAzD,EAAAD,EAAA6C,OAAkDa,EAAAzD,EAAIyD,IAAAorC,GAAA9uC,EAAA0D,GAAAkrC,GAAgBN,IAAA9qC,GAAM,IAAAA,EAAAuqC,KAAW,EAAAU,GAAAjrC,GAAA,OAAAmR,IAAiBnR,EAAAmR,GAAAi6B,GAAAC,YAAA,EAAAC,GAAAtrC,EAAAorC,IAAAprC,EAAAuqC,IAAsC,QAAAp5B,IAAA65B,SAAA,EAAAJ,GAAAe,QAA8B,EAAK,IAAAA,IAAA,SAAA3rC,GAAmBgrC,IAAA,CAAM,IAAA9qC,GAAAF,EAAAirC,GAAAE,EAAcjrC,GAAAirC,IAAAD,GAAAC,IAAA,EAAAjrC,MAAA,GAAAirC,GAAAjrC,EAAAgrC,MAAAhrC,GAAAgrC,GAAAhrC,EAA2C+qC,GAAAjrC,EAAAmrC,GAAQJ,SAAA,EAAAvoC,OAAAgpC,YAAAC,GAAA,MAAwCf,IAAA,SAAA1qC,EAAAE,GAAiB,GAAA1D,IAAA,CACtR,OAD+R,OAAA0D,GAAA,iBAAAA,GAAA+E,UAAAzI,EAAA+tC,KAC1crqC,EAAA+E,WAAW,IAAA6lC,KAAA,IAAAtuC,KAAAsuC,SAAAtuC,GAA8BwD,GAAGurC,kBAAAvrC,EAAA0rC,YAAAlvC,EAAAovC,KAAA,KAAA9iC,KAAA,MAAuD,OAAAqI,MAAAnR,EAAA,QAAAE,EAAAF,EAAA4rC,KAAAf,MAAA3qC,EAAA4I,KAAA9I,GAAgD6qC,GAAA7qC,EAAKgrC,SAAA,EAAAJ,GAAAe,KAAmB3rC,GAAU2qC,GAAA,SAAA3qC,GAAe,UAAAA,EAAA4rC,MAAAz6B,KAAAnR,EAAA,CAAyB,GAAAE,GAAAF,EAAA8I,KAAAtM,EAAAwD,EAAA4rC,IAAsB5rC,GAAA8I,KAAA,KAAY9I,EAAA4rC,KAAA,KAAY,OAAA1rC,EAAA,OAAA1D,KAAAsM,KAAA5I,IAAA0rC,KAAApvC,IAAA0D,EAAA0rC,KAAA,KAAAz6B,GAAAjR,GAAA,OAAA1D,KAAAsM,KAAA,KAAA+hC,GAAAruC,GAAAquC,GAAA15B,GAAA,WAAgG,CAAK,GAAA06B,IAAA,GAAAta,IAAemZ,IAAA,SAAA1qC,GAAe,GAAAE,IAAOqrC,kBAAAvrC,EAAA0rC,YAAA,EAAA5iC,KAAA,KAAA8iC,KAAA,MAAsDpvC,EAAA6tC,GAAA,WAAiBrqC,GAAGw6B,cAAA,WAAyB,MAAAsR,MACxfT,YAAA,KAA8B,OAAZQ,IAAAhhC,IAAA7K,EAAAxD,GAAY0D,GAAUyqC,GAAA,SAAA3qC,GAAe,GAAAE,GAAA2rC,GAAA5uC,IAAA+C,EAAAurC,kBAAkCM,IAAAja,OAAA5xB,GAAasqC,GAAApqC,IAGoJ,GAAA8oB,KAAQC,KAAA,+BAAA8iB,OAAA,qCAAAC,IAAA,8BAElQC,OAAA,GAAAxiB,GAAA,SAAAzpB,GAA6B,0BAAAksC,cAAAC,wBAAA,SAAAjsC,EAAA1D,EAAAC,EAAA8F,GAAkF2pC,MAAAC,wBAAA,WAAyC,MAAAnsC,GAAAE,EAAA1D,MAAoBwD,GAAG,SAAAA,EAAAE,GAAe,GAAAF,EAAAiwB,eAAAjH,GAAAgjB,KAAA,aAAAhsC,KAAAkpB,UAAAhpB,MAA0D,CAA0E,IAArE+rC,OAAA7kC,SAAA+I,cAAA,OAAqC87B,GAAA/iB,UAAA,QAAAhpB,EAAA,SAAgCA,EAAA+rC,GAAA1mB,WAAoBvlB,EAAAulB,YAAavlB,EAAAmpB,YAAAnpB,EAAAulB,WAA6B,MAAKrlB,EAAAqlB,YAAavlB,EAAA2zB,YAAAzzB,EAAAqlB,eAElZ8C,IAAQ+jB,yBAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,SAAA,EAAAC,cAAA,EAAAC,iBAAA,EAAAC,aAAA,EAAAC,SAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,cAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,YAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,iBAAA,EAAAC,YAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,MAAA,EAAAC,aAAA,EAAAC,cAAA,EACRC,aAAA,EAAAC,iBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,eAAA,EAAAC,aAAA,GAA0GC,IAAA,wBAA8BhyC,QAAAgC,KAAAwpB,IAAA1pB,QAAA,SAAAqB,GAAoC6uC,GAAAlwC,QAAA,SAAAuB,GAAuBA,IAAAF,EAAA8uC,OAAA,GAAAniC,cAAA3M,EAAA+uC,UAAA,GAA6C1mB,GAAAnoB,GAAAmoB,GAAAroB,MACmD,IAAAwoB,IAAAhrB,IAAUwxC,UAAA,IAAcC,MAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAxiC,OAAA,EAAAyiC,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,OAAA,EAAA3wC,QAAA,EAAA4wC,OAAA,EAAAC,KAAA,IAExCtmB,GAAArW,GAAA1P,YAAA,IAanRssC,IAAQ3/B,cAAA4Y,GAAA1hB,eAAAgiB,GAAA0mB,qBAAAzmB,GAAA0mB,eAAApmB,GAAAqmB,iBAAApmB,GAAAqmB,uBAAApmB,GAAAqmB,iBAAApmB,GAAAqmB,qBAAA,aAAgLC,gCAAA,aAA6CC,6BAAA,aAA0CC,+BAAA,aAA4CC,4BAAA,aAAyCvzB,uBAAA,SAAAjd,EAAAE,EAAA1D,GAAwC,OAAA0D,GAAU,YAA8B,GAA9B0hB,GAAA5hB,EAAAxD,GAAqB0D,EAAA1D,EAAAE,KAAS,UAAAF,EAAAyP,MAAA,MAAA/L,EAAA,CAA8B,IAAA1D,EAAAwD,EAAQxD,EAAA4c,YAAa5c,IAAA4c,UAC5Z,KAA3E5c,IAAAi0C,iBAAA,cAAAnkC,KAAAokC,UAAA,GAAAxwC,GAAA,mBAA2EA,EAAA,EAAQA,EAAA1D,EAAA6C,OAAWa,IAAA,CAAK,GAAAzD,GAAAD,EAAA0D,EAAW,IAAAzD,IAAAuD,GAAAvD,EAAA2Q,OAAApN,EAAAoN,KAAA,CAA2B,GAAA7K,GAAAgX,EAAA9c,EAAY8F,IAAAgR,EAAA,MAAiBsL,GAAApiB,GAAMmlB,GAAAnlB,EAAA8F,KAAU,KAAM,gBAAAqlB,GAAA5nB,EAAAxD,EAAwB,MAAM,qBAAA0D,EAAA1D,EAAAyF,QAAAklB,GAAAnnB,IAAAxD,EAAAgrB,SAAAtnB,GAAA,MAA2Dq4B,GAAA,KAAAG,GAAA,KAChD9B,GAAA2T,GAAAnT,GAAAsT,GAAAvT,GAAAwT,EAAmN,IAAA9V,IAAQ,IAAAtK,OAAAD,IAAA,EACtVK,GAAAN,GAAAS,IAAAhY,GAAAuX,IAAA,GAAAK,GAAAI,GAQoR6C,GAAA,KAAAE,GAAA,KACeoB,IAAA,EAUvVQ,GAAApF,GAAA,MAAAmF,GAAAnF,GAAA,MAAAkF,GAAAlF,GAAA,GAA6TuF,MAASI,GAAA3F,GAAAuF,IAAAG,GAAA1F,GAAAuF,IAAAE,GAAAzF,GAAAuF,IAE5XgB,IAAQnd,UAAA,SAAAzT,GAAsB,SAAAA,IAAAgzB,sBAAA,IAAA3P,GAAArjB,IAA6C4T,gBAAA,SAAA5T,EAAAE,EAAA1D,GAAiCwD,IAAAgzB,mBAAwB,IAAAv2B,GAAA25B,IAAW35B,GAAA65B,GAAA75B,EAAAuD,EAAU,IAAAuC,GAAAmsB,GAAAjyB,EAAY8F,GAAAosB,QAAAzuB,MAAY,KAAA1D,GAAA,OAAAA,IAAA+F,EAAAgE,SAAA/J,GAAqCqyB,GAAA7uB,EAAAuC,EAAA9F,GAAUy5B,GAAAl2B,EAAAvD,IAAQkX,oBAAA,SAAA3T,EAAAE,EAAA1D,GAAqCwD,IAAAgzB,mBAAwB,IAAAv2B,GAAA25B,IAAW35B,GAAA65B,GAAA75B,EAAAuD,EAAU,IAAAuC,GAAAmsB,GAAAjyB,EAAY8F,GAAA8W,IAAA,EAAQ9W,EAAAosB,QAAAzuB,MAAY,KAAA1D,GAAA,OAAAA,IAAA+F,EAAAgE,SAAA/J,GAAqCqyB,GAAA7uB,EAAAuC,EAAA9F,GAAUy5B,GAAAl2B,EAAAvD,IAAQiX,mBAAA,SAAA1T,EAAAE,GAAkCF,IAAAgzB,mBAAwB,IAAAx2B,GAAA45B,IAAW55B,GAAA85B,GAAA95B,EAAAwD,EAAU,IAAAvD,GAAAiyB,GAAAlyB,EAAYC,GAAA4c,IAAA,MAAQ,KACpfnZ,GAAA,OAAAA,IAAAzD,EAAA8J,SAAArG,GAA4B2uB,GAAA7uB,EAAAvD,EAAAD,GAAU05B,GAAAl2B,EAAAxD,KAGiPi1B,GAAAvpB,MAAAoB,QAYlCkpB,GAAAlB,IAAA,GAAAiB,GAAAjB,IAAA,GAAAY,GAAA,KAAAD,GAAA,KAAAD,IAAA,EAoBzGyB,OAAA,GAAAC,OAAA,GAAAE,OAAA,EAAkCH,IAAA,aAAgBC,GAAA,SAAA1zB,EAAAE,EAAA1D,IAAmB0D,EAAA0rB,YAAApvB,IAAA+2B,GAAArzB,IAA0B0zB,GAAA,SAAA5zB,EAAAE,EAAA1D,EAAAC,GAAqBD,IAAAC,GAAA82B,GAAArzB,GAc8F,IAAA22B,IAAAD,KAAAjB,GAAA,EAAAE,GAAAgB,GAAAR,GAAA,EAAAE,GAAA,EAAAb,IAAA,EAAApjB,GAAA,KAAA6iB,GAAA,KAAA3iB,GAAA,EAAA4iB,IAAA,EAAAC,IAAA,EAAA3iB,GAAA,KAAAsjB,IAAA,EAAAV,IAAA,EAAAV,GAAA,KAUhM0C,GAAA,KAAA3kB,GAAA,KAAAskB,GAAA,EAAAC,OAAA,GAAAtkB,IAAA,EAAAwB,GAAA,KAAA4B,GAAA,EAAAygB,GAAA,EAAAoB,IAAA,EAAAK,IAAA,EAAAC,GAAA,KAAAP,GAAA,KAAA1hB,IAAA,EAAAqhB,IAAA,EAAAf,IAAA,EAAAwB,GAAA,KAAArB,GAAA,IAAAD,GAAA,EAAA+D,GAAA,EAmB9JkW,IAAQC,gCAAA7V,GAAA8V,gBAAA,SAAA7wC,EAAAE,EAAA1D,GAAmE,MAAAiwB,IAAAzsB,EAAAE,EAAA1D,IAAiBs0C,gBAAA7V,GAAA8V,UAAAhZ,GAAAiZ,YAAAlb,GAAAmb,6BAAA9a,GAAA+a,eAAAxW,GAAAyW,iBAAAxW,GAAAyW,gBAAAta,GAAAua,YAAAta,GAAAua,mBAAAzW,GAAA0W,wBAAA,WAAiN3+B,IAAA,IAAA6jB,KAAAkB,GAAAlB,IAAA,QAAAA,GAAA,IAAiC+a,gBAAA1W,GAAA2W,UAAA7W,GAAA8W,sBAAAxW,GAAAyW,iBAAA3W,GAAA4W,8BAAA,SAAA5xC,GAAgI,MAARA,GAAA4jB,GAAA5jB,GAAQ,OAAAA,EAAA,KAAAA,EAAA4Y,WAAiCi5B,mBAAA1W,GACpUuF,IAAAC,mCAAAmP,IAC3KvU,GAAAj+B,UAAA4S,OAAA,SAAAlQ,GAAgCI,KAAAk4B,QAAA/kB,EAAA,OAA4BnT,KAAAs7B,cAAA,EAAqBt7B,KAAAw7B,UAAA57B,CAAiB,IAAAE,GAAAE,KAAA6a,MAAAghB,cAAAz/B,EAAA4D,KAAAi4B,gBAAA57B,EAAA,GAAAo/B,GAA0F,OAA3Bd,IAAA/6B,EAAAE,EAAA,KAAA1D,EAAAC,EAAAs/B,WAA2Bt/B,GAAU8+B,GAAAj+B,UAAAoC,KAAA,SAAAM,GAA8B,GAAAI,KAAAu7B,aAAA37B,QAAyB,CAAK,GAAAE,GAAAE,KAAAo7B,UAAsB,QAAAt7B,MAAAE,KAAAo7B,eAAiCt7B,EAAAoB,KAAAtB,KACzTu7B,GAAAj+B,UAAAw0C,OAAA,WAA+B,GAAA9xC,GAAAI,KAAA6a,MAAAghB,cAAA/7B,EAAAF,EAAAotB,UAAoF,IAAtChtB,KAAAk4B,QAAA,OAAAp4B,GAAAqT,EAAA,OAAsCnT,KAAAs7B,aAAA,CAAsB,GAAAl/B,GAAA4D,KAAAi4B,eAA2B,IAAAn4B,IAAAE,KAAA,CAAaA,KAAAs7B,eAAAl/B,EAAA4D,KAAAi4B,gBAAAn4B,EAAAm4B,gBAAAj4B,KAAA8P,OAAA9P,KAAAw7B,WAA0F,QAAAn/B,GAAA,KAAA8F,EAAArC,EAAmBqC,IAAAnC,MAAS3D,EAAA8F,MAAAk5B,KAAe,QAAAh/B,GAAA8W,EAAA,OAAyB9W,EAAAg/B,MAAAl5B,EAAAk5B,MAAgBr7B,KAAAq7B,MAAAv7B,EAAaF,EAAAotB,WAAAhtB,KAAkBA,KAAAk4B,QAAA,EAAeP,GAAA/3B,EAAAxD,GAAQ0D,EAAAE,KAAAq7B,MAAar7B,KAAAq7B,MAAA,KAAgBv7B,EAAAF,EAAAotB,WAAAltB,EAAiB,OAAAA,KAAAw7B,cAAAx7B,EAAAgQ,OAAAhQ,EAAA07B,eAAgDx7B,MAAAq7B,MACnf,KAAAr7B,KAAAk4B,QAAA,GAAqBiD,GAAAj+B,UAAA26B,YAAA,WAAoC,IAAA73B,KAAAu7B,aAAA,CAAuBv7B,KAAAu7B,cAAA,CAAqB,IAAA37B,GAAAI,KAAAo7B,UAAsB,WAAAx7B,EAAA,OAAAE,GAAA,EAAwBA,EAAAF,EAAAX,OAAWa,KAAA,EAAAF,EAAAE,QAAgH27B,GAAAv+B,UAAAoC,KAAA,SAAAM,GAA8B,GAAAI,KAAA07B,WAAA97B,QAAuB,CAAK,GAAAE,GAAAE,KAAAo7B,UAAsB,QAAAt7B,MAAAE,KAAAo7B,eAAiCt7B,EAAAoB,KAAAtB,KAC/X67B,GAAAv+B,UAAAy+B,UAAA,WAAkC,IAAA37B,KAAA07B,WAAA,CAAqB17B,KAAA07B,YAAA,CAAmB,IAAA97B,GAAAI,KAAAo7B,UAAsB,WAAAx7B,EAAA,OAAAE,GAAA,EAAwBA,EAAAF,EAAAX,OAAWa,IAAA,CAAK,GAAA1D,GAAAwD,EAAAE,EAAW,oBAAA1D,IAAA+W,EAAA,MAAA/W,GAAwCA,OAAuDw/B,GAAA1+B,UAAA4S,OAAA,SAAAlQ,EAAAE,GAAkC,GAAA1D,GAAA4D,KAAA67B,cAAAx/B,EAAA,GAAAo/B,GAAmG,OAAjE37B,OAAA,KAAAA,EAAA,KAAAA,EAAoB,OAAAA,GAAAzD,EAAAiD,KAAAQ,GAAoB+6B,GAAAj7B,EAAAxD,EAAA,KAAAC,EAAAs/B,WAAyBt/B,GACvXu/B,GAAA1+B,UAAAy0C,QAAA,SAAA/xC,GAAiC,GAAAE,GAAAE,KAAA67B,cAAAz/B,EAAA,GAAAq/B,GAAsG,OAApE77B,OAAA,KAAAA,EAAA,KAAAA,EAAoB,OAAAA,GAAAxD,EAAAkD,KAAAM,GAAoBi7B,GAAA,KAAA/6B,EAAA,KAAA1D,EAAAu/B,WAA4Bv/B,GAAUw/B,GAAA1+B,UAAAi/B,kCAAA,SAAAv8B,EAAAE,EAAA1D,GAA+D,GAAAC,GAAA2D,KAAA67B,cAAA15B,EAAA,GAAAs5B,GAAgG,OAA9Dr/B,OAAA,KAAAA,EAAA,KAAAA,EAAoB,OAAAA,GAAA+F,EAAA7C,KAAAlD,GAAoBy+B,GAAA/6B,EAAAzD,EAAAuD,EAAAuC,EAAAw5B,WAAsBx5B,GAChTy5B,GAAA1+B,UAAA00C,YAAA,WAAoC,GAAAhyC,GAAA,GAAAu7B,IAAAn7B,MAAAF,EAAAF,EAAAq4B,gBAAA77B,EAAA4D,KAAA67B,cAAAx/B,EAAAD,EAAA4wB,UAA2E,WAAA3wB,EAAAD,EAAA4wB,WAAAptB,IAAAy7B,MAAA,SAAwC,CAAK,IAAAj/B,EAAA,KAAW,OAAAC,KAAA47B,iBAAAn4B,GAA+B1D,EAAAC,MAAAg/B,KAAez7B,GAAAy7B,MAAAh/B,EAAU,OAAAD,MAAAi/B,MAAAz7B,GAAsB,MAAAA,IAAsJud,EAAAozB,GAAAO,eAAqB1zB,EAAAmzB,GAAAW,mBAAyB7zB,EAAAkzB,GAAAY,uBAIzb,IAAAU,KAAQC,aAAA1V,GAAA2V,YAAA,SAAAnyC,GAAwC,aAAAA,EAAA,SAAAA,EAAAke,SAAAle,EAAAg7B,GAAAh7B,IAA2CktB,QAAA,SAAAltB,EAAAE,EAAA1D,GAAyB,MAAA6/B,IAAA,KAAAr8B,EAAAE,GAAA,EAAA1D,IAAyB0T,OAAA,SAAAlQ,EAAAE,EAAA1D,GAAwB,MAAA6/B,IAAA,KAAAr8B,EAAAE,GAAA,EAAA1D,IAAyB41C,oCAAA,SAAApyC,EAAAE,EAAA1D,EAAAC,GAA8G,OAAvD,MAAAuD,OAAA,KAAAA,EAAAgzB,sBAAAzf,EAAA,MAAuD8oB,GAAAr8B,EAAAE,EAAA1D,GAAA,EAAAC,IAAsB41C,uBAAA,SAAAryC,GAAyD,MAArBk8B,IAAAl8B,IAAAuT,EAAA,QAAqBvT,EAAAs8B,sBAAA3B,GAAA,WAA4C0B,GAAA,UAAAr8B,GAAA,aAA6BA,EAAAs8B,oBAAA,UAA6B,IAASgW,sBAAA,WAAkC,MAAA9V,IAAA/lB,UAAA,GAC5gBrX,YAAWmzC,wBAAA7X,GAAA8X,yBAAA1b,GAAA2b,4BAAA5X,GAAA4W,UAAA7W,GAAA8X,yBAAA5X,GAAAhlB,oDAAoL68B,eAAAtV,GAAAuV,oBAAAhW,GAAAiW,iBAAA1U,GAAA2U,yBAAAlS,GAAAmS,sBAAAnV,GAAAoV,sBAAA7J,IAA2I8J,oBAAA,SAAAjzC,EAAAE,GAAmC,UAAA87B,IAAAh8B,GAAA,QAAAE,IAAA,IAAAA,EAAAgtB,UAA8CiO,KAAIC,wBAAAjiB,EAAA+5B,WAAA,EAAAr9B,QAAA,SAAAs9B,oBAAA,aAC/Z,IAAAC,KAAQn9B,QAAAg8B,IAAWoB,GAAAD,IAAAnB,IAAAmB,EAAej3C,GAAAD,QAAAm3C,GAAAp9B,QAAAo9B,GAAAp9B,QAAAo9B,IjBqlD5B,SAAUl3C,EAAQD,EAASH,GAEjC,YkB5zDA,IAAA4e,KAAA,oBAAAnY,iBAAA4E,WAAA5E,OAAA4E,SAAA+I,eAQAmjC,GAEA34B,YAEA44B,cAAA,oBAAAC,QAEAC,qBAAA94B,MAAAnY,OAAAuiB,mBAAAviB,OAAAqgB,aAEA6wB,eAAA/4B,KAAAnY,OAAAmxC,OAEAC,YAAAj5B,EAIAxe,GAAAD,QAAAo3C,GlB20DM,SAAUn3C,EAAQD,EAASH,GAEjC,YmBt1DA,SAAA83C,GAAAC,GAEA,wBADAA,MAAA,oBAAA1sC,uBAAAxJ,KAEA,WAEA,KACA,MAAAk2C,GAAA9xB,eAAA8xB,EAAArqC,KACG,MAAAlH,GACH,MAAAuxC,GAAArqC,MAIAtN,EAAAD,QAAA23C,GnBk3DM,SAAU13C,EAAQD,EAASH,GAEjC,YoBn4DA,SAAA2sB,GAAAtV,EAAAC,GAEA,MAAAD,KAAAC,EAIA,IAAAD,GAAA,IAAAC,GAAA,EAAAD,IAAA,EAAAC,EAGAD,OAAAC,MASA,QAAA0gC,GAAAC,EAAAC,GACA,GAAAvrB,EAAAsrB,EAAAC,GACA,QAGA,qBAAAD,IAAA,OAAAA,GAAA,iBAAAC,IAAA,OAAAA,EACA,QAGA,IAAAC,GAAAr3C,OAAAgC,KAAAm1C,GACAG,EAAAt3C,OAAAgC,KAAAo1C,EAEA,IAAAC,EAAA70C,SAAA80C,EAAA90C,OACA,QAIA,QAAAjD,GAAA,EAAiBA,EAAA83C,EAAA70C,OAAkBjD,IACnC,IAAAmB,EAAAjB,KAAA23C,EAAAC,EAAA93C,MAAAssB,EAAAsrB,EAAAE,EAAA93C,IAAA63C,EAAAC,EAAA93C,KACA,QAIA,UA/CA,GAAAmB,GAAAV,OAAAS,UAAAC,cAkDApB,GAAAD,QAAA63C,GpB45DM,SAAU53C,EAAQD,EAASH,GAEjC,YqB58DA,SAAAq4C,GAAAC,EAAAC,GACA,SAAAD,IAAAC,KAEGD,IAAAC,IAEAC,EAAAF,KAEAE,EAAAD,GACHF,EAAAC,EAAAC,EAAAl7B,YACG,YAAAi7B,GACHA,EAAAG,SAAAF,KACGD,EAAAI,4BACH,GAAAJ,EAAAI,wBAAAH,MAnBA,GAAAC,GAAAx4C,EAAA,GAyBAI,GAAAD,QAAAk4C,GrBm+DM,SAAUj4C,EAAQD,EAASH,GAEjC,YsBx/DA,SAAAw4C,GAAAn3C,GACA,MAAAs3C,GAAAt3C,IAAA,GAAAA,EAAA8gB,SAPA,GAAAw2B,GAAA34C,EAAA,GAUAI,GAAAD,QAAAq4C,GtB8gEM,SAAUp4C,EAAQD,EAASH,GAEjC,YuBthEA,SAAA24C,GAAAt3C,GACA,GAAA02C,GAAA12C,IAAA2kB,eAAA3kB,EAAAgK,SACA+8B,EAAA2P,EAAA3P,aAAA3hC,MACA,UAAApF,KAAA,mBAAA+mC,GAAAwQ,KAAAv3C,YAAA+mC,GAAAwQ,KAAA,iBAAAv3C,IAAA,iBAAAA,GAAA8gB,UAAA,iBAAA9gB,GAAAygB,WAGA1hB,EAAAD,QAAAw4C,GvB0iEM,SAAUv4C,EAAQwT,EAAqB5T,GAE7C,YAI8f,SAAS64C,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIj3C,WAAU,qCAAuC,QAASk3C,GAA2Bp0C,EAAKrE,GAAM,IAAIqE,EAAM,KAAM,IAAI6E,gBAAe,4DAA8D,QAAOlJ,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBqE,EAALrE,EAAW,QAAS04C,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIr3C,WAAU,iEAAkEq3C,GAAaD,GAAS33C,UAAUT,OAAOs4C,OAAOD,GAAYA,EAAW53C,WAAWwD,aAAamB,MAAMgzC,EAASj4C,YAAW,EAAMo4C,UAAS,EAAKr4C,cAAa,KAAWm4C,IAAWr4C,OAAOw4C,eAAex4C,OAAOw4C,eAAeJ,EAASC,GAAYD,EAASK,UAAUJ,GAH3wC,GAAItlC,GAAsC7T,EAAoB,GAC1D8T,EAA8C9T,EAAoBmB,EAAE0S,GACpE2lC,EAA8Dx5C,EAAoB,IACvGy5C,EAAa,WAAW,QAASC,GAAiB12C,EAAOyR,GAAO,IAAI,GAAIpU,GAAE,EAAEA,EAAEoU,EAAMnR,OAAOjD,IAAI,CAAC,GAAIs5C,GAAWllC,EAAMpU,EAAGs5C,GAAW14C,WAAW04C,EAAW14C,aAAY,EAAM04C,EAAW34C,cAAa,EAAQ,SAAU24C,KAAWA,EAAWN,UAAS,GAAKv4C,OAAOC,eAAeiC,EAAO22C,EAAWp2C,IAAIo2C,IAAc,MAAO,UAASZ,EAAYa,EAAWC,GAAuI,MAAvHD,IAAWF,EAAiBX,EAAYx3C,UAAUq4C,GAAeC,GAAYH,EAAiBX,EAAYc,GAAoBd,MwBlkEtee,ExBkkE8yC,SAASC,GwB/jE3zC,QAAAD,GAAYrlC,GAAOokC,EAAAx0C,KAAAy1C,EAAA,IAAAE,GAAAhB,EAAA30C,MAAAy1C,EAAAP,WAAAz4C,OAAAm5C,eAAAH,IAAAv5C,KAAA8D,KACXoQ,GADW,OAEjBulC,GAAKtlB,OACHwlB,gBAAiBF,EAAKG,mBACtBC,WAAY,QAEdJ,EAAKK,aAAe5zC,OAAO6zC,YAC3BN,EAAKO,YAAkC,GAApBP,EAAKK,aACpBL,EAAKO,YAAc9zC,OAAO+zC,aAC5BR,EAAKO,YAAc9zC,OAAO+zC,YATXR,ExBkkEmsC,MAHiHf,GAAUa,EAAIC,GAG5qCN,EAAaK,IAAMv2C,IAAI,oBAAoB2C,MAAM,WwBpjExNmF,SAASqC,KAAK2e,MAAd,eAAqChoB,KAAKqwB,MAAMwlB,gBAAhD,2BxBojE+U32C,IAAI,mBAAmB2C,MAAM,WwBhjE5W,GAAMu0C,IAAkB,UAAW,UAAW,UAAW,UAEzD,OAAOA,GADWvd,KAAKwd,MAAMxd,KAAK0E,SAAS6Y,EAAen3C,YxB+iEkfC,IAAI,SAAS2C,MAAM,WwBziE/jB,MADIO,QAAO+zC,WAAW/zC,OAAO6zC,YAAaj2C,KAAKk2C,YAAc,GAAUl2C,KAAKk2C,YAAc,EAExFzmC,EAAA7P,EAAAmQ,cAAA,WACEN,EAAA7P,EAAAmQ,cAAA,OAAKiY,OAAQsuB,QAAQ,OAAQT,gBAAiB71C,KAAKqwB,MAAMwlB,gBAAiBU,OAAO,YAAaC,WAAW,SAAUC,eAAgB,SAAUrT,OAAQpjC,KAAKg2C,eACxJvmC,EAAA7P,EAAAmQ,cAAColC,EAAA,GAAkBU,gBAAiB71C,KAAKqwB,MAAMwlB,gBAAiBE,WAAY/1C,KAAKqwB,MAAM0lB,WAAYG,YAAal2C,KAAKk2C,oBxBsiEgmCT,GwBrkE7sCjmC,EAAA,UAsClBD,GAAA,KxBmiEM,SAAUxT,EAAQwT,EAAqB5T,GAE7C,YAK8f,SAAS64C,GAAgBC,EAASC,GAAa,KAAKD,YAAoBC,IAAc,KAAM,IAAIj3C,WAAU,qCAAuC,QAASk3C,GAA2Bp0C,EAAKrE,GAAM,IAAIqE,EAAM,KAAM,IAAI6E,gBAAe,4DAA8D,QAAOlJ,GAAqB,iBAAPA,IAA+B,mBAAPA,GAAwBqE,EAALrE,EAAW,QAAS04C,GAAUC,EAASC,GAAY,GAAuB,mBAAbA,IAAsC,OAAbA,EAAmB,KAAM,IAAIr3C,WAAU,iEAAkEq3C,GAAaD,GAAS33C,UAAUT,OAAOs4C,OAAOD,GAAYA,EAAW53C,WAAWwD,aAAamB,MAAMgzC,EAASj4C,YAAW,EAAMo4C,UAAS,EAAKr4C,cAAa,KAAWm4C,IAAWr4C,OAAOw4C,eAAex4C,OAAOw4C,eAAeJ,EAASC,GAAYD,EAASK,UAAUJ,GAJ3wC,GAAItlC,GAAsC7T,EAAoB,GAC1D8T,EAA8C9T,EAAoBmB,EAAE0S,GACpEknC,EAA0C/6C,EAAoB,IAC9Dg7C,EAAkDh7C,EAAoBmB,EAAE45C,GAC7FtB,EAAa,WAAW,QAASC,GAAiB12C,EAAOyR,GAAO,IAAI,GAAIpU,GAAE,EAAEA,EAAEoU,EAAMnR,OAAOjD,IAAI,CAAC,GAAIs5C,GAAWllC,EAAMpU,EAAGs5C,GAAW14C,WAAW04C,EAAW14C,aAAY,EAAM04C,EAAW34C,cAAa,EAAQ,SAAU24C,KAAWA,EAAWN,UAAS,GAAKv4C,OAAOC,eAAeiC,EAAO22C,EAAWp2C,IAAIo2C,IAAc,MAAO,UAASZ,EAAYa,EAAWC,GAAuI,MAAvHD,IAAWF,EAAiBX,EAAYx3C,UAAUq4C,GAAeC,GAAYH,EAAiBX,EAAYc,GAAoBd,KyBjlE5etyC,QAAOw0C,OAASj7C,EAAQ,GzBilE0zC,IyB/kE50Ck7C,GzB+kEk2C,SAASnB,GyB3kE/2C,QAAAmB,GAAYzmC,GAAOokC,EAAAx0C,KAAA62C,EAAA,IAAAlB,GAAAhB,EAAA30C,MAAA62C,EAAA3B,WAAAz4C,OAAAm5C,eAAAiB,IAAA36C,KAAA8D,KACXoQ,GADW,OAAAulC,GAkDnBmB,MAAQ,WAENnB,EAAKoB,OAASJ,EAAA/2C,EAAOm3C,OACrBpB,EAAKqB,OAASL,EAAA/2C,EAAOo3C,OACrBrB,EAAKsB,gBAAkBN,EAAA/2C,EAAOq3C,gBAC9BtB,EAAKuB,MAAQP,EAAA/2C,EAAOs3C,MACpBvB,EAAKwB,MAAQR,EAAA/2C,EAAOu3C,MACpBxB,EAAKyB,OAAST,EAAA/2C,EAAOw3C,OACrBzB,EAAK0B,UAAYV,EAAA/2C,EAAOy3C,UAKxB1B,EAAK2B,OAAS3B,EAAKoB,OAAOhC,SAC1BY,EAAK2B,OAAOC,MAAMC,QAAQvkC,EAAI,IAC9B0iC,EAAK4B,MAAQ5B,EAAK2B,OAAOC,KAGzB,IAAIznC,GAAS6lC,EAAKqB,OAAOjC,QACrB/hB,QAAShsB,SAASgJ,eAAe,mBACjCsnC,OAAQ3B,EAAK2B,OACbzzC,SACEs/B,MAAOwS,EAAKxS,MACZC,OAAQuS,EAAKvS,OACbqU,WAAY,OACZC,WAAY,cACZC,YAAY,IAGlBhC,GAAKqB,OAAOY,IAAI9nC,EAGhB,IAAI+nC,GAAQlC,EAAKuB,MAAMnC,OAAOjlC,EAAOgoC,QACjCC,EAAkBpC,EAAKsB,gBAAgBlC,OAAOY,EAAK2B,QAC/CO,MAAOA,EACPG,YACIC,UAAW,GACXnoC,QACIooC,SAAS,KAIzBvC,GAAKwB,MAAMziB,IAAIihB,EAAK4B,MAAOQ,IA5FVpC,EA8GnBiC,IAAM,WACJx1C,OAAO2nC,sBAAsB4L,EAAKiC,KAClCjC,EAAKwC,iBACDtf,KAAK0E,SAAS,KAChBoY,EAAKyC,kBAEPzC,EAAKoB,OAAOsB,OAAO1C,EAAK2B,OAAQ,IAAK,KApHpB3B,EAuHnBwC,eAAiB,WACfxC,EAAK4B,MAAMe,OAAO/5C,QAAQ,SAAC8K,GACT,eAAZA,EAAKkvC,QACP5C,EAAK6C,kBAAkBnvC,GACvBssC,EAAK8C,kBAAkBpvC,OA3HVssC,EAgInByC,gBAAkB,WAChB,GAAIM,GAAuB,GAAX/C,EAAKxS,MAAYtK,KAAK0E,SAASoY,EAAKxS,MAAM,IACxDwV,EAAwB,KAAZhD,EAAKvS,OACjB/5B,EAAOssC,EAAKyB,OAAOwB,OAAOF,EAAWC,EAAWhD,EAAKkD,iBAAiBC,KAAMnD,EAAKkD,iBAAiBE,iBAClGpD,GAAKwB,MAAMziB,IAAIihB,EAAK4B,MAAOluC,IApIZssC,EAuInB6C,kBAAoB,SAACnvC,GACnB,GAAI2vC,UACAC,EAAW5vC,EAAK4vC,SAChBC,EAAsBrgB,KAAKsgB,IAAIF,EAASjmC,EAAE2iC,EAAKxS,MAAM,GACvDiW,EAAsBvgB,KAAKsgB,IAAIF,EAAShmC,EAAE0iC,EAAKvS,OAAO,GACtDiW,EAASxgB,KAAKsgB,IAAID,GAAqBvD,EAAKxS,MAAM,GAAK,GACvDmW,EAASzgB,KAAKsgB,IAAIC,GAAqBzD,EAAKvS,OAAO,GAAK,EAExD4V,GADEK,EAAOC,EACDD,EAEAC,EAEVjwC,EAAKyG,OAAO49B,QAAUsL,GAnJLrD,EAsJnB8C,kBAAoB,SAACpvC,GAEfA,EAAK4vC,SAAShmC,EAAI0iC,EAAKvS,QACzBuS,EAAK0B,UAAUkC,OAAO5D,EAAK4B,MAAOluC,IAzJnBssC,EAiKnB6D,SAAW,WAET,GAAIC,KACJA,GAAcv4C,KAAKy0C,EAAK+D,gBAAgB1yC,SAASgJ,eAAe,WAChEypC,EAAcv4C,KAAKy0C,EAAK+D,gBAAgB1yC,SAASgJ,eAAe,WAGhE,IAAM2pC,GAAYhE,EAAKiE,cAAcH,GAI/BI,EADQ,GACalE,EAAKxS,MAC1B2W,EAF2B,EAELnE,EAAKvS,MACjC,KAAK,GAAI2W,KAAaN,GACpB,IAAK,GAAIz9C,GAAE,EAAGA,EAAEy9C,EAAcM,GAAW96C,OAAQjD,IAC/Cy9C,EAAcM,GAAW/9C,GAAGgX,EAAI2iC,EAAKqE,oBAAoBP,EAAcM,GAAW/9C,GAAGgX,EAAG2mC,EAAUM,MAAOJ,GACzGJ,EAAcM,GAAW/9C,GAAGiX,EAAI0iC,EAAKqE,oBAAoBP,EAAcM,GAAW/9C,GAAGiX,EAAG0mC,EAAUO,MAAOJ,EAK7GL,GAAcv4C,KAAKy0C,EAAKwE,MAAmB,EAARthB,KAAKuhB,GAAV,IAA8B,EAARvhB,KAAKuhB,GAAV,IAA8B,EAARvhB,KAAKuhB,GAAV,IAA8B,EAARvhB,KAAKuhB,GAAV,MACjFX,EAAcv4C,KAAKy0C,EAAKwE,MAAkB,EAARthB,KAAKuhB,GAAT,GAA4B,EAARvhB,KAAKuhB,GAAT,GAA6B,EAARvhB,KAAKuhB,GAAV,IAA8B,EAARvhB,KAAKuhB,GAAV,MAG/EzE,EAAK0E,UAAUZ,IA1LE9D,EA6LnB+D,gBAAkB,SAACY,GAKjB,IAAK,GAJCC,GAAa1hB,KAAKwd,MAAOiE,EAAQE,kBAGnCC,KACKC,EAAM,EAAGA,EAAM,EAAGA,GAFR,KAE0B,CAC3C,GAAIC,GAAeD,EAAMH,EACrBK,EAAKN,EAAQO,iBAAiBF,EAClCC,GAAG5nC,EAAI4nC,EAAG5nC,EACV4nC,EAAG3nC,EAAI2nC,EAAG3nC,EACVwnC,EAAmBv5C,KAAK05C,GAE1B,MAAOH,IAzMU9E,EA4MnBiE,cAAgB,SAACkB,GAEf,QAASC,GAAiBC,EAAM/9C,GAE9B,IAAK,GADDg+C,GAAM,EAAGC,EAAO,EAAGC,SACdn/C,EAAE,EAAGA,EAAEg/C,EAAK/7C,OAAQjD,IAC3Bm/C,EAAeH,EAAKh/C,GAAGiB,GACnBk+C,EAAeD,IAAMA,EAAOC,GAC5BA,EAAeF,IAAKA,EAAME,EAEhC,QAAQF,MAAKC,QAIf,GAAIjB,GAAQ,EACRC,EAAQ,EACRkB,SAAoBC,SAfIC,GAAA,EAAAC,GAAA,EAAAC,MAAAh+C,EAAA,KAgB5B,OAAAi+C,GAAAC,EAAiBZ,EAAjBhyC,OAAAL,cAAA6yC,GAAAG,EAAAC,EAAAhzC,QAAA9G,MAAA05C,GAAA,EAA2B,IAAlBN,GAAkBS,EAAA55C,KACzBu5C,GAAqBL,EAAiBC,EAAM,KACxCI,EAAmBF,KAAKjB,IAAOA,EAAQmB,EAAmBF,MAC9DG,EAAqBN,EAAiBC,EAAM,KACxCK,EAAmBH,KAAKhB,IAAOA,EAAQmB,EAAmBH,OApBpC,MAAAx8C,GAAA68C,GAAA,EAAAC,EAAA98C,EAAA,aAAA48C,GAAAI,EAAAriC,QAAAqiC,EAAAriC,SAAA,WAAAkiC,EAAA,KAAAC,IAsB5B,OAAQvB,QAAOC,UAlOEvE,EA2OnBwE,MAAQ,SAACwB,EAAoBC,EAAeC,EAAeC,GASzD,IAAK,GARC1Y,GAAS,IAAIuS,EAAKvS,OAElBwI,EAAM5kC,SAASgJ,eAAe,OAChC+rC,KAGEC,EAAuB,IAAT5Y,EACd6Y,GAAkBL,EAAcE,GANf,GAOdI,EAAaJ,EAAoBI,EAAWN,EAAeM,GAAYD,EAAe,CAC5F,GAAIE,GAAWH,EAAYnjB,KAAKujB,IAAIF,GAChCG,EAAWL,EAAYnjB,KAAKyjB,IAAIJ,GAChCK,EAAc3Q,EAAI4Q,gBACtBD,GAAYvpC,EAAImpC,EAChBI,EAAYtpC,EAAIopC,EAChBN,EAAQ76C,KAAKq7C,GAOhB,IAAK,GAHCE,GAAuB,GAATrZ,EACdsZ,GAAkBb,EAAcF,GAlBf,GAmBnBgB,EAAahB,EACR3/C,EAAE,EAAEA,EApBU,GAoBOA,IAAI,CAChC,GAAImgD,GAAWM,EAAY5jB,KAAKujB,IAAIO,GAChCN,EAAWI,EAAY5jB,KAAKyjB,IAAIK,GAChCJ,EAAc3Q,EAAI4Q,gBACtBD,GAAYvpC,EAAImpC,EAChBI,EAAYtpC,EAAIopC,EAChBN,EAAQ76C,KAAKq7C,GACbI,GAAcD,EAIhB,GAAIP,GAAWH,EAAYnjB,KAAKujB,IAAIN,GAChCO,EAAWL,EAAYnjB,KAAKyjB,IAAIR,GAChCS,EAAc3Q,EAAI4Q,gBAKtB,OAJAD,GAAYvpC,EAAImpC,EAChBI,EAAYtpC,EAAIopC,EAChBN,EAAQ76C,KAAKq7C,GAENR,GAnRUpG,EAsRnB0E,UAAY,SAACS,GACX,GAAI8B,MACEC,IACH1Z,MAAO,IAAIwS,EAAKxS,MAAOC,OAAQ,GAAGuS,EAAKvS,SACvCD,MAAO,KAAKwS,EAAKxS,MAAOC,OAAQ,IAAIuS,EAAKvS,SACzCD,MAAO,IAAIwS,EAAKxS,MAAOC,OAAQ,IAAIuS,EAAKvS,SACxCD,MAAO,IAAIwS,EAAKxS,MAAOC,OAAQ,IAAIuS,EAAKvS,QAE3C,KAAK,GAAI2W,KAAae,GACpB8B,EAAe17C,KAAKy0C,EAAKyB,OAAO0F,aAAaD,EAAiB9C,GAAW5W,MAAO0Z,EAAiB9C,GAAW3W,OAAQ0X,EAASf,IAAcgD,UAAU,EAAMjtC,OAAQ6lC,EAAKqH,oBAE1KrH,GAAKwB,MAAMziB,IAAIihB,EAAK4B,MAAOqF,IAjSVjH,EAwSnBsH,QAAU,SAAClxC,EAAMo3B,EAAO+Z,GACtB,MACEztC,GAAA7P,EAAAmQ,cAAA,OAAKiY,OAAQm1B,aAAcD,IACzBztC,EAAA7P,EAAAmQ,cAAA,cACEN,EAAA7P,EAAAmQ,cAAA,KAAGiY,OACDo1B,SAAU,IAAIzH,EAAKvS,OACnBia,WAAY1H,EAAK2H,eAAeD,WAChCzc,MAAO+U,EAAKvlC,MAAMylC,gBAClB1S,MAAOA,EACPC,OAAQ,IAAIuS,EAAKvS,OACjBma,aAAc,OACd1H,gBAAiBF,EAAK6H,WACtBC,cAAe,SACflH,OAAQ,cAAc9mC,EAAA7P,EAAAmQ,cAAA,SAAIhE,OAjTlC4pC,EAAK6H,WAAa7H,EAAKvlC,MAAM2lC,WAC7BJ,EAAKyH,SAAW,QAChBzH,EAAKvS,OAAS,GAAGhhC,OAAO6zC,YACxBN,EAAKxS,MAAoB,GAAZwS,EAAKvS,OAGlBuS,EAAKkD,kBACHC,KAAM,KAAKnD,EAAKvS,OAChBsa,kBAAmB1qC,EAAG,EAAGC,EAAkB,IAAd4lB,KAAK0E,UAClCogB,sBAAuB3qC,EAAG,GAAKC,EAAG,GAClC8lC,kBACE6E,YAAa,GACbC,SAAU,EACV/tC,QACEguC,UAAWnI,EAAK6H,WAChBO,YAAa,cACbrQ,QAAS,KAMfiI,EAAKqH,mBACHc,UAAWnI,EAAK6H,WAChBO,YAAapI,EAAK6H,WAClBQ,UAAW,EACXtQ,QAAS,GAGXiI,EAAK2H,gBACHD,WAAY,YACZD,SAAU,IAAIzH,EAAKvS,OACnBxC,MAAO+U,EAAK6H,YApCG7H,EzB8nE2sE,MAnDn2Bf,GAAUiC,EAAkBnB,GAuClsCN,EAAayB,IAAoB33C,IAAI,oBAAoB2C,MAAM,WyBzkElR7B,KAAK82C,QACL92C,KAAKw5C,WACLx5C,KAAK43C,SzBglEN14C,IAAI,sBAAsB2C,MAAM,SyBt5Dbs5C,EAAcD,EAAM+C,GAGtC,MAFqB9C,GAAeD,EACJ+C,KzBu5DjC/+C,IAAI,SAAS2C,MAAM,WyBl0DlB,MACE4N,GAAA7P,EAAAmQ,cAAA,OAAKhM,GAAG,kBAAkBikB,OAAQsuB,QAAQ,cAAe4H,UAAW,EAAG3H,OAAQ,cAC7E9mC,EAAA7P,EAAAmQ,cAAA,OAAKhM,GAAG,MAAMikB,OAAQsuB,QAAS,QAASlT,OAAO,QAAQD,MAAM,QAAQ1tB,QAAQ,MAAM0oC,QAAQ,eACzF1uC,EAAA7P,EAAAmQ,cAAA,KAAGquC,UAAU,qBACX3uC,EAAA7P,EAAAmQ,cAAA,QAAMhM,GAAG,SAAS1H,EAAE,4IAA4IgiD,KAAK,OAAOC,OAAO,OAAO9P,YAAY,OACtM/+B,EAAA7P,EAAAmQ,cAAA,QAAMhM,GAAG,SAAS1H,EAAE,8IAA8IgiD,KAAK,OAAOC,OAAO,OAAO9P,YAAY,OACxM/+B,EAAA7P,EAAAmQ,cAAA,QAAMhM,GAAG,QAAQ1H,EAAE,qHAAqHgiD,KAAK,OAAOC,OAAO,OAAO9P,YAAY,aAC9K/+B,EAAA7P,EAAAmQ,cAAA,QAAMhM,GAAG,SAAS1H,EAAE,gRAAgRgiD,KAAK,OAAOC,OAAO,OAAO9P,YAAY,eAG9U/+B,EAAA7P,EAAAmQ,cAAA,OAAKiY,OAAQixB,SAAS,WAAYiF,UAAW,GAAGl+C,KAAKojC,OAAQD,MAAOnjC,KAAKmjC,MAAOoT,OAAO,cACrF9mC,EAAA7P,EAAAmQ,cAAA,cACEN,EAAA7P,EAAAmQ,cAAA,KAAGiY,MAAOhoB,KAAKs9C,gBAAgB7tC,EAAA7P,EAAAmQ,cAAA,sCAC/BN,EAAA7P,EAAAmQ,cAAA,KAAGiY,MAAOhoB,KAAKs9C,gBAAgB7tC,EAAA7P,EAAAmQ,cAAA,gDzBqzD4rE8mC,GyBloEvsErnC,EAAA,UAqVhCD,GAAA,KzBo0DM,SAAUxT,EAAQD,EAASH,IAEL,SAAS2J,GAAS,GAAIi5C,G0B/pElDA,GA8BA,SAAA/7C,GAAwEzG,EAAAD,QAAA0G,KAAwP,WAAuC,kBAAmB,QAAAoQ,GAAAzQ,EAAArF,EAAAqU,GAAkB,QAAA3U,GAAAR,EAAAwG,GAAgB,IAAA1F,EAAAd,GAAA,CAAU,IAAAmG,EAAAnG,GAAA,CAAU,GAAAI,GAAA,kBAAAmiD,KAA0C,KAAA/7C,GAAApG,EAAA,MAAAmiD,GAAAviD,GAAA,EAAwB,IAAAmW,EAAA,MAAAA,GAAAnW,GAAA,EAAoB,IAAA4D,GAAA,GAAA+C,OAAA,uBAAA3G,EAAA,IAA8C,MAAA4D,GAAA4+C,KAAA,mBAAA5+C,EAAkC,GAAAxC,GAAAN,EAAAd,IAAYF,WAAYqG,GAAAnG,GAAA,GAAAE,KAAAkB,EAAAtB,QAAA,SAAA8W,GAAoD,MAAApW,GAAjB2F,EAAAnG,GAAA,GAAA4W,IAAiBA,IAAexV,IAAAtB,QAAA8W,EAAAzQ,EAAArF,EAAAqU,GAAsB,MAAArU,GAAAd,GAAAF,QAAoB,OAAAqW,GAAA,kBAAAosC,MAAAviD,EAAA,EAAkDA,EAAAmV,EAAAlS,OAAWjD,IAAAQ,EAAA2U,EAAAnV,GAAY,OAAAQ,GAAS,MAAAoW,OAAc6rC,GAAA,SAAAC,EAAA3iD,EAAAD,GAW3zB,GAAA6O,KAEA5O,GAAAD,QAAA6O,CAEA,IAAAg0C,GAAAD,EAAA,wBACAE,EAAAF,EAAA,sBACAG,EAAAH,EAAA,oBAEAI,GADAJ,EAAA,oBACAA,EAAA,mBACAK,EAAAL,EAAA,sBACAM,EAAAN,EAAA,qBAEA,WAEA/zC,EAAAs0C,cAAA,EACAt0C,EAAAu0C,sBAAA,EACAv0C,EAAAw0C,0BAAA,EACAx0C,EAAAy0C,cAAA,EAWAz0C,EAAAoqC,OAAA,SAAAlxC,GACA,GAAAw7C,IACAt7C,GAAA+6C,EAAAQ,SACAzzC,KAAA,OACA0sC,MAAA,OACAjrC,SACAiyC,UACAC,MAAA,EACAC,SAAAd,EAAAe,SAAA,+BACAzG,UAAuBjmC,EAAA,EAAAC,EAAA,GACvB0sC,OAAoB3sC,EAAA,EAAAC,EAAA,GACpB2sC,OAAA,EACAC,iBAA8B7sC,EAAA,EAAAC,EAAA,GAC9B6sC,mBAAgC9sC,EAAA,EAAAC,EAAA,EAAAusC,MAAA,GAChCO,cAAA,EACAC,MAAA,EACAC,aAAA,EACAC,UAAuBltC,EAAA,EAAAC,EAAA,GACvBktC,gBAAA,EACAC,UAAA,EACArD,UAAA,EACAsD,YAAA,EACAC,OAAA,EACAC,eAAA,GACAC,QAAA,KACA5C,YAAA,EACAC,SAAA,GACA4C,eAAA,GACAC,YAAA,IACAC,iBACAC,SAAA,EACAC,KAAA,WACAC,MAAA,GAEAC,KAAA,IACAC,UAAA,EACAlxC,QACAooC,SAAA,EACAxK,QAAA,EACAuT,QACAC,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,GAEArD,UAAA,IAIA30C,EAAAy1C,EAAA/lB,OAAAsmB,EAAAx7C,EAIA,OAFAy9C,GAAAj4C,EAAAxF,GAEAwF,GAWAsB,EAAA42C,UAAA,SAAAC,GACA,MAAAA,GACA72C,EAAAw0C,2BAEAx0C,EAAAu0C,yBASAv0C,EAAA82C,aAAA,WAEA,MADA92C,GAAAy0C,cAAAz0C,EAAAy0C,eAAA,EACAz0C,EAAAy0C,cAUA,IAAAkC,GAAA,SAAAj4C,EAAAxF,GACAA,QAGA8G,EAAAF,IAAApB,GACAq4C,OAAAr4C,EAAAq4C,QAAA3C,EAAAhK,OAAA1rC,EAAAo2C,UACAkC,aAAAt4C,EAAAs4C,cAAA/C,EAAAxwC,MAAA/E,EAAA4vC,UACA2I,UAAAv4C,EAAAu4C,WAAAv4C,EAAAm2C,MACAC,SAAAp2C,EAAAo2C,SACAnyC,MAAAjE,EAAAiE,QAAAjE,GACA0zC,SAAA1zC,EAAA0zC,SACAsD,WAAAh3C,EAAAg3C,WACAwB,OAAAx4C,EAAAw4C,QAAAx4C,IAGAs1C,EAAAmD,OAAAz4C,EAAAo2C,SAAAp2C,EAAAm2C,MAAAn2C,EAAA4vC,UACA+F,EAAA8C,OAAAz4C,EAAA04C,KAAA14C,EAAAm2C,OACAT,EAAA1G,OAAAhvC,EAAAq4C,OAAAr4C,EAAAo2C,SAAAp2C,EAAA62C,UAGAv1C,EAAAF,IAAApB,GACA04C,KAAAl+C,EAAAk+C,MAAA14C,EAAA04C,KACAlT,KAAAhrC,EAAAgrC,MAAAxlC,EAAAwlC,KACAmT,KAAAn+C,EAAAm+C,MAAA34C,EAAA24C,KACAC,QAAAp+C,EAAAo+C,SAAA54C,EAAA44C,SAIA,IAAAC,GAAA74C,EAAA0zC,SAAA,UAAA+B,EAAAqD,QAAA,mDAEA94C,GAAAyG,OAAAguC,UAAAz0C,EAAAyG,OAAAguC,WAAAoE,EACA74C,EAAAyG,OAAAiuC,YAAA10C,EAAAyG,OAAAiuC,aAFA,OAGA10C,EAAAyG,OAAAmxC,OAAAG,WAAA/3C,EAAAq4C,OAAA5oB,IAAA9lB,EAAA3J,EAAA4vC,SAAAjmC,IAAA3J,EAAAq4C,OAAAU,IAAApvC,EAAA3J,EAAAq4C,OAAA5oB,IAAA9lB,GACA3J,EAAAyG,OAAAmxC,OAAAI,WAAAh4C,EAAAq4C,OAAA5oB,IAAA7lB,EAAA5J,EAAA4vC,SAAAhmC,IAAA5J,EAAAq4C,OAAAU,IAAAnvC,EAAA5J,EAAAq4C,OAAA5oB,IAAA7lB,GAWAtI,GAAAF,IAAA,SAAApB,EAAAg5C,EAAAxgD,GACA,GAAA5E,EAEA,kBAAAolD,KACAplD,EAAAolD,EACAA,KACAA,EAAAplD,GAAA4E,EAGA,KAAA5E,IAAAolD,GAGA,GAFAxgD,EAAAwgD,EAAAplD,GAEAolD,EAAAllD,eAAAF,GAGA,OAAAA,GAEA,eACA0N,EAAA23C,UAAAj5C,EAAAxH,EACA,MACA,kBACAg9C,EAAAp0C,IAAApB,EAAAxH,EACA,MACA,YACA8I,EAAA43C,QAAAl5C,EAAAxH,EACA,MACA,eACA8I,EAAA63C,WAAAn5C,EAAAxH,EACA,MACA,eACA8I,EAAA83C,WAAAp5C,EAAAxH,EACA,MACA,gBACA8I,EAAA+3C,YAAAr5C,EAAAxH,EACA,MACA,gBACA8I,EAAAg4C,YAAAt5C,EAAAxH,EACA,MACA,aACA8I,EAAAi4C,SAAAv5C,EAAAxH,EACA,MACA,gBACA8I,EAAAk4C,YAAAx5C,EAAAxH,EACA,MACA,uBACA8I,EAAAm4C,mBAAAz5C,EAAAxH,EACA,MACA,aACA8I,EAAAo4C,SAAA15C,EAAAxH,EACA,MACA,SACAwH,EAAApM,GAAA4E,IAYA8I,EAAA23C,UAAA,SAAAj5C,EAAA0zC,GACA,OAAA/gD,GAAA,EAAuBA,EAAAqN,EAAAiE,MAAArO,OAAuBjD,IAAA,CAC9C,GAAAgnD,GAAA35C,EAAAiE,MAAAtR,EACAgnD,GAAAjG,WAEAA,GACAiG,EAAAC,WACArF,YAAAoF,EAAApF,YACAC,SAAAmF,EAAAnF,SACAmE,KAAAgB,EAAAhB,KACAC,QAAAe,EAAAf,QACAzB,QAAAwC,EAAAxC,QACA0C,YAAAF,EAAAE,YACAC,eAAAH,EAAAG,gBAGAH,EAAApF,YAAA,EACAoF,EAAAnF,SAAA,EACAmF,EAAAhB,KAAAgB,EAAAf,QAAAe,EAAAxC,QAAA9U,IACAsX,EAAAE,YAAAF,EAAAG,eAAA,EAEAH,EAAArB,aAAA3uC,EAAAgwC,EAAA/J,SAAAjmC,EACAgwC,EAAArB,aAAA1uC,EAAA+vC,EAAA/J,SAAAhmC,EACA+vC,EAAApB,UAAAoB,EAAAxD,MACAwD,EAAA7C,gBAAA,EACA6C,EAAAhD,MAAA,EACAgD,EAAA/C,aAAA,EACA+C,EAAA1C,OAAA,GACa0C,EAAAC,YACbD,EAAApF,YAAAoF,EAAAC,UAAArF,YACAoF,EAAAnF,SAAAmF,EAAAC,UAAApF,SACAmF,EAAAhB,KAAAgB,EAAAC,UAAAjB,KACAgB,EAAAf,QAAAe,EAAAC,UAAAhB,QACAe,EAAAxC,QAAAwC,EAAAC,UAAAzC,QACAwC,EAAAE,YAAAF,EAAAC,UAAAC,YACAF,EAAAG,eAAAH,EAAAC,UAAAE,qBAEAH,GAAAC,aAWAt4C,EAAA43C,QAAA,SAAAl5C,EAAA24C,GACA,GAAAoB,GAAA/5C,EAAA44C,SAAA54C,EAAA24C,KAAA,EACA34C,GAAA44C,QAAAmB,GAAApB,EAAA,GACA34C,EAAA85C,eAAA,EAAA95C,EAAA44C,QAEA54C,EAAA24C,OACA34C,EAAA65C,YAAA,EAAA75C,EAAA24C,KACA34C,EAAAm3C,QAAAn3C,EAAA24C,KAAA34C,EAAAwlC,MASAlkC,EAAA63C,WAAA,SAAAn5C,EAAAm3C,GACA71C,EAAA43C,QAAAl5C,EAAAm3C,EAAAn3C,EAAAwlC,MACAxlC,EAAAm3C,WAUA71C,EAAA83C,WAAA,SAAAp5C,EAAA44C,GACA54C,EAAA44C,UACA54C,EAAA85C,eAAA,EAAA95C,EAAA44C,SAeAt3C,EAAA+3C,YAAA,SAAAr5C,EAAAo2C,GAEAA,EAAA,GAAAp2C,SACAA,EAAAo2C,WAEAp2C,EAAAo2C,SAAAd,EAAA5J,OAAA0K,EAAAp2C,GAIAA,EAAA04C,KAAA/C,EAAAlC,aAAAzzC,EAAAo2C,UACAp2C,EAAAwlC,KAAA8P,EAAA9P,KAAAxlC,EAAAo2C,UACA90C,EAAA43C,QAAAl5C,IAAAm3C,QAAAn3C,EAAAwlC,KAGA,IAAAwU,GAAA1E,EAAA0E,OAAAh6C,EAAAo2C,SACAd,GAAA2E,UAAAj6C,EAAAo2C,SAAA4D,GAAA,GAGA14C,EAAA83C,WAAAp5C,EAAAsB,EAAAs0C,cAAAN,EAAAsD,QAAA54C,EAAAo2C,SAAAp2C,EAAA24C,OAGArD,EAAA2E,UAAAj6C,EAAAo2C,SAAAp2C,EAAA4vC,UACA8F,EAAA1G,OAAAhvC,EAAAq4C,OAAAr4C,EAAAo2C,SAAAp2C,EAAA62C,WAaAv1C,EAAAo4C,SAAA,SAAA15C,EAAAiE,EAAAi2C,GACA,GAAAvnD,EAQA,KALAsR,IAAAvF,MAAA,GACAsB,EAAAiE,MAAArO,OAAA,EACAoK,EAAAiE,MAAApM,KAAAmI,GACAA,EAAAw4C,OAAAx4C,EAEArN,EAAA,EAAmBA,EAAAsR,EAAArO,OAAkBjD,IAAA,CACrC,GAAAgnD,GAAA11C,EAAAtR,EACAgnD,KAAA35C,IACA25C,EAAAnB,OAAAx4C,EACAA,EAAAiE,MAAApM,KAAA8hD,IAIA,OAAA35C,EAAAiE,MAAArO,OAAA,CAMA,GAHAskD,EAAA,oBAAAA,MAGA,CACA,GAAA9D,KACA,KAAAzjD,EAAA,EAAuBA,EAAAsR,EAAArO,OAAkBjD,IACzCyjD,IAAA5nC,OAAAvK,EAAAtR,GAAAyjD,SAGAd,GAAA6E,cAAA/D,EAEA,IAAAgE,GAAA9E,EAAA8E,KAAAhE,GACAiE,EAAA/E,EAAA0E,OAAAI,EAEA94C,GAAA+3C,YAAAr5C,EAAAo6C,GACA9E,EAAA2E,UAAAj6C,EAAAo2C,SAAAiE,GAIA,GAAAC,GAAAh5C,EAAAi5C,iBAAAv6C,EAEAA,GAAAwlC,KAAA8U,EAAA9U,KACAxlC,EAAAw4C,OAAAx4C,EACAA,EAAA4vC,SAAAjmC,EAAA2wC,EAAAN,OAAArwC,EACA3J,EAAA4vC,SAAAhmC,EAAA0wC,EAAAN,OAAApwC,EACA5J,EAAAs4C,aAAA3uC,EAAA2wC,EAAAN,OAAArwC,EACA3J,EAAAs4C,aAAA1uC,EAAA0wC,EAAAN,OAAApwC,EAEAtI,EAAA43C,QAAAl5C,EAAAs6C,EAAA3B,MACAr3C,EAAA83C,WAAAp5C,EAAAs6C,EAAA1B,SACAt3C,EAAAg4C,YAAAt5C,EAAAs6C,EAAAN,UASA14C,EAAAg4C,YAAA,SAAAt5C,EAAA4vC,GACA,GAAA4K,GAAAjF,EAAAkF,IAAA7K,EAAA5vC,EAAA4vC,SACA5vC,GAAAs4C,aAAA3uC,GAAA6wC,EAAA7wC,EACA3J,EAAAs4C,aAAA1uC,GAAA4wC,EAAA5wC,CAEA,QAAAjX,GAAA,EAAuBA,EAAAqN,EAAAiE,MAAArO,OAAuBjD,IAAA,CAC9C,GAAAgnD,GAAA35C,EAAAiE,MAAAtR,EACAgnD,GAAA/J,SAAAjmC,GAAA6wC,EAAA7wC,EACAgwC,EAAA/J,SAAAhmC,GAAA4wC,EAAA5wC,EACA0rC,EAAA2E,UAAAN,EAAAvD,SAAAoE,GACA9E,EAAA1G,OAAA2K,EAAAtB,OAAAsB,EAAAvD,SAAAp2C,EAAA62C,YAUAv1C,EAAAi4C,SAAA,SAAAv5C,EAAAm2C,GACA,GAAAqE,GAAArE,EAAAn2C,EAAAm2C,KACAn2C,GAAAu4C,WAAAiC,CAEA,QAAA7nD,GAAA,EAAuBA,EAAAqN,EAAAiE,MAAArO,OAAuBjD,IAAA,CAC9C,GAAAgnD,GAAA35C,EAAAiE,MAAAtR,EACAgnD,GAAAxD,OAAAqE,EACAlF,EAAAmD,OAAAkB,EAAAvD,SAAAoE,EAAAx6C,EAAA4vC,UACA+F,EAAA8C,OAAAkB,EAAAjB,KAAA8B,GACA9E,EAAA1G,OAAA2K,EAAAtB,OAAAsB,EAAAvD,SAAAp2C,EAAA62C,UACAlkD,EAAA,GACA4iD,EAAAmF,YAAAf,EAAA/J,SAAA4K,EAAAx6C,EAAA4vC,SAAA+J,EAAA/J,YAWAtuC,EAAAk4C,YAAA,SAAAx5C,EAAA62C,GACA72C,EAAAs4C,aAAA3uC,EAAA3J,EAAA4vC,SAAAjmC,EAAAktC,EAAAltC,EACA3J,EAAAs4C,aAAA1uC,EAAA5J,EAAA4vC,SAAAhmC,EAAAitC,EAAAjtC,EACA5J,EAAA62C,SAAAltC,EAAAktC,EAAAltC,EACA3J,EAAA62C,SAAAjtC,EAAAitC,EAAAjtC,EACA5J,EAAA22C,MAAApB,EAAAoF,UAAA36C,EAAA62C,WASAv1C,EAAAm4C,mBAAA,SAAAz5C,EAAA62C,GACA72C,EAAAu4C,UAAAv4C,EAAAm2C,MAAAU,EACA72C,EAAA82C,gBAAAD,EACA72C,EAAA42C,aAAApnB,KAAAsgB,IAAA9vC,EAAA82C,kBASAx1C,EAAA24C,UAAA,SAAAj6C,EAAA46C,GACAt5C,EAAAg4C,YAAAt5C,EAAAu1C,EAAAlqB,IAAArrB,EAAA4vC,SAAAgL,KAUAt5C,EAAAm3C,OAAA,SAAAz4C,EAAA66C,EAAAC,GACA,GAAAA,EAES,CACT,GAAA/H,GAAAvjB,KAAAujB,IAAA8H,GACA5H,EAAAzjB,KAAAyjB,IAAA4H,GACAE,EAAA/6C,EAAA4vC,SAAAjmC,EAAAmxC,EAAAnxC,EACAqxC,EAAAh7C,EAAA4vC,SAAAhmC,EAAAkxC,EAAAlxC,CAEAtI,GAAAg4C,YAAAt5C,GACA2J,EAAAmxC,EAAAnxC,GAAAoxC,EAAAhI,EAAAiI,EAAA/H,GACArpC,EAAAkxC,EAAAlxC,GAAAmxC,EAAA9H,EAAA+H,EAAAjI,KAGAzxC,EAAAi4C,SAAAv5C,IAAAm2C,MAAA0E,OAZAv5C,GAAAi4C,SAAAv5C,IAAAm2C,MAAA0E,IAwBAv5C,EAAA25C,MAAA,SAAAj7C,EAAAk7C,EAAAC,EAAAL,GACA,GAAAM,GAAA,EACAC,EAAA,CAEAP,MAAA96C,EAAA4vC,QAEA,QAAAj9C,GAAA,EAAuBA,EAAAqN,EAAAiE,MAAArO,OAAuBjD,IAAA,CAC9C,GAAAgnD,GAAA35C,EAAAiE,MAAAtR,EAGA2iD,GAAA2F,MAAAtB,EAAAvD,SAAA8E,EAAAC,EAAAL,GAGAnB,EAAAjB,KAAA/C,EAAAlC,aAAAkG,EAAAvD,UACAuD,EAAAnU,KAAA8P,EAAA9P,KAAAmU,EAAAvD,UACA90C,EAAA43C,QAAAS,EAAA35C,EAAAm3C,QAAAwC,EAAAnU,MAGA8P,EAAA2E,UAAAN,EAAAvD,UAA+CzsC,GAAAgwC,EAAA/J,SAAAjmC,EAAAC,GAAA+vC,EAAA/J,SAAAhmC,IAC/CtI,EAAA83C,WAAAO,EAAAr4C,EAAAs0C,cAAAN,EAAAsD,QAAAe,EAAAvD,SAAAuD,EAAAhB,OACArD,EAAA2E,UAAAN,EAAAvD,UAA+CzsC,EAAAgwC,EAAA/J,SAAAjmC,EAAAC,EAAA+vC,EAAA/J,SAAAhmC,IAE/CjX,EAAA,IACAyoD,GAAAzB,EAAAnU,KACA6V,GAAA1B,EAAAf,SAIAe,EAAA/J,SAAAjmC,EAAAmxC,EAAAnxC,GAAAgwC,EAAA/J,SAAAjmC,EAAAmxC,EAAAnxC,GAAAuxC,EACAvB,EAAA/J,SAAAhmC,EAAAkxC,EAAAlxC,GAAA+vC,EAAA/J,SAAAhmC,EAAAkxC,EAAAlxC,GAAAuxC,EAGAzF,EAAA1G,OAAA2K,EAAAtB,OAAAsB,EAAAvD,SAAAp2C,EAAA62C,UAIA72C,EAAAiE,MAAArO,OAAA,IACAoK,EAAAwlC,KAAA4V,EAEAp7C,EAAA0zC,WACApyC,EAAA43C,QAAAl5C,IAAAm3C,QAAAiE,GACA95C,EAAA83C,WAAAp5C,EAAAq7C,KAKAr7C,EAAAs7C,eACAJ,IAAAC,EACAn7C,EAAAs7C,cAAAJ,EAGAl7C,EAAAs7C,aAAA,OAaAh6C,EAAA0tC,OAAA,SAAAhvC,EAAAu7C,EAAA5D,EAAA6D,GACA,GAAAC,GAAAjsB,KAAAksB,IAAAH,EAAA5D,EAAA33C,EAAA23C,UAAA,GAGAN,EAAA,EAAAr3C,EAAAq3C,YAAAM,EAAA33C,EAAA23C,UACAgE,EAAA37C,EAAA4vC,SAAAjmC,EAAA3J,EAAAs4C,aAAA3uC,EACAiyC,EAAA57C,EAAA4vC,SAAAhmC,EAAA5J,EAAAs4C,aAAA1uC,CAGA5J,GAAA62C,SAAAltC,EAAAgyC,EAAAtE,EAAAmE,EAAAx7C,EAAAs2C,MAAA3sC,EAAA3J,EAAA24C,KAAA8C,EACAz7C,EAAA62C,SAAAjtC,EAAAgyC,EAAAvE,EAAAmE,EAAAx7C,EAAAs2C,MAAA1sC,EAAA5J,EAAA24C,KAAA8C,EAEAz7C,EAAAs4C,aAAA3uC,EAAA3J,EAAA4vC,SAAAjmC,EACA3J,EAAAs4C,aAAA1uC,EAAA5J,EAAA4vC,SAAAhmC,EACA5J,EAAA4vC,SAAAjmC,GAAA3J,EAAA62C,SAAAltC,EACA3J,EAAA4vC,SAAAhmC,GAAA5J,EAAA62C,SAAAjtC,EAGA5J,EAAA82C,iBAAA92C,EAAAm2C,MAAAn2C,EAAAu4C,WAAAlB,EAAAmE,EAAAx7C,EAAAu2C,OAAAv2C,EAAA44C,QAAA6C,EACAz7C,EAAAu4C,UAAAv4C,EAAAm2C,MACAn2C,EAAAm2C,OAAAn2C,EAAA82C,gBAGA92C,EAAA22C,MAAApB,EAAAoF,UAAA36C,EAAA62C,UACA72C,EAAA42C,aAAApnB,KAAAsgB,IAAA9vC,EAAA82C,gBAGA,QAAAnkD,GAAA,EAAuBA,EAAAqN,EAAAiE,MAAArO,OAAuBjD,IAAA,CAC9C,GAAAgnD,GAAA35C,EAAAiE,MAAAtR,EAEA2iD,GAAA2E,UAAAN,EAAAvD,SAAAp2C,EAAA62C,UAEAlkD,EAAA,IACAgnD,EAAA/J,SAAAjmC,GAAA3J,EAAA62C,SAAAltC,EACAgwC,EAAA/J,SAAAhmC,GAAA5J,EAAA62C,SAAAjtC,GAGA,IAAA5J,EAAA82C,kBACAxB,EAAAmD,OAAAkB,EAAAvD,SAAAp2C,EAAA82C,gBAAA92C,EAAA4vC,UACA+F,EAAA8C,OAAAkB,EAAAjB,KAAA14C,EAAA82C,iBACAnkD,EAAA,GACA4iD,EAAAmF,YAAAf,EAAA/J,SAAA5vC,EAAA82C,gBAAA92C,EAAA4vC,SAAA+J,EAAA/J,WAIA8F,EAAA1G,OAAA2K,EAAAtB,OAAAsB,EAAAvD,SAAAp2C,EAAA62C,YAWAv1C,EAAAu6C,WAAA,SAAA77C,EAAA4vC,EAAA0G,GACAt2C,EAAAs2C,MAAA3sC,GAAA2sC,EAAA3sC,EACA3J,EAAAs2C,MAAA1sC,GAAA0sC,EAAA1sC,CACA,IAAAqS,IAAsBtS,EAAAimC,EAAAjmC,EAAA3J,EAAA4vC,SAAAjmC,EAAAC,EAAAgmC,EAAAhmC,EAAA5J,EAAA4vC,SAAAhmC,EACtB5J,GAAAu2C,QAAAt6B,EAAAtS,EAAA2sC,EAAA1sC,EAAAqS,EAAArS,EAAA0sC,EAAA3sC,GAUArI,EAAAi5C,iBAAA,SAAAv6C,GAaA,OARA87C,IACAnD,KAAA,EACAnT,KAAA,EACAoT,QAAA,EACAoB,QAAqBrwC,EAAA,EAAAC,EAAA,IAIrBjX,EAAA,IAAAqN,EAAAiE,MAAArO,OAAA,IAAqDjD,EAAAqN,EAAAiE,MAAArO,OAAuBjD,IAAA,CAC5E,GAAAgnD,GAAA35C,EAAAiE,MAAAtR,GACAgmD,EAAAgB,EAAAhB,OAAAtW,IAAAsX,EAAAhB,KAAA,CAEAmD,GAAAnD,QACAmD,EAAAtW,MAAAmU,EAAAnU,KACAsW,EAAAlD,SAAAe,EAAAf,QACAkD,EAAA9B,OAAAzE,EAAAlqB,IAAAywB,EAAA9B,OAAAzE,EAAAwG,KAAApC,EAAA/J,SAAA+I,IAKA,MAFAmD,GAAA9B,OAAAzE,EAAAyG,IAAAF,EAAA9B,OAAA8B,EAAAnD,MAEAmD,QA4fGG,iBAAA,GAAAC,mBAAA,GAAAC,mBAAA,GAAAC,qBAAA,GAAAC,qBAAA,GAAAC,uBAAA,GAAAC,mBAAA,KAAgKC,GAAA,SAAAnH,EAAA3iD,EAAAD,GAYnK,GAAAu7C,KAEAt7C,GAAAD,QAAAu7C,CAEA,IAAAyO,GAAApH,EAAA,kBACAI,EAAAJ,EAAA,kBACAK,EAAAL,EAAA,sBACA/zC,EAAA+zC,EAAA,WAEA,WASArH,EAAAtC,OAAA,SAAAlxC,GACA,MAAAi7C,GAAA/lB,QACAh1B,GAAA+6C,EAAAQ,SACAzzC,KAAA,YACAg2C,OAAA,KACAkE,YAAA,EACAzN,UACA0N,eACAC,cACA1N,MAAA,YACAgH,WACS17C,IAaTwzC,EAAA6O,YAAA,SAAAC,EAAAJ,EAAAK,EAAAC,GAOA,GANAF,EAAAJ,aAEAK,GAAAD,EAAAtE,QACAxK,EAAA6O,YAAAC,EAAAtE,OAAAkE,EAAAK,EAAAC,GAGAA,EACA,OAAArqD,GAAA,EAA0BA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IAAA,CAC3D,GAAAsqD,GAAAH,EAAAF,WAAAjqD,EACAq7C,GAAA6O,YAAAI,EAAAP,EAAAK,EAAAC,KAaAhP,EAAA3iB,IAAA,SAAAyxB,EAAAnpD,GACA,GAAAupD,MAAA1uC,OAAA7a,EAEA8oD,GAAAU,QAAAL,EAAA,aAAgDnpD,UAEhD,QAAAhB,GAAA,EAAuBA,EAAAuqD,EAAAtnD,OAAoBjD,IAAA,CAC3C,GAAAqD,GAAAknD,EAAAvqD,EAEA,QAAAqD,EAAAwM,MAEA,WAEA,GAAAxM,EAAAwiD,SAAAxiD,EAAA,CACAy/C,EAAAp6C,KAAA,uFACA,OAGA2yC,EAAAoP,QAAAN,EAAA9mD,EACA,MACA,kBACAg4C,EAAAqP,cAAAP,EAAA9mD,EACA,MACA,iBACAg4C,EAAAsP,aAAAR,EAAA9mD,EACA,MACA,uBACAg4C,EAAAqP,cAAAP,EAAA9mD,EAAA24C,aAQA,MAFA8N,GAAAU,QAAAL,EAAA,YAA+CnpD,WAE/CmpD,GAaA9O,EAAAkC,OAAA,SAAA4M,EAAAnpD,EAAA4pD,GACA,GAAAL,MAAA1uC,OAAA7a,EAEA8oD,GAAAU,QAAAL,EAAA,gBAAmDnpD,UAEnD,QAAAhB,GAAA,EAAuBA,EAAAuqD,EAAAtnD,OAAoBjD,IAAA,CAC3C,GAAAqD,GAAAknD,EAAAvqD,EAEA,QAAAqD,EAAAwM,MAEA,WACAwrC,EAAAwP,WAAAV,EAAA9mD,EAAAunD,EACA,MACA,kBACAvP,EAAAyP,iBAAAX,EAAA9mD,EAAAunD,EACA,MACA,iBACAvP,EAAA0P,gBAAAZ,EAAA9mD,EAAAunD,EACA,MACA,uBACAvP,EAAAyP,iBAAAX,EAAA9mD,EAAA24C,aAQA,MAFA8N,GAAAU,QAAAL,EAAA,eAAkDnpD,WAElDmpD,GAWA9O,EAAAsP,aAAA,SAAAK,EAAAC,GAIA,MAHAD,GAAAf,WAAA/kD,KAAA+lD,GACAA,EAAApF,OAAAmF,EACA3P,EAAA6O,YAAAc,GAAA,SACAA,GAYA3P,EAAA0P,gBAAA,SAAAC,EAAAC,EAAAL,GACA,GAAA3N,GAAA6F,EAAAryC,QAAAu6C,EAAAf,WAAAgB,EAMA,KALA,IAAAhO,IACA5B,EAAA6P,kBAAAF,EAAA/N,GACA5B,EAAA6O,YAAAc,GAAA,UAGAJ,EACA,OAAA5qD,GAAA,EAA2BA,EAAAgrD,EAAAf,WAAAhnD,OAAkCjD,IAC7Dq7C,EAAA0P,gBAAAC,EAAAf,WAAAjqD,GAAAirD,GAAA,EAIA,OAAAD,IAWA3P,EAAA6P,kBAAA,SAAAf,EAAAlN,GAGA,MAFAkN,GAAAF,WAAAkB,OAAAlO,EAAA,GACA5B,EAAA6O,YAAAC,GAAA,SACAA,GAWA9O,EAAAoP,QAAA,SAAAN,EAAA98C,GAGA,MAFA88C,GAAA7N,OAAAp3C,KAAAmI,GACAguC,EAAA6O,YAAAC,GAAA,SACAA,GAYA9O,EAAAwP,WAAA,SAAAV,EAAA98C,EAAAu9C,GACA,GAAA3N,GAAA6F,EAAAryC,QAAA05C,EAAA7N,OAAAjvC,EAMA,KALA,IAAA4vC,IACA5B,EAAA+P,aAAAjB,EAAAlN,GACA5B,EAAA6O,YAAAC,GAAA,UAGAS,EACA,OAAA5qD,GAAA,EAA2BA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IAC5Dq7C,EAAAwP,WAAAV,EAAAF,WAAAjqD,GAAAqN,GAAA,EAIA,OAAA88C,IAWA9O,EAAA+P,aAAA,SAAAjB,EAAAlN,GAGA,MAFAkN,GAAA7N,OAAA6O,OAAAlO,EAAA,GACA5B,EAAA6O,YAAAC,GAAA,SACAA,GAWA9O,EAAAqP,cAAA,SAAAP,EAAAnO,GAGA,MAFAmO,GAAAH,YAAA9kD,KAAA82C,GACAX,EAAA6O,YAAAC,GAAA,SACAA,GAYA9O,EAAAyP,iBAAA,SAAAX,EAAAnO,EAAA4O,GACA,GAAA3N,GAAA6F,EAAAryC,QAAA05C,EAAAH,YAAAhO,EAKA,KAJA,IAAAiB,GACA5B,EAAAgQ,mBAAAlB,EAAAlN,GAGA2N,EACA,OAAA5qD,GAAA,EAA2BA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IAC5Dq7C,EAAAyP,iBAAAX,EAAAF,WAAAjqD,GAAAg8C,GAAA,EAIA,OAAAmO,IAWA9O,EAAAgQ,mBAAA,SAAAlB,EAAAlN,GAGA,MAFAkN,GAAAH,YAAAmB,OAAAlO,EAAA,GACA5B,EAAA6O,YAAAC,GAAA,SACAA,GAWA9O,EAAAiQ,MAAA,SAAAnB,EAAAoB,EAAAX,GACA,GAAAA,EACA,OAAA5qD,GAAA,EAA2BA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IAC5Dq7C,EAAAiQ,MAAAnB,EAAAF,WAAAjqD,GAAAurD,GAAA,EAcA,OAVAA,GACApB,EAAA7N,OAAA6N,EAAA7N,OAAAkP,OAAA,SAAAn+C,GAAuE,MAAAA,GAAA0zC,WAEvEoJ,EAAA7N,OAAAr5C,OAAA,EAGAknD,EAAAH,YAAA/mD,OAAA,EACAknD,EAAAF,WAAAhnD,OAAA,EACAo4C,EAAA6O,YAAAC,GAAA,SAEAA,GASA9O,EAAAoQ,UAAA,SAAAtB,GAGA,OAFA7N,MAAAzgC,OAAAsuC,EAAA7N,QAEAt8C,EAAA,EAAuBA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IACxDs8C,IAAAzgC,OAAAw/B,EAAAoQ,UAAAtB,EAAAF,WAAAjqD,IAEA,OAAAs8C,IASAjB,EAAAqQ,eAAA,SAAAvB,GAGA,OAFAH,MAAAnuC,OAAAsuC,EAAAH,aAEAhqD,EAAA,EAAuBA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IACxDgqD,IAAAnuC,OAAAw/B,EAAAqQ,eAAAvB,EAAAF,WAAAjqD,IAEA,OAAAgqD,IASA3O,EAAAsQ,cAAA,SAAAxB,GAGA,OAFAF,MAAApuC,OAAAsuC,EAAAF,YAEAjqD,EAAA,EAAuBA,EAAAmqD,EAAAF,WAAAhnD,OAAiCjD,IACxDiqD,IAAApuC,OAAAw/B,EAAAsQ,cAAAxB,EAAAF,WAAAjqD,IAEA,OAAAiqD,IAWA5O,EAAAx6C,IAAA,SAAAspD,EAAApiD,EAAA8H,GACA,GAAA06C,GACAvpD,CAEA,QAAA6O,GACA,WACA06C,EAAAlP,EAAAoQ,UAAAtB,EACA,MACA,kBACAI,EAAAlP,EAAAqQ,eAAAvB,EACA,MACA,iBACAI,EAAAlP,EAAAsQ,cAAAxB,GAAAtuC,OAAAsuC,GAIA,MAAAI,IAGAvpD,EAAAupD,EAAAiB,OAAA,SAAAxqD,GACA,MAAAA,GAAA+G,GAAAwH,aAAAxH,EAAAwH,aAGA,IAAAvO,EAAAiC,OAAA,KAAAjC,EAAA,IANA,MAiBAq6C,EAAAuQ,KAAA,SAAAZ,EAAAT,EAAAU,GAGA,MAFA5P,GAAAkC,OAAAyN,EAAAT,GACAlP,EAAA3iB,IAAAuyB,EAAAV,GACAS,GASA3P,EAAAwQ,OAAA,SAAA1B,GAKA,OAJAI,GAAAlP,EAAAoQ,UAAAtB,GACAtuC,OAAAw/B,EAAAqQ,eAAAvB,IACAtuC,OAAAw/B,EAAAsQ,cAAAxB,IAEAnqD,EAAA,EAAuBA,EAAAuqD,EAAAtnD,OAAoBjD,IAC3CuqD,EAAAvqD,GAAA+H,GAAA+6C,EAAAQ,QAKA,OAFAjI,GAAA6O,YAAAC,GAAA,SAEAA,GAWA9O,EAAAiM,UAAA,SAAA6C,EAAAlC,EAAA6D,GAGA,OAFAxP,GAAAwP,EAAAzQ,EAAAoQ,UAAAtB,KAAA7N,OAEAt8C,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAC1C2O,EAAA24C,UAAAhL,EAAAt8C,GAAAioD,EAKA,OAFA5M,GAAA6O,YAAAC,GAAA,SAEAA,GAWA9O,EAAAyK,OAAA,SAAAqE,EAAAjC,EAAAC,EAAA2D,GAKA,OAJA1L,GAAAvjB,KAAAujB,IAAA8H,GACA5H,EAAAzjB,KAAAyjB,IAAA4H,GACA5L,EAAAwP,EAAAzQ,EAAAoQ,UAAAtB,KAAA7N,OAEAt8C,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,GACAooD,EAAA/6C,EAAA4vC,SAAAjmC,EAAAmxC,EAAAnxC,EACAqxC,EAAAh7C,EAAA4vC,SAAAhmC,EAAAkxC,EAAAlxC,CAEAtI,GAAAg4C,YAAAt5C,GACA2J,EAAAmxC,EAAAnxC,GAAAoxC,EAAAhI,EAAAiI,EAAA/H,GACArpC,EAAAkxC,EAAAlxC,GAAAmxC,EAAA9H,EAAA+H,EAAAjI,KAGAzxC,EAAAm3C,OAAAz4C,EAAA66C,GAKA,MAFA7M,GAAA6O,YAAAC,GAAA,SAEAA,GAYA9O,EAAAiN,MAAA,SAAA6B,EAAA5B,EAAAC,EAAAL,EAAA2D,GAGA,OAFAxP,GAAAwP,EAAAzQ,EAAAoQ,UAAAtB,KAAA7N,OAEAt8C,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,GACAooD,EAAA/6C,EAAA4vC,SAAAjmC,EAAAmxC,EAAAnxC,EACAqxC,EAAAh7C,EAAA4vC,SAAAhmC,EAAAkxC,EAAAlxC,CAEAtI,GAAAg4C,YAAAt5C,GACA2J,EAAAmxC,EAAAnxC,EAAAoxC,EAAAG,EACAtxC,EAAAkxC,EAAAlxC,EAAAoxC,EAAAG,IAGA75C,EAAA25C,MAAAj7C,EAAAk7C,EAAAC,GAKA,MAFAnN,GAAA6O,YAAAC,GAAA,SAEAA,GASA9O,EAAAqK,OAAA,SAAAyE,GAIA,OAHA7N,GAAAjB,EAAAoQ,UAAAtB,GACA1G,KAEAzjD,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,GAAA,GAC1C,GAAAqN,GAAAivC,EAAAt8C,EACAyjD,GAAAv+C,KAAAmI,EAAAq4C,OAAA5oB,IAAAzvB,EAAAq4C,OAAAU,KAGA,MAAArD,GAAAhK,OAAA0K,SAwIG6F,iBAAA,GAAAyC,iBAAA,GAAAtC,qBAAA,GAAAuC,SAAA,IAA2EC,GAAA,SAAAvJ,EAAA3iD,EAAAD,GAc9E,GAAAq7C,KAEAp7C,GAAAD,QAAAq7C,CAEA,IAAAE,GAAAqH,EAAA,eAEAI,GADAJ,EAAA,4BACAA,EAAA,oBAEA,WAUAvH,EAAApC,OAAA,SAAAlxC,GACA,GAAAsiD,GAAA9O,EAAAtC,SAEAsK,GACA9G,MAAA,QACAf,SACAxkC,EAAA,EACAC,EAAA,EACAqxC,MAAA,MAEA5C,QACA5oB,KAAsB9lB,GAAA04B,IAAAz4B,GAAAy4B,KACtB0W,KAAsBpvC,EAAA04B,IAAAz4B,EAAAy4B,MAItB,OAAAoT,GAAA/lB,OAAAotB,EAAA9G,EAAAx7C,SAqGGqkD,2BAAA,GAAA5C,iBAAA,GAAA6C,cAAA,IAAkEC,GAAA,SAAA1J,EAAA3iD,EAAAD,GAOrE,GAAAusD,KAEAtsD,GAAAD,QAAAusD,EAEA,WAQAA,EAAAtT,OAAA,SAAAuT,GACA,OACAvkD,GAAAskD,EAAAtkD,GAAAukD,GACAA,SACAC,cAAA,EACAC,eAAA,IAUAH,EAAAtkD,GAAA,SAAAukD,GACA,MAAAA,GAAAj/C,KAAAtF,GAAA,IAAAukD,EAAAziD,eAKI4iD,GAAA,SAAA/J,EAAA3iD,EAAAD,GASJ,GAAA4sD,KAEA3sD,GAAAD,QAAA4sD,CAEA,IAAAC,GAAAjK,EAAA,SACAkK,EAAAlK,EAAA,UACAK,EAAAL,EAAA,uBAEA,WASAgK,EAAAG,WAAA,SAAAC,EAAAxR,GAKA,OAJAuR,MACAE,EAAAzR,EAAA0R,MAAAC,MAGAjtD,EAAA,EAAuBA,EAAA8sD,EAAA7pD,OAA4BjD,IAAA,CACnD,GAAAktD,GAAAJ,EAAA9sD,GAAA,GACAmtD,EAAAL,EAAA9sD,GAAA,EAEA,MAAAktD,EAAAnM,WAAAmM,EAAA7I,aAAA8I,EAAApM,WAAAoM,EAAA9I,cAGAqI,EAAAU,WAAAF,EAAAvI,gBAAAwI,EAAAxI,kBAKA5B,EAAAsK,SAAAH,EAAAxH,OAAAyH,EAAAzH,SACA,OAAA4H,GAAAJ,EAAA57C,MAAArO,OAAA,MAA4DqqD,EAAAJ,EAAA57C,MAAArO,OAAwBqqD,IAGpF,OAFAC,GAAAL,EAAA57C,MAAAg8C,GAEA32C,EAAAw2C,EAAA77C,MAAArO,OAAA,MAAgE0T,EAAAw2C,EAAA77C,MAAArO,OAAwB0T,IAAA,CACxF,GAAA62C,GAAAL,EAAA77C,MAAAqF,EAEA,IAAA42C,IAAAL,GAAAM,IAAAL,GAAApK,EAAAsK,SAAAE,EAAA7H,OAAA8H,EAAA9H,QAAA,CAEA,GAEA+H,GAFAC,EAAAd,EAAA7kD,GAAAwlD,EAAAC,GACAG,EAAAZ,EAAAW,EAIAD,GADAE,KAAAC,SACAD,EAAAE,UAEA,IAIA,IAAAA,GAAAlB,EAAAmB,SAAAP,EAAAC,EAAAC,EAGAI,GAAAE,UACAlB,EAAA3nD,KAAA2oD,KAQA,MAAAhB,IAWAH,EAAAU,WAAA,SAAAY,EAAAC,GACA,MAAAD,GAAAlJ,QAAAmJ,EAAAnJ,OAAA,IAAAkJ,EAAAlJ,MACAkJ,EAAAlJ,MAAA,EAEA,KAAAkJ,EAAAnJ,KAAAoJ,EAAArJ,WAAA,KAAAqJ,EAAApJ,KAAAmJ,EAAApJ,gBAKG6E,qBAAA,GAAAyE,SAAA,EAAAC,QAAA,KAA8CC,GAAA,SAAA1L,EAAA3iD,EAAAD,GAOjD,GAAAuuD,KAEAtuD,GAAAD,QAAAuuD,CAEA,IAAAzB,GAAAlK,EAAA,UACAgK,EAAAhK,EAAA,cACAI,EAAAJ,EAAA,mBAEA,WAQA2L,EAAAtV,OAAA,SAAAlxC,GACA,GAAAw7C,IACAiL,WAAAD,EACAE,SAAA7B,EAAAG,WACA2B,WACAxB,SACAyB,aACAC,YAAA,GACAC,aAAA,GAGA,OAAA7L,GAAA/lB,OAAAsmB,EAAAx7C,IA2BAwmD,EAAAhS,OAAA,SAAAuS,EAAAtS,EAAAhB,EAAA3jC,GACA,GAAA3X,GAAAgzC,EAAA6b,EAGAC,EACAC,EAHAxT,EAAAD,EAAAC,MACAiT,EAAAI,EAAAJ,QAGAQ,GAAA,CAGA,KAAAhvD,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CACtC,GAAAqN,GAAAivC,EAAAt8C,EAEA,MAAAqN,EAAAg3C,YAAA1sC,MAIAtK,EAAAq4C,OAAAU,IAAApvC,EAAAukC,EAAAmK,OAAA5oB,IAAA9lB,GAAA3J,EAAAq4C,OAAA5oB,IAAA9lB,EAAAukC,EAAAmK,OAAAU,IAAApvC,GACA3J,EAAAq4C,OAAAU,IAAAnvC,EAAAskC,EAAAmK,OAAA5oB,IAAA7lB,GAAA5J,EAAAq4C,OAAA5oB,IAAA7lB,EAAAskC,EAAAmK,OAAAU,IAAAnvC,GADA,CAIA,GAAAg4C,GAAAZ,EAAAa,WAAAN,EAAAvhD,EAGA,KAAAA,EAAA8hD,QAAAF,EAAAlnD,KAAAsF,EAAA8hD,OAAApnD,IAAA4P,EAAA,CAGAtK,EAAA8hD,SAAAx3C,IACAtK,EAAA8hD,OAAAF,EAEA,IAAAG,GAAAf,EAAAgB,aAAAJ,EAAA5hD,EAAA8hD,OAIA,KAAAnc,EAAAoc,EAAAE,SAA0Ctc,GAAAoc,EAAAG,OAAqBvc,IAC/D,IAAA6b,EAAAO,EAAAI,SAA8CX,GAAAO,EAAAK,OAAqBZ,IAAA,CACnEE,EAAAV,EAAAqB,aAAA1c,EAAA6b,GACAC,EAAAN,EAAAO,EAEA,IAAAY,GAAA3c,GAAAic,EAAAK,UAAAtc,GAAAic,EAAAM,QACAV,GAAAI,EAAAO,UAAAX,GAAAI,EAAAQ,OAEAG,EAAA5c,GAAA3lC,EAAA8hD,OAAAG,UAAAtc,GAAA3lC,EAAA8hD,OAAAI,QACAV,GAAAxhD,EAAA8hD,OAAAK,UAAAX,GAAAxhD,EAAA8hD,OAAAM,QAGAE,GAAAC,GACAA,GACAd,GACAT,EAAAwB,kBAAAjB,EAAAE,EAAAzhD,IAKAA,EAAA8hD,SAAAF,GAAAU,IAAAC,GAAAj4C,KACAm3C,IACAA,EAAAT,EAAAyB,cAAAtB,EAAAO,IACAV,EAAA0B,eAAAnB,EAAAE,EAAAzhD,IAMAA,EAAA8hD,OAAAF,EAGAD,GAAA,IAKAA,IACAJ,EAAAH,UAAAJ,EAAA2B,uBAAApB,KAQAP,EAAA/C,MAAA,SAAAsD,GACAA,EAAAJ,WACAI,EAAA5B,SACA4B,EAAAH,cAWAJ,EAAAgB,aAAA,SAAAY,EAAAC,GACA,GAAAZ,GAAAzyB,KAAAC,IAAAmzB,EAAAX,SAAAY,EAAAZ,UACAC,EAAA1yB,KAAAupB,IAAA6J,EAAAV,OAAAW,EAAAX,QACAC,EAAA3yB,KAAAC,IAAAmzB,EAAAT,SAAAU,EAAAV,UACAC,EAAA5yB,KAAAupB,IAAA6J,EAAAR,OAAAS,EAAAT,OAEA,OAAApB,GAAA8B,cAAAb,EAAAC,EAAAC,EAAAC,IAWApB,EAAAa,WAAA,SAAAN,EAAAvhD,GACA,GAAAq4C,GAAAr4C,EAAAq4C,OACA4J,EAAAzyB,KAAAwd,MAAAqL,EAAA5oB,IAAA9lB,EAAA43C,EAAAF,aACAa,EAAA1yB,KAAAwd,MAAAqL,EAAAU,IAAApvC,EAAA43C,EAAAF,aACAc,EAAA3yB,KAAAwd,MAAAqL,EAAA5oB,IAAA7lB,EAAA23C,EAAAD,cACAc,EAAA5yB,KAAAwd,MAAAqL,EAAAU,IAAAnvC,EAAA23C,EAAAD,aAEA,OAAAN,GAAA8B,cAAAb,EAAAC,EAAAC,EAAAC,IAaApB,EAAA8B,cAAA,SAAAb,EAAAC,EAAAC,EAAAC,GACA,OACA1nD,GAAAunD,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAAC,EACAH,WACAC,SACAC,WACAC,WAYApB,EAAAqB,aAAA,SAAAU,EAAAvB,GACA,UAAAuB,EAAA,IAAAvB,GAWAR,EAAAyB,cAAA,SAAAtB,EAAAO,GAEA,MADAP,GAAAO,OAYAV,EAAA0B,eAAA,SAAAnB,EAAAE,EAAAzhD,GAEA,OAAArN,GAAA,EAAuBA,EAAA8uD,EAAA7rD,OAAmBjD,IAAA,CAC1C,GAAAmtD,GAAA2B,EAAA9uD,EAEA,MAAAqN,EAAAtF,KAAAolD,EAAAplD,IAAAsF,EAAA0zC,UAAAoM,EAAApM,UAAA,CAKA,GAAA2M,GAAAd,EAAA7kD,GAAAsF,EAAA8/C,GACAQ,EAAAiB,EAAA5B,MAAAU,EAEAC,GACAA,EAAA,MAEAiB,EAAA5B,MAAAU,IAAArgD,EAAA8/C,EAAA,IAKA2B,EAAA5pD,KAAAmI,IAWAghD,EAAAwB,kBAAA,SAAAjB,EAAAE,EAAAzhD,GAEAyhD,EAAA3D,OAAArI,EAAAryC,QAAAq+C,EAAAzhD,GAAA,EAGA,QAAArN,GAAA,EAAuBA,EAAA8uD,EAAA7rD,OAAmBjD,IAAA,CAG1C,GAAAmtD,GAAA2B,EAAA9uD,GACA0tD,EAAAd,EAAA7kD,GAAAsF,EAAA8/C,GACAQ,EAAAiB,EAAA5B,MAAAU,EAEAC,KACAA,EAAA,SAWAU,EAAA2B,uBAAA,SAAApB,GACA,GAAAyB,GACA1C,EACAX,IAGAqD,GAAAvN,EAAArgD,KAAAmsD,EAAA5B,MAGA,QAAAr2C,GAAA,EAAuBA,EAAA05C,EAAAptD,OAAqB0T,IAC5Cg3C,EAAAiB,EAAA5B,MAAAqD,EAAA15C,IAIAg3C,EAAA,KACAX,EAAA9nD,KAAAyoD,SAEAiB,GAAA5B,MAAAqD,EAAA15C,GAIA,OAAAq2C,SAKG1D,iBAAA,GAAAgH,aAAA,EAAApC,SAAA,IAA8CqC,GAAA,SAAA7N,EAAA3iD,EAAAD,GAOjD,GAAA8sD,KAEA7sD,GAAAD,QAAA8sD,CAEA,IAAAP,GAAA3J,EAAA,cAEA,WASAkK,EAAA7T,OAAA,SAAA8U,EAAA2C,GACA,GAAAtD,GAAAW,EAAAX,MACAC,EAAAU,EAAAV,MACAsD,EAAA5C,EAAA4C,QACAC,EAAA7C,EAAA6C,QAEA/C,GACA5lD,GAAA6kD,EAAA7kD,GAAAmlD,EAAAC,GACAD,QACAC,QACAwD,YACAC,kBACAC,WAAA,EACAjD,UAAA,EACAxJ,SAAA8I,EAAA9I,UAAA+I,EAAA/I,SACA0M,YAAAN,EACAO,YAAAP,EACAtJ,YAAAuJ,EAAAvJ,YAAAwJ,EAAAxJ,YACArF,SAAAhlB,KAAAC,IAAA2zB,EAAA5O,SAAA6O,EAAA7O,UACA4C,eAAA5nB,KAAAupB,IAAAqK,EAAAhM,eAAAiM,EAAAjM,gBACA7C,YAAA/kB,KAAAupB,IAAAqK,EAAA7O,YAAA8O,EAAA9O,aACAmD,KAAAloB,KAAAupB,IAAAqK,EAAA1L,KAAA2L,EAAA3L,MAKA,OAFA6H,GAAAvQ,OAAAsR,EAAAE,EAAA2C,GAEA7C,GAUAf,EAAAvQ,OAAA,SAAAsR,EAAAE,EAAA2C,GACA,GAAAG,GAAAhD,EAAAgD,SACAK,EAAAnD,EAAAmD,SACAJ,EAAAjD,EAAAiD,eACAH,EAAA5C,EAAA4C,QACAC,EAAA7C,EAAA6C,OAUA,IARA/C,EAAAE,YACAF,EAAAzG,YAAAuJ,EAAAvJ,YAAAwJ,EAAAxJ,YACAyG,EAAA9L,SAAAhlB,KAAAC,IAAA2zB,EAAA5O,SAAA6O,EAAA7O,UACA8L,EAAAlJ,eAAA5nB,KAAAupB,IAAAqK,EAAAhM,eAAAiM,EAAAjM,gBACAkJ,EAAA/L,YAAA/kB,KAAAupB,IAAAqK,EAAA7O,YAAA8O,EAAA9O,aACA+L,EAAA5I,KAAAloB,KAAAupB,IAAAqK,EAAA1L,KAAA2L,EAAA3L,MACA6L,EAAA3tD,OAAA,EAEA4qD,EAAAE,SAAA,CACA,OAAA/tD,GAAA,EAA2BA,EAAAgxD,EAAA/tD,OAAqBjD,IAAA,CAChD,GAAA4M,GAAAokD,EAAAhxD,GACAixD,EAAA5E,EAAAtkD,GAAA6E,GACAskD,EAAAP,EAAAM,EAEAC,GACAN,EAAA1rD,KAAAgsD,GAEAN,EAAA1rD,KAAAyrD,EAAAM,GAAA5E,EAAAtT,OAAAnsC,IAIA+gD,EAAAkD,WAAAhD,EAAAsD,MACAvE,EAAAwE,UAAAzD,GAAA,EAAA6C,QAEA,IAAA7C,EAAAC,UACAhB,EAAAwE,UAAAzD,GAAA,EAAA6C,IAWA5D,EAAAwE,UAAA,SAAAzD,EAAAC,EAAA4C,GACA5C,GACAD,EAAAC,UAAA,EACAD,EAAAoD,YAAAP,IAEA7C,EAAAC,UAAA,EACAD,EAAAiD,eAAA3tD,OAAA,IAWA2pD,EAAA7kD,GAAA,SAAAmlD,EAAAC,GACA,MAAAD,GAAAnlD,GAAAolD,EAAAplD,GACA,IAAAmlD,EAAAnlD,GAAA,IAAAolD,EAAAplD,GAEA,IAAAolD,EAAAplD,GAAA,IAAAmlD,EAAAnlD,SAMGspD,YAAA,IAAc/nB,GAAA,SAAAoZ,EAAA3iD,EAAAD,GAOjB,GAAAwxD,KAEAvxD,GAAAD,QAAAwxD,CAEA,IAAA1E,GAAAlK,EAAA,UACAI,EAAAJ,EAAA,mBAEA,WAEA4O,EAAAC,iBAAA,IAQAD,EAAAvY,OAAA,SAAAlxC,GACA,MAAAi7C,GAAA/lB,QACAkwB,SACAhkD,QACAuoD,kBACAC,mBACAC,iBACS7pD,IAUTypD,EAAAjV,OAAA,SAAA2Q,EAAAH,EAAA2D,GACA,GAMA3C,GACAH,EACAC,EACA3tD,EATAyuD,EAAAzB,EAAA/jD,KACA8jD,EAAAC,EAAAC,MACAuE,EAAAxE,EAAAwE,eACAE,EAAA1E,EAAA0E,aACAD,EAAAzE,EAAAyE,gBACAE,IAWA,KAJAH,EAAAvuD,OAAA,EACAyuD,EAAAzuD,OAAA,EACAwuD,EAAAxuD,OAAA,EAEAjD,EAAA,EAAmBA,EAAA6sD,EAAA5pD,OAAuBjD,IAC1C6tD,EAAAhB,EAAA7sD,GAEA6tD,EAAAE,WACAL,EAAAd,EAAA7kD,GAAA8lD,EAAAX,MAAAW,EAAAV,OACAwE,EAAAzsD,KAAAwoD,GAEAC,EAAAZ,EAAAW,GAEAC,GAEAA,EAAAC,SAEA6D,EAAAvsD,KAAAyoD,GAGA6D,EAAAtsD,KAAAyoD,GAIAf,EAAAvQ,OAAAsR,EAAAE,EAAA2C,KAGA7C,EAAAf,EAAA7T,OAAA8U,EAAA2C,GACAzD,EAAAW,GAAAC,EAGA6D,EAAAtsD,KAAAyoD,GACAc,EAAAvpD,KAAAyoD,IAMA,KAAA3tD,EAAA,EAAmBA,EAAAyuD,EAAAxrD,OAAsBjD,IACzC2tD,EAAAc,EAAAzuD,GACA2tD,EAAAC,WAAA,IAAA9K,EAAAryC,QAAAkhD,EAAAhE,EAAA5lD,MACA6kD,EAAAwE,UAAAzD,GAAA,EAAA6C,GACAkB,EAAAxsD,KAAAyoD,KAWA2D,EAAAM,UAAA,SAAA5E,EAAAwD,GACA,GAGA7C,GACAE,EACAgE,EACA7xD,EANAyuD,EAAAzB,EAAA/jD,KACA8jD,EAAAC,EAAAC,MACA6E,IAMA,KAAA9xD,EAAA,EAAmBA,EAAAyuD,EAAAxrD,OAAsBjD,IACzC2tD,EAAAc,EAAAzuD,GACA6tD,EAAAF,EAAAE,UAGAA,EAAAX,MAAA7I,YAAAwJ,EAAAV,MAAA9I,WACAsJ,EAAAoD,YAAAP,EAKAA,EAAA7C,EAAAoD,YAAAO,EAAAC,kBACAO,EAAA5sD,KAAAlF,EAKA,KAAAA,EAAA,EAAmBA,EAAA8xD,EAAA7uD,OAA4BjD,IAC/C6xD,EAAAC,EAAA9xD,KACA2tD,EAAAc,EAAAoD,SACA9E,GAAAY,EAAA5lD,IACA0mD,EAAAtD,OAAA0G,EAAA,IAUAP,EAAAhG,MAAA,SAAA0B,GAMA,MALAA,GAAAC,SACAD,EAAA/jD,KAAAhG,OAAA,EACA+pD,EAAAwE,eAAAvuD,OAAA,EACA+pD,EAAAyE,gBAAAxuD,OAAA,EACA+pD,EAAA0E,aAAAzuD,OAAA,EACA+pD,QAKG1D,iBAAA,GAAA4E,SAAA,IAA+B3kB,GAAA,SAAAmZ,EAAA3iD,EAAAD,GASlC,GAAAiyD,KAEAhyD,GAAAD,QAAAiyD,CAEA,IAAAnP,GAAAF,EAAA,sBACAiK,EAAAjK,EAAA,SACAK,EAAAL,EAAA,sBACAtH,EAAAsH,EAAA,qBACAC,EAAAD,EAAA,yBAEA,WASAqP,EAAAjE,SAAA,SAAAzgD,EAAAivC,GAGA,OAFAuQ,MAEA7sD,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAktD,GAAA5Q,EAAAt8C,EAEA,IAAA+iD,EAAAsK,SAAAH,EAAAxH,OAAAr4C,EAAAq4C,QACA,OAAA4H,GAAA,IAAAJ,EAAA57C,MAAArO,OAAA,IAA8DqqD,EAAAJ,EAAA57C,MAAArO,OAAwBqqD,IAAA,CACtF,GAAAtG,GAAAkG,EAAA57C,MAAAg8C,EAEA,IAAAvK,EAAAsK,SAAArG,EAAAtB,OAAAr4C,EAAAq4C,QAAA,CACA,GAAAmI,GAAAlB,EAAAmB,SAAA9G,EAAA35C,EAEA,IAAAwgD,EAAAE,SAAA,CACAlB,EAAA3nD,KAAA2oD,EACA,UAOA,MAAAhB,IAYAkF,EAAAC,IAAA,SAAA1V,EAAA2V,EAAAC,EAAAC,GACAA,KAAA,MASA,QAPAC,GAAAxP,EAAAY,MAAAyO,EAAAC,GACAG,EAAAzP,EAAAoF,UAAApF,EAAAkF,IAAAmK,EAAAC,IACAI,EAAA,IAAAJ,EAAAl7C,EAAAi7C,EAAAj7C,GACAu7C,EAAA,IAAAL,EAAAj7C,EAAAg7C,EAAAh7C,GACA+6C,EAAA5W,EAAAoX,UAAAF,EAAAC,EAAAF,EAAAF,GAAqE3O,MAAA4O,IACrEvF,EAAAkF,EAAAjE,SAAAkE,EAAA1V,GAEAt8C,EAAA,EAAuBA,EAAA6sD,EAAA5pD,OAAuBjD,GAAA,GAC9C,GAAA6tD,GAAAhB,EAAA7sD,EACA6tD,GAAAxgD,KAAAwgD,EAAAV,MAAAU,EAAAX,MAGA,MAAAL,IAWAkF,EAAA5C,OAAA,SAAA7S,EAAAoJ,EAAA+M,GAGA,OAFA/kD,MAEA1N,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,GACAqtD,EAAAtK,EAAAsK,SAAAhgD,EAAAq4C,WACA2H,IAAAoF,IAAApF,GAAAoF,IACA/kD,EAAAxI,KAAAmI,GAGA,MAAAK,IAUAqkD,EAAA5J,MAAA,SAAA7L,EAAA6L,GAGA,OAFAz6C,MAEA1N,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAEA,IAAA+iD,EAAA3K,SAAA/qC,EAAAq4C,OAAAyC,GACA,OAAAmF,GAAA,IAAAjgD,EAAAiE,MAAArO,OAAA,IAA6DqqD,EAAAjgD,EAAAiE,MAAArO,OAAuBqqD,IAAA,CACpF,GAAAtG,GAAA35C,EAAAiE,MAAAg8C,EAEA,IAAAvK,EAAA3K,SAAA4O,EAAAtB,OAAAyC,IACAxF,EAAAvK,SAAA4O,EAAAvD,SAAA0E,GAAA,CACAz6C,EAAAxI,KAAAmI,EACA,SAMA,MAAAK,SAKGglD,oBAAA,GAAAjJ,qBAAA,GAAAC,qBAAA,GAAAC,uBAAA,GAAAwE,QAAA,KAA4GwE,IAAA,SAAAjQ,EAAA3iD,EAAAD,GAO/G,GAAA8yD,KAEA7yD,GAAAD,QAAA8yD,CAEA,IAAAjQ,GAAAD,EAAA,wBACAE,EAAAF,EAAA,sBACAI,EAAAJ,EAAA,kBACAK,EAAAL,EAAA,uBAEA,WAEAkQ,EAAAC,eAAA,EACAD,EAAAE,sBAAA,EACAF,EAAAG,gBAAA,GACAH,EAAAI,iBAAA,GACAJ,EAAAK,0BAAA,EAOAL,EAAAM,iBAAA,SAAAlG,GACA,GAAAhtD,GACA2tD,EACAwF,CAGA,KAAAnzD,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IACrC2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,WAGAuF,EAAAxF,EAAAiD,eAAA3tD,OACA0qD,EAAAE,UAAA4C,QAAA1M,eAAAoP,EACAxF,EAAAE,UAAA6C,QAAA3M,eAAAoP,IAUAP,EAAAQ,cAAA,SAAApG,EAAAhI,GACA,GAAAhlD,GACA2tD,EACAE,EACAX,EACAC,EACAkG,EACAC,EACAC,EACA1P,EAEA2P,EAAA5Q,EAAA6Q,MAAA,GACAC,EAAA9Q,EAAA6Q,MAAA,GACAE,EAAA/Q,EAAA6Q,MAAA,GACAG,EAAAhR,EAAA6Q,MAAA,EAGA,KAAAzzD,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IACrC2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,WAAAD,EAAAvJ,WAGAyJ,EAAAF,EAAAE,UACAX,EAAAW,EAAA4C,QACAtD,EAAAU,EAAA6C,QACA2C,EAAAxF,EAAAwF,OAGAC,EAAA1Q,EAAAkF,IAAAlF,EAAAlqB,IAAAy0B,EAAAtJ,gBAAAsJ,EAAAlQ,SAAAuW,GACA5Q,EAAAlqB,IAAAw0B,EAAArJ,gBACAjB,EAAAkF,IAAAqF,EAAAlQ,SAAA4Q,EAAAgG,YAAAH,GAAAC,GAAAC,GAEAjG,EAAAkD,WAAAjO,EAAAkR,IAAAT,EAAAC,GAGA,KAAAtzD,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IACrC2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,WAAAD,EAAAvJ,WAGAyJ,EAAAF,EAAAE,UACAX,EAAAW,EAAA4C,QACAtD,EAAAU,EAAA6C,QACA2C,EAAAxF,EAAAwF,OACAxP,GAAA8J,EAAAkD,WAAAlD,EAAA5I,MAAAC,GAEAkI,EAAAnM,UAAAoM,EAAApM,YACA8C,GAAA,GAEAqJ,EAAAnM,UAAAmM,EAAA7I,aACAkP,EAAAX,EAAAG,gBAAA7F,EAAAnJ,cACAmJ,EAAArJ,gBAAA7sC,GAAAq8C,EAAAr8C,EAAA6sC,EAAA0P,EACArG,EAAArJ,gBAAA5sC,GAAAo8C,EAAAp8C,EAAA4sC,EAAA0P,GAGApG,EAAApM,UAAAoM,EAAA9I,aACAkP,EAAAX,EAAAG,gBAAA5F,EAAApJ,cACAoJ,EAAAtJ,gBAAA7sC,GAAAq8C,EAAAr8C,EAAA6sC,EAAA0P,EACApG,EAAAtJ,gBAAA5sC,GAAAo8C,EAAAp8C,EAAA4sC,EAAA0P,KAUAX,EAAAmB,kBAAA,SAAAzX,GACA,OAAAt8C,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAKA,IAFAqN,EAAA02C,cAAA,EAEA,IAAA12C,EAAAw2C,gBAAA7sC,GAAA,IAAA3J,EAAAw2C,gBAAA5sC,EAAA,CAEA,OAAAq2C,GAAA,EAA+BA,EAAAjgD,EAAAiE,MAAArO,OAAuBqqD,IAAA,CACtD,GAAAtG,GAAA35C,EAAAiE,MAAAg8C,EACA3K,GAAA2E,UAAAN,EAAAvD,SAAAp2C,EAAAw2C,iBACAd,EAAA1G,OAAA2K,EAAAtB,OAAAsB,EAAAvD,SAAAp2C,EAAA62C,UACA8C,EAAA/J,SAAAjmC,GAAA3J,EAAAw2C,gBAAA7sC,EACAgwC,EAAA/J,SAAAhmC,GAAA5J,EAAAw2C,gBAAA5sC,EAIA5J,EAAAs4C,aAAA3uC,GAAA3J,EAAAw2C,gBAAA7sC,EACA3J,EAAAs4C,aAAA1uC,GAAA5J,EAAAw2C,gBAAA5sC,EAEA2rC,EAAAkR,IAAAzmD,EAAAw2C,gBAAAx2C,EAAA62C,UAAA,GAEA72C,EAAAw2C,gBAAA7sC,EAAA,EACA3J,EAAAw2C,gBAAA5sC,EAAA,IAGA5J,EAAAw2C,gBAAA7sC,GAAA47C,EAAAI,iBACA3lD,EAAAw2C,gBAAA5sC,GAAA27C,EAAAI,qBAWAJ,EAAAoB,iBAAA,SAAAhH,GACA,GAAAhtD,GACAstD,EACAK,EACAgD,EACA9C,EACAX,EACAC,EACAkG,EACAY,EACA/C,EACAgD,EACA3H,EACAC,EACAljC,EACA6qC,EAAAvR,EAAA6Q,MAAA,GACAD,EAAA5Q,EAAA6Q,MAAA,EAEA,KAAAzzD,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IAGrC,GAFA2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,WAAAD,EAAAvJ,SAWA,IARAuM,EAAAhD,EAAAiD,eACA/C,EAAAF,EAAAE,UACAX,EAAAW,EAAA4C,QACAtD,EAAAU,EAAA6C,QACA2C,EAAAxF,EAAAwF,OACAY,EAAApG,EAAAoG,QAGA3G,EAAA,EAAuBA,EAAAqD,EAAA1tD,OAAqBqqD,IAC5C4D,EAAAP,EAAArD,GACA4G,EAAAhD,EAAA5E,OACAC,EAAA2E,EAAA3E,cACAC,EAAA0E,EAAA1E,eAEA,IAAAD,GAAA,IAAAC,IAEA2H,EAAAn9C,EAAAq8C,EAAAr8C,EAAAu1C,EAAA0H,EAAAj9C,EAAAw1C,EACA2H,EAAAl9C,EAAAo8C,EAAAp8C,EAAAs1C,EAAA0H,EAAAh9C,EAAAu1C,EAGAU,EAAAnM,UAAAmM,EAAA7I,aACA/6B,EAAAs5B,EAAAkF,IAAAoM,EAAAhH,EAAAjQ,SAAAuW,GACAtG,EAAAvH,aAAA3uC,GAAAm9C,EAAAn9C,EAAAk2C,EAAAhG,YACAgG,EAAAvH,aAAA1uC,GAAAk9C,EAAAl9C,EAAAi2C,EAAAhG,YACAgG,EAAAtH,WAAAhD,EAAAwR,MAAA9qC,EAAA6qC,GAAAjH,EAAA/F,gBAGAgG,EAAApM,UAAAoM,EAAA9I,aACA/6B,EAAAs5B,EAAAkF,IAAAoM,EAAA/G,EAAAlQ,SAAAuW,GACArG,EAAAxH,aAAA3uC,GAAAm9C,EAAAn9C,EAAAm2C,EAAAjG,YACAiG,EAAAxH,aAAA1uC,GAAAk9C,EAAAl9C,EAAAk2C,EAAAjG,YACAiG,EAAAvH,WAAAhD,EAAAwR,MAAA9qC,EAAA6qC,GAAAhH,EAAAhG,kBAaAyL,EAAAyB,cAAA,SAAArH,EAAAhI,GASA,OARAsP,GAAAtP,IACAmP,EAAAvR,EAAA6Q,MAAA,GACAD,EAAA5Q,EAAA6Q,MAAA,GACAC,EAAA9Q,EAAA6Q,MAAA,GACAE,EAAA/Q,EAAA6Q,MAAA,GACAG,EAAAhR,EAAA6Q,MAAA,GACAc,EAAA3R,EAAA6Q,MAAA,GAEAzzD,EAAA,EAAuBA,EAAAgtD,EAAA/pD,OAAkBjD,IAAA,CACzC,GAAA2tD,GAAAX,EAAAhtD,EAEA,IAAA2tD,EAAAC,WAAAD,EAAAvJ,SAAA,CAGA,GAAAyJ,GAAAF,EAAAE,UACAX,EAAAW,EAAA4C,QACAtD,EAAAU,EAAA6C,QACA2C,EAAAxF,EAAAwF,OACAY,EAAApG,EAAAoG,QACAtD,EAAAhD,EAAAiD,eACA2C,EAAA,EAAA5C,EAAA1tD,MAGAiqD,GAAAhJ,SAAAltC,EAAAk2C,EAAAjQ,SAAAjmC,EAAAk2C,EAAAvH,aAAA3uC,EACAk2C,EAAAhJ,SAAAjtC,EAAAi2C,EAAAjQ,SAAAhmC,EAAAi2C,EAAAvH,aAAA1uC,EACAk2C,EAAAjJ,SAAAltC,EAAAm2C,EAAAlQ,SAAAjmC,EAAAm2C,EAAAxH,aAAA3uC,EACAm2C,EAAAjJ,SAAAjtC,EAAAk2C,EAAAlQ,SAAAhmC,EAAAk2C,EAAAxH,aAAA1uC,EACAi2C,EAAA/I,gBAAA+I,EAAA1J,MAAA0J,EAAAtH,UACAuH,EAAAhJ,gBAAAgJ,EAAA3J,MAAA2J,EAAAvH,SAGA,QAAA0H,GAAA,EAA2BA,EAAAqD,EAAA1tD,OAAqBqqD,IAAA,CAChD,GAAA4D,GAAAP,EAAArD,GACA4G,EAAAhD,EAAA5E,OACAkI,EAAA5R,EAAAkF,IAAAoM,EAAAhH,EAAAjQ,SAAAuW,GACAiB,EAAA7R,EAAAkF,IAAAoM,EAAA/G,EAAAlQ,SAAAyW,GACAgB,EAAA9R,EAAAlqB,IAAAw0B,EAAAhJ,SAAAtB,EAAAwG,KAAAxG,EAAA+R,KAAAH,GAAAtH,EAAA/I,iBAAAwP,GACAiB,EAAAhS,EAAAlqB,IAAAy0B,EAAAjJ,SAAAtB,EAAAwG,KAAAxG,EAAA+R,KAAAF,GAAAtH,EAAAhJ,iBAAAyP,GACAiB,EAAAjS,EAAAkF,IAAA4M,EAAAE,EAAAL,GACAO,EAAAlS,EAAAkR,IAAAT,EAAAwB,GAEAE,EAAAnS,EAAAkR,IAAAG,EAAAY,GACAG,EAAAn4B,KAAAsgB,IAAA4X,GACAE,EAAAnS,EAAAoS,KAAAH,GAGAxI,GAAA,EAAAoB,EAAA/L,aAAAkT,EACAK,EAAArS,EAAAsS,MAAAzH,EAAAkD,WAAAiE,EAAA,KAAAlC,EAAAK,0BAGAzG,EAAAuI,EACAM,EAAA3lB,GAEAslB,GAAArH,EAAA9L,SAAA8L,EAAAlJ,eAAA0Q,EAAAb,IACAe,EAAAL,EACAxI,EAAA1J,EAAAsS,MACAzH,EAAA9L,SAAAoT,EAAAX,GACAe,KAKA,IAAAC,GAAA1S,EAAAwR,MAAAI,EAAAnB,GACAkC,EAAA3S,EAAAwR,MAAAK,EAAApB,GACAmC,EAAAjC,GAAArG,EAAAhG,YAAAiG,EAAAjG,YAAAgG,EAAA/F,eAAAmO,IAAAnI,EAAAhG,eAAAoO,IAMA,IAJAhJ,GAAAiJ,EACAhJ,GAAAgJ,EAGAV,EAAA,GAAAA,IAAAlC,EAAAC,eAAAyB,EAEApD,EAAA3E,cAAA,MACiB,CAGjB,GAAAkJ,GAAAvE,EAAA3E,aACA2E,GAAA3E,cAAA1vB,KAAAC,IAAAo0B,EAAA3E,gBAAA,GACAA,EAAA2E,EAAA3E,cAAAkJ,EAIA,GAAAV,IAAAnC,EAAAE,sBAAAwB,EAEApD,EAAA1E,eAAA,MACiB,CAGjB,GAAAkJ,GAAAxE,EAAA1E,cACA0E,GAAA1E,eAAA1J,EAAAsS,MAAAlE,EAAA1E,kBAAA6I,KACA7I,EAAA0E,EAAA1E,eAAAkJ,EAIAvB,EAAAn9C,EAAAq8C,EAAAr8C,EAAAu1C,EAAA0H,EAAAj9C,EAAAw1C,EACA2H,EAAAl9C,EAAAo8C,EAAAp8C,EAAAs1C,EAAA0H,EAAAh9C,EAAAu1C,EAGAU,EAAAnM,UAAAmM,EAAA7I,aACA6I,EAAAvH,aAAA3uC,GAAAm9C,EAAAn9C,EAAAk2C,EAAAhG,YACAgG,EAAAvH,aAAA1uC,GAAAk9C,EAAAl9C,EAAAi2C,EAAAhG,YACAgG,EAAAtH,WAAAhD,EAAAwR,MAAAI,EAAAL,GAAAjH,EAAA/F,gBAGAgG,EAAApM,UAAAoM,EAAA9I,aACA8I,EAAAxH,aAAA3uC,GAAAm9C,EAAAn9C,EAAAm2C,EAAAjG,YACAiG,EAAAxH,aAAA1uC,GAAAk9C,EAAAl9C,EAAAk2C,EAAAjG,YACAiG,EAAAvH,WAAAhD,EAAAwR,MAAAK,EAAAN,GAAAhH,EAAAhG,yBAQGmC,iBAAA,GAAAG,qBAAA,GAAAC,qBAAA,GAAAC,uBAAA,KAA8FgM,IAAA,SAAAjT,EAAA3iD,EAAAD,GASjG,GAAA6sD,KAEA5sD,GAAAD,QAAA6sD,CAEA,IAAAhK,GAAAD,EAAA,wBACAE,EAAAF,EAAA,uBAEA,WAUAiK,EAAAmB,SAAA,SAAAZ,EAAAC,EAAAM,GACA,GAAAmI,GACAC,EACAC,EACAjI,EACAkI,GAAA,CAEA,IAAAtI,EAAA,CAEA,GAAAgD,GAAAvD,EAAArH,OACA6K,EAAAvD,EAAAtH,OACAvB,EAAAmM,EAAAzM,MAAAyM,EAAAzM,MAAAyM,EAAAxM,aAAAwM,EAAAxM,aACAyM,EAAA1M,MAAA0M,EAAA1M,MAAA0M,EAAAzM,aAAAyM,EAAAzM,YAIA8R,GAAAtI,KAAAM,UAAAzJ,EAAA,GAGAuJ,EAAAJ,MAEAI,IAAyBE,UAAA,EAAAb,QAAAC,QAGzB,IAAAM,GAAAsI,EAAA,CAGA,GAAAC,GAAAnI,EAAAoI,SACAC,EAAAF,IAAA9I,EAAAC,EAAAD,EACAnH,GAAAiQ,EAAAjQ,KAAA0H,EAAA0I,YAKA,IAHAL,EAAAnJ,EAAAyJ,aAAAJ,EAAAvS,SAAAyS,EAAAzS,SAAAsC,GACA8H,EAAAwI,QAAA,EAEAP,EAAAQ,SAAA,EAEA,MADAzI,GAAAE,UAAA,EACAF,MAES,CAKT,GAFA+H,EAAAjJ,EAAAyJ,aAAAlJ,EAAAzJ,SAAA0J,EAAA1J,SAAAyJ,EAAAnH,MAEA6P,EAAAU,SAAA,EAEA,MADAzI,GAAAE,UAAA,EACAF,CAKA,IAFAgI,EAAAlJ,EAAAyJ,aAAAjJ,EAAA1J,SAAAyJ,EAAAzJ,SAAA0J,EAAApH,MAEA8P,EAAAS,SAAA,EAEA,MADAzI,GAAAE,UAAA,EACAF,CAGA+H,GAAAU,QAAAT,EAAAS,SACAR,EAAAF,EACA/H,EAAAoI,SAAA/I,IAEA4I,EAAAD,EACAhI,EAAAoI,SAAA9I,GAIAU,EAAAsI,WAAAL,EAAAK,WAGAtI,EAAAX,QAAAnlD,GAAAolD,EAAAplD,GAAAmlD,EAAAC,EACAU,EAAAV,MAAAD,EAAAnlD,GAAAolD,EAAAplD,GAAAolD,EAAAD,EACAW,EAAAE,UAAA,EACAF,EAAAsD,MAAA2E,EAAAQ,QACAzI,EAAA4C,QAAA5C,EAAAX,MAAArH,OACAgI,EAAA6C,QAAA7C,EAAAV,MAAAtH,OAEAqH,EAAAW,EAAAX,MACAC,EAAAU,EAAAV,MAGAvK,EAAAkR,IAAAgC,EAAAS,KAAA3T,EAAAkF,IAAAqF,EAAAlQ,SAAAiQ,EAAAjQ,WAAA,EACA4Q,EAAAwF,QACAr8C,EAAA8+C,EAAAS,KAAAv/C,EACAC,EAAA6+C,EAAAS,KAAAt/C,GAGA42C,EAAAwF,QACAr8C,GAAA8+C,EAAAS,KAAAv/C,EACAC,GAAA6+C,EAAAS,KAAAt/C,GAIA42C,EAAAoG,QAAArR,EAAA+R,KAAA9G,EAAAwF,QAEAxF,EAAAgG,YAAAhG,EAAAgG,gBACAhG,EAAAgG,YAAA78C,EAAA62C,EAAAwF,OAAAr8C,EAAA62C,EAAAsD,MACAtD,EAAAgG,YAAA58C,EAAA42C,EAAAwF,OAAAp8C,EAAA42C,EAAAsD,KAGA,IAAAqF,GAAA7J,EAAA8J,cAAAvJ,EAAAC,EAAAU,EAAAwF,QACArC,IAUA,IAPArO,EAAAvK,SAAA8U,EAAAzJ,SAAA+S,EAAA,KACAxF,EAAA9rD,KAAAsxD,EAAA,IAEA7T,EAAAvK,SAAA8U,EAAAzJ,SAAA+S,EAAA,KACAxF,EAAA9rD,KAAAsxD,EAAA,IAGAxF,EAAA/tD,OAAA,GACA,GAAAyzD,GAAA/J,EAAA8J,cAAAtJ,EAAAD,EAAAtK,EAAA+T,IAAA9I,EAAAwF,QAEA1Q,GAAAvK,SAAA+U,EAAA1J,SAAAiT,EAAA,KACA1F,EAAA9rD,KAAAwxD,EAAA,IAEA1F,EAAA/tD,OAAA,GAAA0/C,EAAAvK,SAAA+U,EAAA1J,SAAAiT,EAAA,KACA1F,EAAA9rD,KAAAwxD,EAAA,IASA,MALA1F,GAAA/tD,OAAA,IACA+tD,GAAAwF,EAAA,KAEA3I,EAAAmD,WAEAnD,GAYAlB,EAAAyJ,aAAA,SAAAM,EAAAF,EAAAzQ,GAOA,OAHAuQ,GACAC,EAJAK,EAAAhU,EAAA6Q,MAAA,GACAoD,EAAAjU,EAAA6Q,MAAA,GACA/lD,GAAsB4oD,QAAAQ,OAAAC,WAItB/2D,EAAA,EAAuBA,EAAA+lD,EAAA9iD,OAAiBjD,IAAA,CAQxC,GAPAu2D,EAAAxQ,EAAA/lD,GAEA2sD,EAAAqK,eAAAJ,EAAAF,EAAAH,GACA5J,EAAAqK,eAAAH,EAAAL,EAAAD,IAEAD,EAAAz5B,KAAAC,IAAA85B,EAAAxQ,IAAAyQ,EAAA/5B,IAAA+5B,EAAAzQ,IAAAwQ,EAAA95B,OAEA,EAEA,MADApvB,GAAA4oD,UACA5oD,CAGA4oD,GAAA5oD,EAAA4oD,UACA5oD,EAAA4oD,UACA5oD,EAAA6oD,OACA7oD,EAAAyoD,WAAAn2D,GAIA,MAAA0N,IAWAi/C,EAAAqK,eAAA,SAAAC,EAAAxT,EAAA8S,GAIA,OAHAz5B,GAAA8lB,EAAAkR,IAAArQ,EAAA,GAAA8S,GACAnQ,EAAAtpB,EAEA98B,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,GAAA,GAC5C,GAAA8zD,GAAAlR,EAAAkR,IAAArQ,EAAAzjD,GAAAu2D,EAEAzC,GAAA1N,EACAA,EAAA0N,EACaA,EAAAh3B,IACbA,EAAAg3B,GAIAmD,EAAAn6B,MACAm6B,EAAA7Q,OAYAuG,EAAA8J,cAAA,SAAAvJ,EAAAC,EAAAkG,GAWA,OANA6D,GACA5K,EACA6K,EACAC,EAPAC,EAAAP,OAAAC,UACAO,EAAA1U,EAAA6Q,MAAA,GACAhQ,EAAA0J,EAAA1J,SACA8T,EAAArK,EAAAjQ,SAOAj9C,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5CssD,EAAA7I,EAAAzjD,GACAs3D,EAAAtgD,EAAAs1C,EAAAt1C,EAAAugD,EAAAvgD,EACAsgD,EAAArgD,EAAAq1C,EAAAr1C,EAAAsgD,EAAAtgD,GACAigD,GAAAtU,EAAAkR,IAAAT,EAAAiE,IAEAD,IACAA,EAAAH,EACAC,EAAA7K,EAqBA,OAfAA,GAAA7I,EADA0T,EAAAttD,MAAA,KAAAstD,EAAAttD,MAAA,EAAA45C,EAAAxgD,OAAA,GAEAq0D,EAAAtgD,EAAAs1C,EAAAt1C,EAAAugD,EAAAvgD,EACAsgD,EAAArgD,EAAAq1C,EAAAr1C,EAAAsgD,EAAAtgD,EACAogD,GAAAzU,EAAAkR,IAAAT,EAAAiE,GACAF,EAAA9K,EAGAA,EAAA7I,GADA0T,EAAAttD,MAAA,GAAA45C,EAAAxgD,QAEAq0D,EAAAtgD,EAAAs1C,EAAAt1C,EAAAugD,EAAAvgD,EACAsgD,EAAArgD,EAAAq1C,EAAAr1C,EAAAsgD,EAAAtgD,EACAigD,GAAAtU,EAAAkR,IAAAT,EAAAiE,GACAJ,EAAAG,IACAD,EAAA9K,IAGA6K,EAAAC,SAKG1N,qBAAA,GAAAC,uBAAA,KAAkDngB,IAAA,SAAAkZ,EAAA3iD,EAAAD,GAWrD,GAAA03D,KAEAz3D,GAAAD,QAAA03D,CAEA,IAAA7U,GAAAD,EAAA,wBACAE,EAAAF,EAAA,sBACAG,EAAAH,EAAA,oBACAK,EAAAL,EAAA,sBACAM,EAAAN,EAAA,oBACAI,EAAAJ,EAAA,mBAEA,WAEA8U,EAAAC,SAAA,GACAD,EAAAE,cAAA,EACAF,EAAAG,WAAA,KAaAH,EAAAze,OAAA,SAAAlxC,GACA,GAAAm0C,GAAAn0C,CAGAm0C,GAAAkR,QAAAlR,EAAA4b,SACA5b,EAAA4b,QAAiC5gD,EAAA,EAAAC,EAAA,IACjC+kC,EAAAmR,QAAAnR,EAAA6b,SACA7b,EAAA6b,QAAiC7gD,EAAA,EAAAC,EAAA,GAGjC,IAAA6gD,GAAA9b,EAAAkR,MAAAtK,EAAAlqB,IAAAsjB,EAAAkR,MAAAjQ,SAAAjB,EAAA4b,QAAA5b,EAAA4b,OACAG,EAAA/b,EAAAmR,MAAAvK,EAAAlqB,IAAAsjB,EAAAmR,MAAAlQ,SAAAjB,EAAA6b,QAAA7b,EAAA6b,OACA50D,EAAA2/C,EAAAoF,UAAApF,EAAAkF,IAAAgQ,EAAAC,GAEA/b,GAAA/4C,OAAA,oBAAA+4C,GAAA/4C,OAAA+4C,EAAA/4C,SAGA+4C,EAAAj0C,GAAAi0C,EAAAj0C,IAAA+6C,EAAAQ,SACAtH,EAAAO,MAAAP,EAAAO,OAAA,aACAP,EAAAnsC,KAAA,aACAmsC,EAAAC,UAAAD,EAAAC,YAAAD,EAAA/4C,OAAA,QACA+4C,EAAAgc,QAAAhc,EAAAgc,SAAA,EACAhc,EAAAic,iBAAAjc,EAAAic,kBAAA,EACAjc,EAAAkc,OAAAlc,EAAAkR,MAAAlR,EAAAkR,MAAA1J,MAAAxH,EAAAkc,OACAlc,EAAAmc,OAAAnc,EAAAmR,MAAAnR,EAAAmR,MAAA3J,MAAAxH,EAAAmc,OACAnc,EAAAuH,SAGA,IAAAzvC,IACAooC,SAAA,EACA8F,UAAA,EACAD,YAAA,UACAlyC,KAAA,OACAuoD,SAAA,EAYA,OATA,KAAApc,EAAA/4C,QAAA+4C,EAAAC,UAAA,IACAnoC,EAAAjE,KAAA,MACAiE,EAAAskD,SAAA,GACSpc,EAAAC,UAAA,KACTnoC,EAAAjE,KAAA,UAGAmsC,EAAAloC,OAAAgvC,EAAA/lB,OAAAjpB,EAAAkoC,EAAAloC,QAEAkoC,GASAwb,EAAAa,YAAA,SAAA/b,GACA,OAAAt8C,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,GAAA,GAC1C,GAAAqN,GAAAivC,EAAAt8C,GACAm0D,EAAA9mD,EAAAy2C,iBAEAz2C,GAAA0zC,UAAA,IAAAoT,EAAAn9C,GAAA,IAAAm9C,EAAAl9C,GAAA,IAAAk9C,EAAA3Q,QAIAn2C,EAAA4vC,SAAAjmC,GAAAm9C,EAAAn9C,EACA3J,EAAA4vC,SAAAhmC,GAAAk9C,EAAAl9C,EACA5J,EAAAm2C,OAAA2Q,EAAA3Q,SAWAgU,EAAAc,SAAA,SAAAtO,EAAAhF,GAEA,OAAAhlD,GAAA,EAAuBA,EAAAgqD,EAAA/mD,OAAwBjD,GAAA,GAC/C,GAAAg8C,GAAAgO,EAAAhqD,GACAu4D,GAAAvc,EAAAkR,OAAAlR,EAAAkR,OAAAlR,EAAAkR,MAAAnM,SACAyX,GAAAxc,EAAAmR,OAAAnR,EAAAmR,OAAAnR,EAAAmR,MAAApM,UAEAwX,GAAAC,IACAhB,EAAAiB,MAAAzO,EAAAhqD,GAAAglD,GAKA,IAAAhlD,EAAA,EAAmBA,EAAAgqD,EAAA/mD,OAAwBjD,GAAA,EAC3Cg8C,EAAAgO,EAAAhqD,GACAu4D,GAAAvc,EAAAkR,OAAAlR,EAAAkR,OAAAlR,EAAAkR,MAAAnM,SACAyX,GAAAxc,EAAAmR,OAAAnR,EAAAmR,OAAAnR,EAAAmR,MAAApM,SAEAwX,GAAAC,GACAhB,EAAAiB,MAAAzO,EAAAhqD,GAAAglD,IAYAwS,EAAAiB,MAAA,SAAAzc,EAAAgJ,GACA,GAAAkI,GAAAlR,EAAAkR,MACAC,EAAAnR,EAAAmR,MACAyK,EAAA5b,EAAA4b,OACAC,EAAA7b,EAAA6b,MAEA,IAAA3K,GAAAC,EAAA,CAIAD,MAAAnM,WACA6B,EAAAkD,OAAA8R,EAAA1K,EAAA1J,MAAAxH,EAAAkc,OAAAN,GACA5b,EAAAkc,OAAAhL,EAAA1J,OAIA2J,MAAApM,WACA6B,EAAAkD,OAAA+R,EAAA1K,EAAA3J,MAAAxH,EAAAmc,OAAAN,GACA7b,EAAAmc,OAAAhL,EAAA3J,MAGA,IAAAkV,GAAAd,EACAe,EAAAd,CAKA,IAHA3K,IAAAwL,EAAA9V,EAAAlqB,IAAAw0B,EAAAjQ,SAAA2a,IACAzK,IAAAwL,EAAA/V,EAAAlqB,IAAAy0B,EAAAlQ,SAAA4a,IAEAa,GAAAC,EAAA,CAGA,GAAA9Q,GAAAjF,EAAAkF,IAAA4Q,EAAAC,GACAC,EAAAhW,EAAAoF,UAAAH,EAGA+Q,GAAApB,EAAAG,aACAiB,EAAApB,EAAAG,WAIA,IAMA/T,GACA4R,EACAnC,EACAyB,EACAD,EAVAgE,GAAAD,EAAA5c,EAAA/4C,QAAA21D,EACA3c,EAAAD,EAAAC,UAAA,EAAAD,EAAAC,UAAA+I,EAAAhJ,EAAAC,UACA0H,EAAAf,EAAAwG,KAAAvB,EAAAgR,EAAA5c,GACA6c,GAAA5L,IAAAhG,YAAA,IAAAiG,IAAAjG,YAAA,GACA6R,GAAA7L,IAAA/F,eAAA,IAAAgG,IAAAhG,eAAA,GACA6R,EAAAF,EAAAC,CAOA,IAAA/c,EAAAgc,QAAA,CACA,GAAAiB,GAAArW,EAAA7J,QACAsa,GAAAzQ,EAAAyG,IAAAxB,EAAA+Q,GAEA/D,EAAAjS,EAAAkF,IACAqF,GAAAvK,EAAAkF,IAAAqF,EAAAlQ,SAAAkQ,EAAAxH,eAAAsT,EACA/L,GAAAtK,EAAAkF,IAAAoF,EAAAjQ,SAAAiQ,EAAAvH,eAAAsT,GAGAnE,EAAAlS,EAAAkR,IAAAT,EAAAwB,GAGA3H,MAAAnM,WACAyU,EAAAtI,EAAAhG,YAAA4R,EAGA5L,EAAApJ,kBAAA9sC,GAAA2sC,EAAA3sC,EAAAw+C,EACAtI,EAAApJ,kBAAA7sC,GAAA0sC,EAAA1sC,EAAAu+C,EAGAtI,EAAAjQ,SAAAjmC,GAAA2sC,EAAA3sC,EAAAw+C,EACAtI,EAAAjQ,SAAAhmC,GAAA0sC,EAAA1sC,EAAAu+C,EAGAxZ,EAAAgc,UACA9K,EAAAvH,aAAA3uC,GAAAglC,EAAAgc,QAAA3E,EAAAr8C,EAAA89C,EAAAU,EACAtI,EAAAvH,aAAA1uC,GAAA+kC,EAAAgc,QAAA3E,EAAAp8C,EAAA69C,EAAAU,GAIA5R,EAAAhB,EAAAwR,MAAAwD,EAAAjU,GAAAqV,EAAAxB,EAAAE,cAAAxK,EAAA/F,gBAAA,EAAAnL,EAAAic,kBACA/K,EAAApJ,kBAAAN,OAAAI,EACAsJ,EAAA1J,OAAAI,GAGAuJ,MAAApM,WACAyU,EAAArI,EAAAjG,YAAA4R,EAGA3L,EAAArJ,kBAAA9sC,GAAA2sC,EAAA3sC,EAAAw+C,EACArI,EAAArJ,kBAAA7sC,GAAA0sC,EAAA1sC,EAAAu+C,EAGArI,EAAAlQ,SAAAjmC,GAAA2sC,EAAA3sC,EAAAw+C,EACArI,EAAAlQ,SAAAhmC,GAAA0sC,EAAA1sC,EAAAu+C,EAGAxZ,EAAAgc,UACA7K,EAAAxH,aAAA3uC,GAAAglC,EAAAgc,QAAA3E,EAAAr8C,EAAA89C,EAAAU,EACArI,EAAAxH,aAAA1uC,GAAA+kC,EAAAgc,QAAA3E,EAAAp8C,EAAA69C,EAAAU,GAIA5R,EAAAhB,EAAAwR,MAAAyD,EAAAlU,GAAAqV,EAAAxB,EAAAE,cAAAvK,EAAAhG,gBAAA,EAAAnL,EAAAic,kBACA9K,EAAArJ,kBAAAN,OAAAI,EACAuJ,EAAA3J,OAAAI,MAWA4T,EAAA0B,aAAA,SAAA5c,GACA,OAAAt8C,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,GACAm0D,EAAA9mD,EAAAy2C,iBAEA,MAAAz2C,EAAA0zC,UAAA,IAAAoT,EAAAn9C,GAAA,IAAAm9C,EAAAl9C,GAAA,IAAAk9C,EAAA3Q,OAAA,CAIAX,EAAAp0C,IAAApB,GAAA,EAGA,QAAAigD,GAAA,EAA2BA,EAAAjgD,EAAAiE,MAAArO,OAAuBqqD,IAAA,CAClD,GAAAtG,GAAA35C,EAAAiE,MAAAg8C,EAEA3K,GAAA2E,UAAAN,EAAAvD,SAAA0Q,GAEA7G,EAAA,IACAtG,EAAA/J,SAAAjmC,GAAAm9C,EAAAn9C,EACAgwC,EAAA/J,SAAAhmC,GAAAk9C,EAAAl9C,GAGA,IAAAk9C,EAAA3Q,QACAb,EAAAmD,OAAAkB,EAAAvD,SAAA0Q,EAAA3Q,MAAAn2C,EAAA4vC,UACA+F,EAAA8C,OAAAkB,EAAAjB,KAAAoO,EAAA3Q,OACA8J,EAAA,GACA1K,EAAAmF,YAAAf,EAAA/J,SAAAkX,EAAA3Q,MAAAn2C,EAAA4vC,SAAA+J,EAAA/J,WAIA8F,EAAA1G,OAAA2K,EAAAtB,OAAAsB,EAAAvD,SAAAp2C,EAAA62C,UAIAiQ,EAAA3Q,OAAAgU,EAAAC,SACAtD,EAAAn9C,GAAAwgD,EAAAC,SACAtD,EAAAl9C,GAAAugD,EAAAC,iBA4JGnO,iBAAA,GAAAC,mBAAA,GAAAC,mBAAA,GAAAC,qBAAA,GAAAC,qBAAA,GAAAC,uBAAA,KAA0IlgB,IAAA,SAAAiZ,EAAA3iD,EAAAD,GAU7I,GAAAm7C,KAEAl7C,GAAAD,QAAAm7C,CAEA,IAAA0H,GAAAD,EAAA,wBACAG,EAAAH,EAAA,oBACAxH,EAAAwH,EAAA,iBACAoH,EAAApH,EAAA,kBACAgK,EAAAhK,EAAA,yBACA8U,EAAA9U,EAAA,gBACArH,EAAAqH,EAAA,qBACAI,EAAAJ,EAAA,kBACAK,EAAAL,EAAA,uBAEA,WAWAzH,EAAAlC,OAAA,SAAAuC,EAAAzzC,GACA,GAAAg0C,IAAAP,IAAAO,MAAA,QAAAh0C,IAAAg0C,MAAA,KAEAA,KACAP,KAAAxnC,QAAAwnC,EAAAxnC,OAAAgoC,OACAD,EAAAX,EAAAnC,OAAAuC,EAAAxnC,OAAAgoC,QACaj0C,KAAAmvB,QACb6kB,EAAAX,EAAAnC,OAAAlxC,EAAAmvB,UAEA6kB,EAAAX,EAAAnC,SACA+J,EAAAp6C,KAAA,qHAIA,IAAAszC,GAAAwb,EAAAze,QACAwD,MAAA,mBACAqb,OAAA/b,EAAAoB,SACA4a,QAAqB7gD,EAAA,EAAAC,EAAA,GACrBhU,OAAA,IACAg5C,UAAA,GACAgc,iBAAA,EACAnkD,QACAiuC,YAAA,UACAC,UAAA,KAIAqB,GACAxzC,KAAA,kBACAgsC,QACA7kB,QAAA,KACA3pB,KAAA,KACA2uC,aACA2I,iBACAC,SAAA,EACAC,KAAA,WACAC,MAAA,IAIA/I,EAAA+G,EAAA/lB,OAAAsmB,EAAAx7C,EAQA,OANAiiD,GAAAqP,GAAA7d,EAAA,0BACA,GAAAmQ,GAAApQ,EAAAoQ,UAAAnQ,EAAAC,MACAN,GAAAoB,OAAAN,EAAA0P,GACAxQ,EAAAme,eAAArd,KAGAA,GAUAd,EAAAoB,OAAA,SAAAN,EAAAO,GACA,GAAAT,GAAAE,EAAAF,MACAG,EAAAD,EAAAC,WACA3uC,EAAA0uC,EAAA1uC,IAEA,QAAAwuC,EAAAjV,QACA,GAAAoV,EAAAmR,MAsBAtK,EAAAp0C,IAAAutC,EAAAmR,OAAA,GACAnR,EAAA4b,OAAA/b,EAAAoB,aAtBA,QAAAj9C,GAAA,EAA+BA,EAAAs8C,EAAAr5C,OAAmBjD,IAElD,GADAqN,EAAAivC,EAAAt8C,GACA+iD,EAAA3K,SAAA/qC,EAAAq4C,OAAA7J,EAAAoB,WACAyP,EAAAU,WAAA//C,EAAAs3C,gBAAA5I,EAAA4I,iBACA,OAAA2I,GAAAjgD,EAAAiE,MAAArO,OAAA,MAAmEqqD,EAAAjgD,EAAAiE,MAAArO,OAAuBqqD,IAAA,CAC1F,GAAAtG,GAAA35C,EAAAiE,MAAAg8C,EACA,IAAA3K,EAAAvK,SAAA4O,EAAAvD,SAAA5H,EAAAoB,UAAA,CACAjB,EAAA4b,OAAA/b,EAAAoB,SACAjB,EAAAmR,MAAApR,EAAA1uC,OACA2uC,EAAA6b,QAAqD7gD,EAAA6kC,EAAAoB,SAAAjmC,EAAA3J,EAAA4vC,SAAAjmC,EAAAC,EAAA4kC,EAAAoB,SAAAhmC,EAAA5J,EAAA4vC,SAAAhmC,GACrD+kC,EAAAmc,OAAA9qD,EAAAm2C,MAEAX,EAAAp0C,IAAApB,GAAA,GACAy8C,EAAAU,QAAAzO,EAAA,aAA8EF,QAAAxuC,QAE9E,aAUA2uC,GAAAmR,MAAApR,EAAA1uC,KAAA,KACA2uC,EAAA6b,OAAA,KAEAxqD,GACAy8C,EAAAU,QAAAzO,EAAA,WAA4DF,QAAAxuC,UAU5D4tC,EAAAme,eAAA,SAAArd,GACA,GAAAF,GAAAE,EAAAF,MACAwd,EAAAxd,EAAAyd,YAEAD,GAAAE,WACAzP,EAAAU,QAAAzO,EAAA,aAA0DF,UAE1Dwd,EAAAG,WACA1P,EAAAU,QAAAzO,EAAA,aAA0DF,UAE1Dwd,EAAAI,SACA3P,EAAAU,QAAAzO,EAAA,WAAwDF,UAGxDX,EAAAwe,kBAAA7d,SA8GG8d,oBAAA,EAAAC,wBAAA,EAAAtQ,iBAAA,GAAAyC,iBAAA,GAAA8N,gBAAA,GAAAtQ,mBAAA,GAAAE,qBAAA,GAAAE,uBAAA,GAAAmQ,eAAA,KAAqMC,IAAA,SAAArX,EAAA3iD,EAAAD,IACxM,SAAAwJ,GAOA,GAAAw5C,KAEA/iD,GAAAD,QAAAgjD,EAEA,WAEAA,EAAAkX,QAAA,EACAlX,EAAAmX,MAAA,EACAnX,EAAAoX,eAAA,GAAA92B,MASA0f,EAAA/lB,OAAA,SAAA15B,EAAAunD,GACA,GAAAuP,GAEAC,CAEA,mBAAAxP,IACAuP,EAAA,EACAC,EAAAxP,IAEAuP,EAAA,EACAC,GAAA,EAGA,QAAAp6D,GAAAm6D,EAA+Bn6D,EAAAgD,UAAAC,OAAsBjD,IAAA,CACrD,GAAA4C,GAAAI,UAAAhD,EAEA,IAAA4C,EACA,OAAAy3D,KAAAz3D,GACAw3D,GAAAx3D,EAAAy3D,IAAAz3D,EAAAy3D,GAAA31D,cAAAjE,OACA4C,EAAAg3D,IAAAh3D,EAAAg3D,GAAA31D,cAAAjE,OAIA4C,EAAAg3D,GAAAz3D,EAAAy3D,IAHAh3D,EAAAg3D,GAAAh3D,EAAAg3D,OACAvX,EAAA/lB,OAAA15B,EAAAg3D,GAAAD,EAAAx3D,EAAAy3D,KAKAh3D,EAAAg3D,GAAAz3D,EAAAy3D,GAMA,MAAAh3D,IAUAy/C,EAAA1wC,MAAA,SAAA/O,EAAAunD,GACA,MAAA9H,GAAA/lB,UAA+B6tB,EAAAvnD,IAS/By/C,EAAArgD,KAAA,SAAAY,GACA,GAAA5C,OAAAgC,KACA,MAAAhC,QAAAgC,KAAAY,EAGA,IAAAZ,KACA,QAAAS,KAAAG,GACAZ,EAAAyC,KAAAhC,EACA,OAAAT,IASAqgD,EAAA52C,OAAA,SAAA7I,GACA,GAAA6I,KAEA,IAAAzL,OAAAgC,KAAA,CAEA,OADAA,GAAAhC,OAAAgC,KAAAY,GACArD,EAAA,EAA2BA,EAAAyC,EAAAQ,OAAiBjD,IAC5CkM,EAAAhH,KAAA7B,EAAAZ,EAAAzC,IAEA,OAAAkM,GAIA,OAAAhJ,KAAAG,GACA6I,EAAAhH,KAAA7B,EAAAH,GACA,OAAAgJ,IAYA42C,EAAAjiD,IAAA,SAAAwC,EAAA27C,EAAAsb,EAAAtwC,GACAg1B,IAAA18C,MAAA,KAAAyJ,MAAAuuD,EAAAtwC,EAEA,QAAAhqB,GAAA,EAAuBA,EAAAg/C,EAAA/7C,OAAiBjD,GAAA,EACxCqD,IAAA27C,EAAAh/C,GAGA,OAAAqD,IAaAy/C,EAAAr0C,IAAA,SAAApL,EAAA27C,EAAAz9C,EAAA+4D,EAAAtwC,GACA,GAAA1Y,GAAA0tC,EAAA18C,MAAA,KAAAyJ,MAAAuuD,EAAAtwC,EAEA,OADA84B,GAAAjiD,IAAAwC,EAAA27C,EAAA,MAAA1tC,IAAArO,OAAA,IAAA1B,EACAA,GAUAuhD,EAAAyX,QAAA,SAAAC,GACA,OAAAx6D,GAAAw6D,EAAAv3D,OAAA,EAAsCjD,EAAA,EAAOA,IAAA,CAC7C,GAAAstD,GAAAzwB,KAAAwd,MAAAyI,EAAAvhB,UAAAvhC,EAAA,IACAy6D,EAAAD,EAAAx6D,EACAw6D,GAAAx6D,GAAAw6D,EAAAlN,GACAkN,EAAAlN,GAAAmN,EAEA,MAAAD,IAUA1X,EAAAqD,OAAA,SAAAuU,GACA,MAAAA,GAAA79B,KAAAwd,MAAAyI,EAAAvhB,SAAAm5B,EAAAz3D,UASA6/C,EAAA6X,UAAA,SAAAt3D,GACA,0BAAAu3D,aACAv3D,YAAAu3D,gBAGAv3D,KAAAye,UAAAze,EAAAoe,WASAqhC,EAAA51C,QAAA,SAAA7J,GACA,yBAAA5C,OAAAS,UAAAqO,SAAArP,KAAAmD,IASAy/C,EAAA+X,WAAA,SAAAx3D,GACA,yBAAAA,IASAy/C,EAAAgY,cAAA,SAAAz3D,GACA,uBAAAA,MAAAqB,cAAAjE,QASAqiD,EAAAiY,SAAA,SAAA13D,GACA,0BAAAkM,SAAArP,KAAAmD,IAWAy/C,EAAAsS,MAAA,SAAAvvD,EAAAi3B,EAAAspB,GACA,MAAAvgD,GAAAi3B,EACAA,EACAj3B,EAAAugD,EACAA,EACAvgD,GASAi9C,EAAAoS,KAAA,SAAArvD,GACA,MAAAA,GAAA,QASAi9C,EAAAzf,IAAA,WACA,GAAAj9B,OAAAgoC,YAAA,CACA,GAAAhoC,OAAAgoC,YAAA/K,IACA,MAAAj9B,QAAAgoC,YAAA/K,KACa,IAAAj9B,OAAAgoC,YAAA4sB,UACb,MAAA50D,QAAAgoC,YAAA4sB,YAIA,UAAA53B,MAAA0f,EAAAoX,eAWApX,EAAAvhB,OAAA,SAAAzE,EAAAspB,GAGA,MAFAtpB,GAAA,oBAAAA,KAAA,EACAspB,EAAA,oBAAAA,KAAA,EACAtpB,EAAAm+B,KAAA7U,EAAAtpB,GAGA,IAAAm+B,GAAA,WAGA,MADAnY,GAAAmX,OAAA,KAAAnX,EAAAmX,MAAA,cACAnX,EAAAmX,MAAA,OASAnX,GAAAoY,cAAA,SAAAC,GASA,MARAA,KAAAr0D,QAAA,QAEA,GAAAq0D,EAAAl4D,SACAk4D,IAAAzoB,OAAA,GAAAyoB,EAAAzoB,OAAA,GACAyoB,EAAAzoB,OAAA,GAAAyoB,EAAAzoB,OAAA,GACAyoB,EAAAzoB,OAAA,GAAAyoB,EAAAzoB,OAAA,IAGA0oB,SAAAD,EAAA,KAiBArY,EAAAuY,SAAA,EAQAvY,EAAAwY,IAAA,WACA7yD,SAAAq6C,EAAAuY,SAAA,GAAAvY,EAAAuY,UAAA,GACA5yD,QAAA6yD,IAAAjhD,MAAA5R,SAAA,cAAAoT,OAAA/P,MAAA5K,UAAA6K,MAAA7L,KAAA8C,cAUA8/C,EAAAyY,KAAA,WACA9yD,SAAAq6C,EAAAuY,SAAA,GAAAvY,EAAAuY,UAAA,GACA5yD,QAAA8yD,KAAAlhD,MAAA5R,SAAA,cAAAoT,OAAA/P,MAAA5K,UAAA6K,MAAA7L,KAAA8C,cAUA8/C,EAAAp6C,KAAA,WACAD,SAAAq6C,EAAAuY,SAAA,GAAAvY,EAAAuY,UAAA,GACA5yD,QAAAC,KAAA2R,MAAA5R,SAAA,cAAAoT,OAAA/P,MAAA5K,UAAA6K,MAAA7L,KAAA8C,cASA8/C,EAAAQ,OAAA,WACA,MAAAR,GAAAkX,WAUAlX,EAAAryC,QAAA,SAAA+qD,EAAAC,GACA,GAAAD,EAAA/qD,QACA,MAAA+qD,GAAA/qD,QAAAgrD,EAEA,QAAAz7D,GAAA,EAAuBA,EAAAw7D,EAAAv4D,OAAqBjD,IAC5C,GAAAw7D,EAAAx7D,KAAAy7D,EACA,MAAAz7D,EAGA,WAUA8iD,EAAA3gD,IAAA,SAAA8G,EAAA8M,GACA,GAAA9M,EAAA9G,IACA,MAAA8G,GAAA9G,IAAA4T,EAKA,QAFA2lD,MAEA17D,EAAA,EAAuBA,EAAAiJ,EAAAhG,OAAiBjD,GAAA,EACxC07D,EAAAx2D,KAAA6Q,EAAA9M,EAAAjJ,IAGA,OAAA07D,IAUA5Y,EAAA6Y,gBAAA,SAAAC,GAIA,GAAAluD,MACAmuD,KACApB,IAEA,QAAA1vD,KAAA6wD,GACAC,EAAA9wD,IAAA0vD,EAAA1vD,IACA+3C,EAAAgZ,iBAAA/wD,EAAA8wD,EAAApB,EAAAmB,EAAAluD,EAIA,OAAAA,IAGAo1C,EAAAgZ,iBAAA,SAAA/wD,EAAA8wD,EAAApB,EAAAmB,EAAAluD,GACA,GAAAquD,GAAAH,EAAA7wD,MACA0vD,GAAA1vD,IAAA,CAEA,QAAA/K,GAAA,EAAuBA,EAAA+7D,EAAA94D,OAAsBjD,GAAA,GAC7C,GAAAg8D,GAAAD,EAAA/7D,EAEAy6D,GAAAuB,KAKAH,EAAAG,IACAlZ,EAAAgZ,iBAAAE,EAAAH,EAAApB,EAAAmB,EAAAluD,IAIA+sD,EAAA1vD,IAAA,EACA8wD,EAAA9wD,IAAA,EAEA2C,EAAAxI,KAAA6F,IAcA+3C,EAAAmZ,MAAA,WAGA,OAFAC,MAEAl8D,EAAA,EAAuBA,EAAAgD,UAAAC,OAAsBjD,GAAA,GAC7C,GAAA+V,GAAA/S,UAAAhD,EAEA+V,GAAAomD,SAEAD,EAAAh3D,KAAAmV,MAAA6hD,EAAAnmD,EAAAomD,UAEAD,EAAAh3D,KAAA6Q,GAIA,GAAAkmD,GAAA,WAKA,OAHAG,GACAx1D,EAAA,GAAAkF,OAAA9I,UAAAC,QAEAjD,EAAA,EAAAC,EAAA+C,UAAAC,OAAiDjD,EAAAC,EAAOD,IACxD4G,EAAA5G,GAAAgD,UAAAhD,EAGA,KAAAA,EAAA,EAAuBA,EAAAk8D,EAAAj5D,OAAkBjD,GAAA,GACzC,GAAA0N,GAAAwuD,EAAAl8D,GAAAqa,MAAA+hD,EAAAx1D,EAEA,qBAAA8G,KACA0uD,EAAA1uD,GAIA,MAAA0uD,GAKA,OAFAH,GAAAE,SAAAD,EAEAD,GAYAnZ,EAAAuZ,gBAAA,SAAAvpB,EAAAkM,EAAAjpC,GACA,MAAA+sC,GAAAr0C,IAAAqkC,EAAAkM,EAAA8D,EAAAmZ,MACAlmD,EACA+sC,EAAAjiD,IAAAiyC,EAAAkM,MAaA8D,EAAAwZ,eAAA,SAAAxpB,EAAAkM,EAAAjpC,GACA,MAAA+sC,GAAAr0C,IAAAqkC,EAAAkM,EAAA8D,EAAAmZ,MACAnZ,EAAAjiD,IAAAiyC,EAAAkM,GACAjpC,KAcA+sC,EAAAyZ,eAAA,SAAAC,EAAAC,GAEA,OADA,oBAAAr2D,eAAAo2D,GAAA,oBAAAlzD,KAAAkzD,GAAA,OACA9Z,EAAA+Z,SAICv8D,KAAA8D,KAAA,oBAAAsF,KAAA,oBAAA/E,WAAA,oBAAA6B,wBACGs2D,IAAA,SAAAha,EAAA3iD,EAAAD,GAWJ,GAAAi7C,KAEAh7C,GAAAD,QAAAi7C,CAEA,IAAAI,GAAAuH,EAAA,iBACAG,EAAAH,EAAA,cACAkQ,EAAAlQ,EAAA,yBACA1H,EAAA0H,EAAA,oBACA4O,EAAA5O,EAAA,sBAEA2L,GADA3L,EAAA,aACAA,EAAA,sBACAoH,EAAApH,EAAA,YACArH,EAAAqH,EAAA,qBACA8U,EAAA9U,EAAA,4BACAI,EAAAJ,EAAA,YACA/zC,EAAA+zC,EAAA,iBAEA,WAUA3H,EAAAhC,OAAA,SAAA/hB,EAAAnvB,GAEAA,EAAAi7C,EAAA6X,UAAA3jC,GAAAnvB,EAAAmvB,EACAA,EAAA8rB,EAAA6X,UAAA3jC,KAAA,KACAnvB,SAEAmvB,GAAAnvB,EAAAiM,SACAgvC,EAAAp6C,KAAA,wDAGA,IAAA26C,IACAsZ,mBAAA,EACAC,mBAAA,EACAC,qBAAA,EACAC,gBAAA,EACAC,UACAxZ,UACAyZ,QACAxM,UAAA,EACAxL,UAAA,GAEAiY,YACA3O,WAAAD,IAIA/S,EAAAwH,EAAA/lB,OAAAsmB,EAAAx7C,EAGA,IAAAmvB,GAAAskB,EAAAxnC,OAAA,CACA,GAAAopD,IACAlmC,UACAs3B,WAAAtT,EAGAM,GAAAxnC,OAAAgvC,EAAA/lB,OAAAmgC,EAAA5hB,EAAAxnC,QAmBA,MAfAwnC,GAAAxnC,QAAAwnC,EAAAxnC,OAAAw6C,aACAhT,EAAAxnC,OAAAwnC,EAAAxnC,OAAAw6C,WAAAvV,OAAAuC,EAAAxnC,SAIAwnC,EAAAxnC,SACAwnC,EAAAxnC,OAAAwnC,UAGAA,EAAAC,MAAA1zC,EAAA0zC,OAAAJ,EAAApC,OAAAuC,EAAAC,OACAD,EAAA0R,MAAAsE,EAAAvY,SACAuC,EAAA2hB,WAAA3hB,EAAA2hB,WAAA3O,WAAAvV,OAAAuC,EAAA2hB,YACA3hB,EAAA6hB,QAAA7hB,EAAA6hB,UAA4CC,UAAA,GAG5C9hB,GAkBAP,EAAAsB,OAAA,SAAAf,EAAAuM,EAAAgB,GACAhB,KAAA,OACAgB,KAAA,CAEA,IAIA7oD,GAJAu7C,EAAAD,EAAAC,MACAyhB,EAAA1hB,EAAA0hB,OACAC,EAAA3hB,EAAA2hB,WACAnQ,IAIAkQ,GAAAxM,WAAA3I,EAAAmV,EAAAhY,SAGA,IAAAqY,IACA7M,UAAAwM,EAAAxM,UAGA1G,GAAAU,QAAAlP,EAAA,eAAA+hB,EAGA,IAAA5R,GAAApQ,EAAAoQ,UAAAlQ,GACAmQ,EAAArQ,EAAAqQ,eAAAnQ,EAeA,KAXAD,EAAAwhB,gBACAja,EAAAxG,OAAAoP,EAAAuR,EAAAhY,WAGAjK,EAAAuiB,oBAAA7R,EAAAlQ,EAAAC,SAGAT,EAAAwiB,cAAA9R,EAAA5D,EAAAmV,EAAAhY,UAAA6D,EAAAtN,EAAAmK,QAGA8R,EAAAa,YAAA5M,GACAzrD,EAAA,EAAmBA,EAAAs7C,EAAAuhB,qBAAiC78D,IACpDw3D,EAAAc,SAAA5M,EAAAsR,EAAAhY,UAEAwS,GAAA0B,aAAAzN,GAGAwR,EAAA3O,YAEA/S,EAAAwO,YACAkT,EAAA3O,WAAAhD,MAAA2R,GAGAA,EAAA3O,WAAAjS,OAAA4gB,EAAAxR,EAAAnQ,EAAAC,EAAAwO,YACA+C,EAAAmQ,EAAAxO,WAGA3B,EAAArB,EAIAlQ,EAAAwO,YACA1O,EAAA6O,YAAA3O,GAAA,QAIA,IAAAsR,GAAAoQ,EAAA1O,SAAAzB,EAAAxR,GAGA0R,EAAA1R,EAAA0R,MACAwD,EAAAwM,EAAAxM,SAcA,KAbAc,EAAAjV,OAAA2Q,EAAAH,EAAA2D,GACAc,EAAAM,UAAA5E,EAAAwD,GAGAlV,EAAAwhB,gBACAja,EAAA2a,gBAAAxQ,EAAA/jD,KAAA+zD,EAAAhY,WAGAgI,EAAAwE,eAAAvuD,OAAA,GACA6mD,EAAAU,QAAAlP,EAAA,kBAAsD0R,QAAAwE,iBAGtDoB,EAAAM,iBAAAlG,EAAA/jD,MACAjJ,EAAA,EAAmBA,EAAAs7C,EAAAqhB,mBAA+B38D,IAClD4yD,EAAAQ,cAAApG,EAAA/jD,KAAA+zD,EAAAhY,UAMA,KAJA4N,EAAAmB,kBAAAtI,GAGA+L,EAAAa,YAAA5M,GACAzrD,EAAA,EAAmBA,EAAAs7C,EAAAuhB,qBAAiC78D,IACpDw3D,EAAAc,SAAA5M,EAAAsR,EAAAhY,UAMA,KAJAwS,EAAA0B,aAAAzN,GAGAmH,EAAAoB,iBAAAhH,EAAA/jD,MACAjJ,EAAA,EAAmBA,EAAAs7C,EAAAshB,mBAA+B58D,IAClD4yD,EAAAyB,cAAArH,EAAA/jD,KAAA+zD,EAAAhY,UAgBA,OAZAgI,GAAAyE,gBAAAxuD,OAAA,GACA6mD,EAAAU,QAAAlP,EAAA,mBAAuD0R,QAAAyE,kBAEvDzE,EAAA0E,aAAAzuD,OAAA,GACA6mD,EAAAU,QAAAlP,EAAA,gBAAoD0R,QAAA0E,eAIpD3W,EAAA0iB,mBAAAhS,GAEA3B,EAAAU,QAAAlP,EAAA,cAAA+hB,GAEA/hB,GASAP,EAAA2iB,MAAA,SAAAC,EAAAC,GAGA,GAFA9a,EAAA/lB,OAAA4gC,EAAAC,GAEAA,EAAAriB,MAAA,CACAoiB,EAAApiB,MAAAqiB,EAAAriB,MAEAR,EAAAuQ,MAAAqS,EAIA,QAFArhB,GAAAjB,EAAAoQ,UAAAkS,EAAApiB,OAEAv7C,EAAA,EAA2BA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC9C,GAAAqN,GAAAivC,EAAAt8C,EACA6iD,GAAAp0C,IAAApB,GAAA,GACAA,EAAAtF,GAAA+6C,EAAAQ,YAUAvI,EAAAuQ,MAAA,SAAAhQ,GACA,GAAAC,GAAAD,EAAAC,KAEA+V,GAAAhG,MAAAhQ,EAAA0R,MAEA,IAAAiQ,GAAA3hB,EAAA2hB,UACA,IAAAA,EAAA3O,WAAA,CACA,GAAAhS,GAAAjB,EAAAoQ,UAAAlQ,EACA0hB,GAAA3O,WAAAhD,MAAA2R,GACAA,EAAA3O,WAAAjS,OAAA4gB,EAAA3gB,EAAAhB,GAAA,KAUAP,EAAA0iB,mBAAA,SAAAnhB,GACA,OAAAt8C,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAGAqN,GAAAs2C,MAAA3sC,EAAA,EACA3J,EAAAs2C,MAAA1sC,EAAA,EACA5J,EAAAu2C,OAAA,IAWA7I,EAAAuiB,oBAAA,SAAAhhB,EAAAd,GACA,GAAAqiB,GAAA,oBAAAriB,GAAA8M,MAAA9M,EAAA8M,MAAA,IAEA,SAAA9M,EAAAxkC,GAAA,IAAAwkC,EAAAvkC,IAAA,IAAA4mD,EAIA,OAAA79D,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAEAqN,GAAA0zC,UAAA1zC,EAAAg3C,aAIAh3C,EAAAs2C,MAAA1sC,GAAA5J,EAAA24C,KAAAxK,EAAAvkC,EAAA4mD,EACAxwD,EAAAs2C,MAAA3sC,GAAA3J,EAAA24C,KAAAxK,EAAAxkC,EAAA6mD,KAgBA9iB,EAAAwiB,cAAA,SAAAjhB,EAAAsM,EAAA5D,EAAA6D,EAAAiV,GACA,OAAA99D,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAEAqN,GAAA0zC,UAAA1zC,EAAAg3C,YAGA11C,EAAA0tC,OAAAhvC,EAAAu7C,EAAA5D,EAAA6D,UA2KGkV,eAAA,EAAApE,oBAAA,EAAAqE,gBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,wBAAA,GAAAjS,2BAAA,GAAAtC,mBAAA,GAAAwU,WAAA,GAAAC,WAAA,GAAAC,YAAA,GAAAC,aAAA,KAAgP70B,IAAA,SAAAgZ,EAAA3iD,EAAAD,GASnP,GAAAgqD,KAEA/pD,GAAAD,QAAAgqD,CAEA,IAAAhH,GAAAJ,EAAA,aAEA,WASAoH,EAAAqP,GAAA,SAAAn4D,EAAAw9D,EAAAr0D,GAIA,OAFA7J,GADAm+D,EAAAD,EAAAl8D,MAAA,KAGAtC,EAAA,EAAuBA,EAAAy+D,EAAAx7D,OAAkBjD,IACzCM,EAAAm+D,EAAAz+D,GACAgB,EAAA+7D,OAAA/7D,EAAA+7D,WACA/7D,EAAA+7D,OAAAz8D,GAAAU,EAAA+7D,OAAAz8D,OACAU,EAAA+7D,OAAAz8D,GAAA4E,KAAAiF,EAGA,OAAAA,IAUA2/C,EAAA4U,IAAA,SAAA19D,EAAAw9D,EAAAr0D,GACA,IAAAq0D,EAEA,YADAx9D,EAAA+7D,UAKA,oBAAAyB,KACAr0D,EAAAq0D,EACAA,EAAA1b,EAAArgD,KAAAzB,EAAA+7D,QAAA36D,KAAA,KAKA,QAFAq8D,GAAAD,EAAAl8D,MAAA,KAEAtC,EAAA,EAAuBA,EAAAy+D,EAAAx7D,OAAkBjD,IAAA,CACzC,GAAA2+D,GAAA39D,EAAA+7D,OAAA0B,EAAAz+D,IACA4+D,IAEA,IAAAz0D,GAAAw0D,EACA,OAAArR,GAAA,EAA+BA,EAAAqR,EAAA17D,OAAsBqqD,IACrDqR,EAAArR,KAAAnjD,GACAy0D,EAAA15D,KAAAy5D,EAAArR,GAIAtsD,GAAA+7D,OAAA0B,EAAAz+D,IAAA4+D,IAWA9U,EAAAU,QAAA,SAAAxpD,EAAAw9D,EAAAnB,GACA,GAAAoB,GACAn+D,EACAq+D,EACAE,CAEA,IAAA79D,EAAA+7D,OAAA,CACAM,IACAA,MAEAoB,EAAAD,EAAAl8D,MAAA,IAEA,QAAAtC,GAAA,EAA2BA,EAAAy+D,EAAAx7D,OAAkBjD,IAI7C,GAHAM,EAAAm+D,EAAAz+D,GACA2+D,EAAA39D,EAAA+7D,OAAAz8D,GAEA,CACAu+D,EAAA/b,EAAA1wC,MAAAirD,GAAA,GACAwB,EAAAv+D,OACAu+D,EAAAj8D,OAAA5B,CAEA,QAAAssD,GAAA,EAAmCA,EAAAqR,EAAA17D,OAAsBqqD,IACzDqR,EAAArR,GAAAjzC,MAAArZ,GAAA69D,YASGT,WAAA,KAAcz0B,IAAA,SAAA+Y,EAAA3iD,EAAAD,GAOjB,GAAAg/D,KAEA/+D,GAAAD,QAAAg/D,CAEA,IAAAC,GAAArc,EAAA,YACAI,EAAAJ,EAAA,aAEA,WAQAoc,EAAAx+D,KAAA,YAQAw+D,EAAArlD,QAAA,SAQAqlD,EAAAE,QAQAF,EAAAG,QAUAH,EAAAI,IAAA,WACAH,EAAAG,IAAAJ,EAAAhzD,MAAA5K,UAAA6K,MAAA7L,KAAA8C,aAWA87D,EAAAK,OAAA,SAAAngB,EAAAjpC,GAEA,MADAipC,KAAAl4C,QAAA,eACAg8C,EAAAuZ,gBAAAyC,EAAA9f,EAAAjpC,IAWA+oD,EAAAM,MAAA,SAAApgB,EAAAjpC,GAEA,MADAipC,KAAAl4C,QAAA,eACAg8C,EAAAwZ,eAAAwC,EAAA9f,EAAAjpC,SAKGqoD,WAAA,GAAAiB,WAAA,KAA4Bz1B,IAAA,SAAA8Y,EAAA3iD,EAAAD,MAE5B65D,oBAAA,EAAAyE,WAAA,KAAoCv0B,IAAA,SAAA6Y,EAAA3iD,EAAAD,GAOvC,GAAAo7C,KAEAn7C,GAAAD,QAAAo7C,CAEA,IAAA4H,GAAAJ,EAAA,mBAEA,WAQAxH,EAAAnC,OAAA,SAAA/hB,GACA,GAAA6kB,KAqFA,OAnFA7kB,IACA8rB,EAAAwY,IAAA,2EAGAzf,EAAA7kB,WAAAhsB,SAAAqC,KACAwuC,EAAAyjB,UAA0BtoD,EAAA,EAAAC,EAAA,GAC1B4kC,EAAAoB,UAA0BjmC,EAAA,EAAAC,EAAA,GAC1B4kC,EAAA0jB,mBAAmCvoD,EAAA,EAAAC,EAAA,GACnC4kC,EAAA2jB,iBAAiCxoD,EAAA,EAAAC,EAAA,GACjC4kC,EAAAvyB,QAAwBtS,EAAA,EAAAC,EAAA,GACxB4kC,EAAAyM,OAAuBtxC,EAAA,EAAAC,EAAA,GACvB4kC,EAAApP,WAAA,EACAoP,EAAAjV,QAAA,EACAiV,EAAAJ,WAAAI,EAAA7kB,QAAAyoC,aAAA,uBAEA5jB,EAAAyd,cACAC,UAAA,KACAC,UAAA,KACAC,QAAA,KACAiG,WAAA,MAGA7jB,EAAA0d,UAAA,SAAA8D,GACA,GAAApgB,GAAA/B,EAAAykB,0BAAAtC,EAAAxhB,EAAA7kB,QAAA6kB,EAAAJ,WACA4hB,GAAAnxB,iBAGA2P,EAAAjV,OAAA,EACAy2B,EAAA95B,kBAGAsY,EAAAyjB,SAAAtoD,EAAAimC,EAAAjmC,EACA6kC,EAAAyjB,SAAAroD,EAAAgmC,EAAAhmC,EACA4kC,EAAAoB,SAAAjmC,EAAA6kC,EAAAyjB,SAAAtoD,EAAA6kC,EAAAyM,MAAAtxC,EAAA6kC,EAAAvyB,OAAAtS,EACA6kC,EAAAoB,SAAAhmC,EAAA4kC,EAAAyjB,SAAAroD,EAAA4kC,EAAAyM,MAAArxC,EAAA4kC,EAAAvyB,OAAArS,EACA4kC,EAAAyd,aAAAC,UAAA8D,GAGAxhB,EAAA2d,UAAA,SAAA6D,GACA,GAAApgB,GAAA/B,EAAAykB,0BAAAtC,EAAAxhB,EAAA7kB,QAAA6kB,EAAAJ,WACA4hB,GAAAnxB,gBAGA2P,EAAAjV,OAAA,EACAy2B,EAAA95B,kBAEAsY,EAAAjV,OAAAy2B,EAAAz2B,OAGAiV,EAAAyjB,SAAAtoD,EAAAimC,EAAAjmC,EACA6kC,EAAAyjB,SAAAroD,EAAAgmC,EAAAhmC,EACA4kC,EAAAoB,SAAAjmC,EAAA6kC,EAAAyjB,SAAAtoD,EAAA6kC,EAAAyM,MAAAtxC,EAAA6kC,EAAAvyB,OAAAtS,EACA6kC,EAAAoB,SAAAhmC,EAAA4kC,EAAAyjB,SAAAroD,EAAA4kC,EAAAyM,MAAArxC,EAAA4kC,EAAAvyB,OAAArS,EACA4kC,EAAA0jB,kBAAAvoD,EAAA6kC,EAAAoB,SAAAjmC,EACA6kC,EAAA0jB,kBAAAtoD,EAAA4kC,EAAAoB,SAAAhmC,EACA4kC,EAAAyd,aAAAE,UAAA6D,GAGAxhB,EAAA4d,QAAA,SAAA4D,GACA,GAAApgB,GAAA/B,EAAAykB,0BAAAtC,EAAAxhB,EAAA7kB,QAAA6kB,EAAAJ,WACA4hB,GAAAnxB,gBAGAmxB,EAAA95B,iBAGAsY,EAAAjV,QAAA,EACAiV,EAAAyjB,SAAAtoD,EAAAimC,EAAAjmC,EACA6kC,EAAAyjB,SAAAroD,EAAAgmC,EAAAhmC,EACA4kC,EAAAoB,SAAAjmC,EAAA6kC,EAAAyjB,SAAAtoD,EAAA6kC,EAAAyM,MAAAtxC,EAAA6kC,EAAAvyB,OAAAtS,EACA6kC,EAAAoB,SAAAhmC,EAAA4kC,EAAAyjB,SAAAroD,EAAA4kC,EAAAyM,MAAArxC,EAAA4kC,EAAAvyB,OAAArS,EACA4kC,EAAA2jB,gBAAAxoD,EAAA6kC,EAAAoB,SAAAjmC,EACA6kC,EAAA2jB,gBAAAvoD,EAAA4kC,EAAAoB,SAAAhmC,EACA4kC,EAAAyd,aAAAG,QAAA4D,GAGAxhB,EAAA6jB,WAAA,SAAArC,GACAxhB,EAAApP,WAAA5P,KAAAupB,KAAA,EAAAvpB,KAAAC,IAAA,EAAAugC,EAAA5wB,aAAA4wB,EAAAx9C,SACAw9C,EAAA95B,kBAGA2X,EAAA0kB,WAAA/jB,IAAA7kB,SAEA6kB,GASAX,EAAA0kB,WAAA,SAAA/jB,EAAA7kB,GACA6kB,EAAA7kB,UAEAA,EAAArO,iBAAA,YAAAkzB,EAAA0d,WACAviC,EAAArO,iBAAA,YAAAkzB,EAAA2d,WACAxiC,EAAArO,iBAAA,UAAAkzB,EAAA4d,SAEAziC,EAAArO,iBAAA,aAAAkzB,EAAA6jB,YACA1oC,EAAArO,iBAAA,iBAAAkzB,EAAA6jB,YAEA1oC,EAAArO,iBAAA,YAAAkzB,EAAA0d,WACAviC,EAAArO,iBAAA,aAAAkzB,EAAA2d,WACAxiC,EAAArO,iBAAA,WAAAkzB,EAAA4d,UAQAve,EAAAwe,kBAAA,SAAA7d,GACAA,EAAAyd,aAAAC,UAAA,KACA1d,EAAAyd,aAAAE,UAAA,KACA3d,EAAAyd,aAAAG,QAAA,KACA5d,EAAAyd,aAAAoG,WAAA,KACA7jB,EAAApP,WAAA,GASAyO,EAAA2kB,UAAA,SAAAhkB,EAAAvyB,GACAuyB,EAAAvyB,OAAAtS,EAAAsS,EAAAtS,EACA6kC,EAAAvyB,OAAArS,EAAAqS,EAAArS,EACA4kC,EAAAoB,SAAAjmC,EAAA6kC,EAAAyjB,SAAAtoD,EAAA6kC,EAAAyM,MAAAtxC,EAAA6kC,EAAAvyB,OAAAtS,EACA6kC,EAAAoB,SAAAhmC,EAAA4kC,EAAAyjB,SAAAroD,EAAA4kC,EAAAyM,MAAArxC,EAAA4kC,EAAAvyB,OAAArS,GASAikC,EAAA4kB,SAAA,SAAAjkB,EAAAyM,GACAzM,EAAAyM,MAAAtxC,EAAAsxC,EAAAtxC,EACA6kC,EAAAyM,MAAArxC,EAAAqxC,EAAArxC,EACA4kC,EAAAoB,SAAAjmC,EAAA6kC,EAAAyjB,SAAAtoD,EAAA6kC,EAAAyM,MAAAtxC,EAAA6kC,EAAAvyB,OAAAtS,EACA6kC,EAAAoB,SAAAhmC,EAAA4kC,EAAAyjB,SAAAroD,EAAA4kC,EAAAyM,MAAArxC,EAAA4kC,EAAAvyB,OAAArS,GAYAikC,EAAAykB,0BAAA,SAAAtC,EAAArmC,EAAAykB,GACA,GAKAzkC,GAAAC,EALA8oD,EAAA/oC,EAAAgpC,wBACAC,EAAAj1D,SAAAwT,iBAAAxT,SAAAqC,KAAA2P,YAAAhS,SAAAqC,KACA6yD,MAAA1+D,KAAA4E,OAAA+5D,YAAA/5D,OAAA+5D,YAAAF,EAAA3iC,WACA8iC,MAAA5+D,KAAA4E,OAAAi6D,YAAAj6D,OAAAi6D,YAAAJ,EAAAziC,UACAwO,EAAAqxB,EAAAnxB,cAWA,OARAF,IACAh1B,EAAAg1B,EAAA,GAAAvF,MAAAs5B,EAAA1iC,KAAA6iC,EACAjpD,EAAA+0B,EAAA,GAAAtF,MAAAq5B,EAAAxiC,IAAA6iC,IAEAppD,EAAAqmD,EAAA52B,MAAAs5B,EAAA1iC,KAAA6iC,EACAjpD,EAAAomD,EAAA32B,MAAAq5B,EAAAxiC,IAAA6iC,IAIAppD,KAAAggB,EAAAspC,aAAAtpC,EAAAmQ,OAAAnQ,EAAAspC,aAAA7kB,GACAxkC,KAAA+f,EAAAupC,cAAAvpC,EAAAoQ,QAAApQ,EAAAupC,cAAA9kB,UAMG6N,iBAAA,KAAoBxf,IAAA,SAAA4Y,EAAA3iD,EAAAD,GAOvB,GAAAi/D,KAEAh/D,GAAAD,QAAAi/D,CAEA,IAAAjc,GAAAJ,EAAA,aAEA,WAEAqc,EAAAyB,aAQAzB,EAAA0B,SAAA,SAAAld,GAKA,GAJAwb,EAAA2B,SAAAnd,IACAT,EAAAp6C,KAAA,mBAAAq2D,EAAAxvD,SAAAg0C,GAAA,2CAGAA,EAAAjjD,OAAAy+D,GAAAyB,UAAA,CACA,GAAAG,GAAA5B,EAAAyB,UAAAjd,EAAAjjD,MACAsgE,EAAA7B,EAAA8B,aAAAtd,EAAA9pC,SAAAyrB,OACA47B,EAAA/B,EAAA8B,aAAAF,EAAAlnD,SAAAyrB,MAEA07B,GAAAE,GACAhe,EAAAp6C,KAAA,mBAAAq2D,EAAAxvD,SAAAoxD,GAAA,kBAAA5B,EAAAxvD,SAAAg0C,IACAwb,EAAAyB,UAAAjd,EAAAjjD,MAAAijD,GACaqd,EAAAE,EACbhe,EAAAp6C,KAAA,mBAAAq2D,EAAAxvD,SAAAoxD,GAAA,2BAAA5B,EAAAxvD,SAAAg0C,IACaA,IAAAod,GACb7d,EAAAp6C,KAAA,mBAAAq2D,EAAAxvD,SAAAg0C,GAAA,wDAGAwb,GAAAyB,UAAAjd,EAAAjjD,MAAAijD,CAGA,OAAAA,IAUAwb,EAAAp6D,QAAA,SAAAo8D,GACA,MAAAhC,GAAAyB,UAAAzB,EAAAiC,gBAAAD,GAAAzgE,OASAy+D,EAAAxvD,SAAA,SAAAg0C,GACA,uBAAAA,QAAAjjD,MAAA,kBAAAijD,EAAA9pC,SAAA8pC,EAAAne,OAAA,UAaA25B,EAAA2B,SAAA,SAAAr9D,GACA,MAAAA,MAAA/C,MAAA+C,EAAAoW,SAAApW,EAAA49D,SAUAlC,EAAAmC,OAAA,SAAAnhE,EAAAO,GACA,MAAAP,GAAAk/D,KAAAxuD,QAAAnQ,IAAA,GAYAy+D,EAAAoC,MAAA,SAAA5d,EAAAxjD,GACA,GAAAqhE,GAAA7d,EAAA1sC,KAAAkoD,EAAAiC,gBAAAzd,EAAA1sC,IACA,QAAA0sC,EAAA1sC,KAAA9W,EAAAO,OAAA8gE,EAAA9gE,MAAAy+D,EAAAsC,iBAAAthE,EAAA0Z,QAAA2nD,EAAAh8B,QAmBA25B,EAAAG,IAAA,SAAAn/D,EAAA0gC,GAGA,GAFA1gC,EAAAi/D,MAAAj/D,EAAAi/D,UAAAnjD,OAAA4kB,OAEA,IAAA1gC,EAAAi/D,KAAA/7D,OAEA,WADA6/C,GAAAp6C,KAAA,cAAAq2D,EAAAxvD,SAAAxP,GAAA,gDAQA,QAJAsb,GAAA0jD,EAAA1jD,aAAAtb,GACAuhE,EAAAxe,EAAA6Y,gBAAAtgD,GACA5J,KAEAzR,EAAA,EAAuBA,EAAAshE,EAAAr+D,OAA+BjD,GAAA,EACtD,GAAAshE,EAAAthE,KAAAD,EAAAO,KAAA,CAIA,GAAAijD,GAAAwb,EAAAp6D,QAAA28D,EAAAthE,GAEAujD,GAKAwb,EAAAmC,OAAAnhE,EAAAwjD,EAAAjjD,QAIAy+D,EAAAoC,MAAA5d,EAAAxjD,KACA+iD,EAAAp6C,KAAA,cAAAq2D,EAAAxvD,SAAAg0C,GAAA,SAAAA,EAAA1sC,IAAA,mBAAAkoD,EAAAxvD,SAAAxP,GAAA,KACAwjD,EAAAge,SAAA,GAGAhe,EAAA0d,QACA1d,EAAA0d,QAAAlhE,IAEA+iD,EAAAp6C,KAAA,cAAAq2D,EAAAxvD,SAAAg0C,GAAA,yCACAA,EAAAge,SAAA,GAGAhe,EAAAge,SACA9vD,EAAAvM,KAAA,gBAAA65D,EAAAxvD,SAAAg0C,UACAA,GAAAge,SAEA9vD,EAAAvM,KAAA,UAAA65D,EAAAxvD,SAAAg0C,IAGAxjD,EAAAk/D,KAAA/5D,KAAAq+C,EAAAjjD,OA3BAmR,EAAAvM,KAAA,UAAAo8D,EAAAthE,IA8BAyR,EAAAxO,OAAA,GACA6/C,EAAAyY,KAAA9pD,EAAArP,KAAA,QAUA28D,EAAA1jD,aAAA,SAAAtb,EAAAyhE,GACA,GAAAC,GAAA1C,EAAAiC,gBAAAjhE,GACAO,EAAAmhE,EAAAnhE,IAIA,IAFAkhE,UAEAlhE,IAAAkhE,IAAA,CAIAzhE,EAAAg/D,EAAAp6D,QAAA5E,MAEAyhE,EAAAlhE,GAAAwiD,EAAA3gD,IAAApC,EAAAi/D,SAAA,SAAA+B,GACAhC,EAAA2B,SAAAK,IACAhC,EAAA0B,SAAAM,EAGA,IAAAK,GAAArC,EAAAiC,gBAAAD,GACAW,EAAA3C,EAAAp6D,QAAAo8D,EAmBA,OAjBAW,KAAA3C,EAAAsC,iBAAAK,EAAAjoD,QAAA2nD,EAAAh8B,QACA0d,EAAAp6C,KACA,uBAAAq2D,EAAAxvD,SAAAmyD,GAAA,mBACA3C,EAAAxvD,SAAA6xD,GAAA,UAAArC,EAAAxvD,SAAAkyD,GAAA,KAGAC,EAAAH,SAAA,EACAxhE,EAAAwhE,SAAA,GACaG,IACb5e,EAAAp6C,KACA,uBAAAq2D,EAAAxvD,SAAAwxD,GAAA,UACAhC,EAAAxvD,SAAAkyD,GAAA,0BAGA1hE,EAAAwhE,SAAA,GAGAH,EAAA9gE,MAGA,QAAAN,GAAA,EAAuBA,EAAAwhE,EAAAlhE,GAAA2C,OAA0BjD,GAAA,EACjD++D,EAAA1jD,aAAAmmD,EAAAlhE,GAAAN,GAAAwhE,EAGA,OAAAA,KAYAzC,EAAAiC,gBAAA,SAAAD,GACA,GAAAje,EAAAiY,SAAAgG,GAAA,CAOA,MANA,wDAEA30D,KAAA20D,IACAje,EAAAp6C,KAAA,0BAAAq4D,EAAA,sCAIAzgE,KAAAygE,EAAAz+D,MAAA,QACA8iC,MAAA27B,EAAAz+D,MAAA,cAIA,OACAhC,KAAAygE,EAAAzgE,KACA8kC,MAAA27B,EAAA37B,OAAA27B,EAAAtnD,UAkBAslD,EAAA8B,aAAA,SAAAz7B,GACA,4CAEAh5B,KAAAg5B,IACA0d,EAAAp6C,KAAA,uBAAA08B,EAAA,mCAGA,IAAAu8B,GAAAv8B,EAAA9iC,MAAA,IACA8iC,GAAAu8B,EAAA,EAEA,IAAAC,GAAAv9C,MAAAyyC,OAAA1xB,EAAA,KACA3rB,EAAAmoD,EAAAx8B,EAAAy8B,OAAA,GAAAz8B,EACA9zB,EAAAwxC,EAAA3gD,IAAAsX,EAAAnX,MAAA,cAAA0kD,GACA,MAAA8P,QAAA9P,IAGA,QACA4a,UACAnoD,UACA2rB,QACA08B,SAAAF,EAAAx8B,EAAA,MACA9zB,QACAywD,WAAAJ,EAAA,GACAz8B,OAAA,IAAA5zB,EAAA,OAAAA,EAAA,GAAAA,EAAA,KAaAytD,EAAAsC,iBAAA,SAAA5nD,EAAA2rB,GACAA,KAAA,GAEA,IAAA48B,GAAAjD,EAAA8B,aAAAz7B,GACA68B,EAAAD,EAAA1wD,MACA4wD,EAAAnD,EAAA8B,aAAApnD,GACA0oD,EAAAD,EAAA5wD,KAEA,IAAA0wD,EAAAJ,QAAA,CACA,SAAAI,EAAAF,UAAA,MAAAroD,EACA,QAGA,UAAAuoD,EAAAF,SACA,MAAAK,GAAA,KAAAF,EAAA,IAAAE,EAAA,KAAAF,EAAA,IAAAE,EAAA,IAAAF,EAAA,EAGA,UAAAD,EAAAF,SACA,MAAAG,GAAA,KACAE,EAAA,KAAAF,EAAA,IAAAC,EAAAh9B,QAAA88B,EAAA98B,OAGA+8B,EAAA,KACAE,EAAA,KAAAF,EAAA,IAAAE,EAAA,IAAAF,EAAA,GAGAE,EAAA,KAAAF,EAAA,GAIA,MAAAxoD,KAAA2rB,GAAA,MAAA3rB,QAKG2kD,WAAA,KAAcgE,IAAA,SAAA1f,EAAA3iD,EAAAD,GAajB,GAAAuiE,KAEAtiE,GAAAD,QAAAuiE,CAEA,IAAAvY,GAAApH,EAAA,YACA3H,EAAA2H,EAAA,YACAI,EAAAJ,EAAA,aAEA,WAEA,GAAA4f,GACAC,CAUA,IARA,oBAAAn8D,UACAk8D,EAAAl8D,OAAA2nC,uBAAA3nC,OAAAo8D,6BACAp8D,OAAAq8D,0BAAAr8D,OAAAs8D,wBAEAH,EAAAn8D,OAAAu8D,sBAAAv8D,OAAAw8D,yBACAx8D,OAAAy8D,4BAAAz8D,OAAA08D,yBAGAR,EAAA,CACA,GAAAS,EAEAT,GAAA,SAAAn4D,GACA44D,EAAAj6D,WAAA,WACAqB,EAAA24C,EAAAzf,QACa,SAGbk/B,EAAA,WACA35D,aAAAm6D,IASAV,EAAAtpB,OAAA,SAAAlxC,GACA,GAAAw7C,IACA2f,IAAA,GACAna,WAAA,EACAoa,gBAAA,GACAC,iBAAA,EACAC,aAAA,EACAC,gBACAC,SAAA,KACAC,cAAA,EACAC,eAAA,KACAC,SAAA,EACA57D,SAAA,GAGA67D,EAAA3gB,EAAA/lB,OAAAsmB,EAAAx7C,EAOA,OALA47D,GAAA5b,MAAA4b,EAAA5b,OAAA,IAAA4b,EAAAT,IACAS,EAAAC,SAAAD,EAAAC,UAAA,IAAAD,EAAAT,IACAS,EAAAE,SAAAF,EAAAE,UAAA,QAAAF,EAAAT,KACAS,EAAAT,IAAA,IAAAS,EAAA5b,MAEA4b,GAQApB,EAAAzmB,IAAA,SAAA6nB,EAAAnoB,GAeA,MAbA,oBAAAmoB,GAAA9G,qBACArhB,EAAAmoB,EACAA,EAAApB,EAAAtpB,UAGA,QAAAjlC,GAAAyxB,GACAk+B,EAAAF,eAAAjB,EAAAxuD,GAEAyxB,GAAAk+B,EAAA77D,SACAy6D,EAAAuB,KAAAH,EAAAnoB,EAAA/V,MAIAk+B,GAaApB,EAAAuB,KAAA,SAAAH,EAAAnoB,EAAA/V,GACA,GAEAsiB,GAFAmV,EAAA1hB,EAAA0hB,OACAnU,EAAA,EAIAwU,GACA7M,UAAAwM,EAAAxM,UAGA1G,GAAAU,QAAAiZ,EAAA,aAAApG,GACAvT,EAAAU,QAAAlP,EAAA,aAAA+hB,GAEAoG,EAAAD,QAEA3b,EAAA4b,EAAA5b,OAGAA,EAAAtiB,EAAAk+B,EAAAJ,UAAAI,EAAA5b,MACA4b,EAAAJ,SAAA99B,EAGAk+B,EAAAL,aAAAl+D,KAAA2iD,GACA4b,EAAAL,aAAAK,EAAAL,aAAAr3D,OAAA03D,EAAAR,iBACApb,EAAAhrB,KAAAC,IAAAziB,MAAA,KAAAopD,EAAAL,cAGAvb,IAAA4b,EAAAC,SAAAD,EAAAC,SAAA7b,EACAA,IAAA4b,EAAAE,SAAAF,EAAAE,SAAA9b,EAGAgB,EAAAhB,EAAA4b,EAAA5b,MAGA4b,EAAA5b,SAIA,IAAA4b,EAAAH,gBACAza,GAAAmU,EAAAhY,UAAAye,EAAAH,eAEA,IAAAtG,EAAAhY,YACA6D,EAAA,GAEA4a,EAAAH,cAAAtG,EAAAhY,UACAye,EAAA5a,aAGA4a,EAAAN,cAAA,EACA59B,EAAAk+B,EAAAP,kBAAA,MACAO,EAAAT,IAAAS,EAAAN,eAAA59B,EAAAk+B,EAAAP,kBAAA,KACAO,EAAAP,iBAAA39B,EACAk+B,EAAAN,aAAA,GAGArZ,EAAAU,QAAAiZ,EAAA,OAAApG,GACAvT,EAAAU,QAAAlP,EAAA,OAAA+hB,GAGA/hB,EAAAC,MAAAwO,YACAzO,EAAAxnC,QACAwnC,EAAAxnC,OAAAw6C,YACAhT,EAAAxnC,OAAAw6C,WAAAhD,OACAhQ,EAAAxnC,OAAAw6C,WAAAhD,MAAAhQ,EAAAxnC,QAIAg2C,EAAAU,QAAAiZ,EAAA,eAAApG,GACAtiB,EAAAsB,OAAAf,EAAAuM,EAAAgB,GACAiB,EAAAU,QAAAiZ,EAAA,cAAApG,GAIA/hB,EAAAxnC,QAAAwnC,EAAAxnC,OAAAw6C,aACAxE,EAAAU,QAAAiZ,EAAA,eAAApG,GACAvT,EAAAU,QAAAlP,EAAA,eAAA+hB,GAEA/hB,EAAAxnC,OAAAw6C,WAAA/S,MAAAD,EAAAxnC,QAEAg2C,EAAAU,QAAAiZ,EAAA,cAAApG,GACAvT,EAAAU,QAAAlP,EAAA,cAAA+hB,IAGAvT,EAAAU,QAAAiZ,EAAA,YAAApG,GACAvT,EAAAU,QAAAlP,EAAA,YAAA+hB,IASAgF,EAAAwB,KAAA,SAAAJ,GACAlB,EAAAkB,EAAAF,iBASAlB,EAAAv4C,MAAA,SAAA25C,EAAAnoB,GACA+mB,EAAAzmB,IAAA6nB,EAAAnoB,SAqHG8iB,WAAA,GAAA0F,WAAA,GAAAzF,WAAA,KAA0C0F,IAAA,SAAArhB,EAAA3iD,EAAAD,GAO7C,GAAA+iD,KAEA9iD,GAAAD,QAAA+iD,CAEA,IAAAiH,GAAApH,EAAA,aAEA,WAEAG,EAAAmhB,qBAAA,IACAnhB,EAAAohB,sBAAA,IACAphB,EAAAqhB,SAAA,GAQArhB,EAAAxG,OAAA,SAAAC,EAAA0I,GAIA,OAHAmf,GAAAnf,MAGAhlD,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,GACAskD,EAAAj3C,EAAA22C,MAAA32C,EAAA22C,MAAA32C,EAAA42C,aAAA52C,EAAA42C,YAGA,QAAA52C,EAAAs2C,MAAA3sC,GAAA,IAAA3J,EAAAs2C,MAAA1sC,EAAA,CAKA,GAAAmtD,GAAAvnC,KAAAC,IAAAzvB,EAAAi3C,UACA+f,EAAAxnC,KAAAupB,IAAA/4C,EAAAi3C,SAGAj3C,GAAAi3C,OAAAzB,EAAAqhB,SAAAE,GAAA,EAAAvhB,EAAAqhB,UAAAG,EAEAh3D,EAAAk3C,eAAA,GAAAl3C,EAAAi3C,OAAAzB,EAAAohB,sBAAAE,GACA92D,EAAAi3D,cAAA,EAEAj3D,EAAAi3D,cAAAj3D,EAAAk3C,gBACA1B,EAAAp0C,IAAApB,GAAA,IACaA,EAAAi3D,aAAA,IACbj3D,EAAAi3D,cAAA,OAhBAzhB,GAAAp0C,IAAApB,GAAA,KA2BAw1C,EAAA2a,gBAAA,SAAAxQ,EAAAhI,GAIA,OAHAmf,GAAAnf,MAGAhlD,EAAA,EAAuBA,EAAAgtD,EAAA/pD,OAAkBjD,IAAA,CACzC,GAAA2tD,GAAAX,EAAAhtD,EAGA,IAAA2tD,EAAAC,SAAA,CAGA,GAAAC,GAAAF,EAAAE,UACAX,EAAAW,EAAAX,MAAArH,OACAsH,EAAAU,EAAAV,MAAAtH,MAGA,MAAAqH,EAAA7I,YAAA8I,EAAA9I,YAAA6I,EAAAnM,UAAAoM,EAAApM,YAGAmM,EAAA7I,YAAA8I,EAAA9I,YAAA,CACA,GAAAkgB,GAAArX,EAAA7I,aAAA6I,EAAAnM,SAAAmM,EAAAC,EACAqX,EAAAD,IAAArX,EAAAC,EAAAD,GAEAqX,EAAAxjB,UAAAyjB,EAAAlgB,OAAAzB,EAAAmhB,qBAAAG,GACAthB,EAAAp0C,IAAA81D,GAAA,OAYA1hB,EAAAp0C,IAAA,SAAApB,EAAAg3C,GACA,GAAAogB,GAAAp3D,EAAAg3C,UAEAA,IACAh3C,EAAAg3C,YAAA,EACAh3C,EAAAi3D,aAAAj3D,EAAAk3C,eAEAl3C,EAAAw2C,gBAAA7sC,EAAA,EACA3J,EAAAw2C,gBAAA5sC,EAAA,EAEA5J,EAAAs4C,aAAA3uC,EAAA3J,EAAA4vC,SAAAjmC,EACA3J,EAAAs4C,aAAA1uC,EAAA5J,EAAA4vC,SAAAhmC,EAEA5J,EAAAu4C,UAAAv4C,EAAAm2C,MACAn2C,EAAA22C,MAAA,EACA32C,EAAA42C,aAAA,EACA52C,EAAAi3C,OAAA,EAEAmgB,GACA3a,EAAAU,QAAAn9C,EAAA,gBAGAA,EAAAg3C,YAAA,EACAh3C,EAAAi3D,aAAA,EAEAG,GACA3a,EAAAU,QAAAn9C,EAAA,mBAOGgxD,WAAA,KAAcqG,IAAA,SAAAhiB,EAAA3iD,EAAAD,GAYjB,GAAAs7C,KAEAr7C,GAAAD,QAAAs7C,CAEA,IAKAR,GALA+H,EAAAD,EAAA,wBACAI,EAAAJ,EAAA,kBACA/zC,EAAA+zC,EAAA,gBACAK,EAAAL,EAAA,sBACAE,EAAAF,EAAA,uBAGA,WAcAtH,EAAAoX,UAAA,SAAAx7C,EAAAC,EAAAkwB,EAAAC,EAAAv/B,GACAA,OAEA,IAAA2qD,IACAjW,MAAA,iBACAU,UAAuBjmC,IAAAC,KACvBwsC,SAAAd,EAAAe,SAAA,WAAAvc,EAAA,QAAAA,EAAA,IAAAC,EAAA,QAAAA,GAGA,IAAAv/B,EAAA88D,QAAA,CACA,GAAAA,GAAA98D,EAAA88D,OACAnS,GAAA/O,SAAAd,EAAAgiB,QAAAnS,EAAA/O,SAAAkhB,EAAAC,OACAD,EAAAE,QAAAF,EAAAG,WAAAH,EAAAI,kBACAl9D,GAAA88D,QAGA,MAAAh2D,GAAAoqC,OAAA+J,EAAA/lB,UAA2Cy1B,EAAA3qD,KAgB3CuzC,EAAA4pB,UAAA,SAAAhuD,EAAAC,EAAAkwB,EAAAC,EAAA69B,EAAAp9D,GACAA,QAEAo9D,GAAA,EACA,IAKAC,GALAC,GAAA,IAAAF,GAAA99B,EAEAi+B,EAAAj+B,EAAA89B,EACAI,EAAAD,EAAAD,EACAG,EAAAD,EAAAD,CAIAF,GADAD,EAAA,GACA,WAAAG,EAAA,KAAAh+B,EAAA,MAAAi+B,EAAA,KAAAj+B,EAAA,MAAAk+B,EAAA,KAEA,WAAAD,EAAA,KAAAj+B,EAAA,MAAAk+B,EAAA,IAGA,IAAAN,IACAzoB,MAAA,iBACAU,UAAuBjmC,IAAAC,KACvBwsC,SAAAd,EAAAe,SAAAwhB,GAGA,IAAAr9D,EAAA88D,QAAA,CACA,GAAAA,GAAA98D,EAAA88D,OACAK,GAAAvhB,SAAAd,EAAAgiB,QAAAK,EAAAvhB,SAAAkhB,EAAAC,OACAD,EAAAE,QAAAF,EAAAG,WAAAH,EAAAI,kBACAl9D,GAAA88D,QAGA,MAAAh2D,GAAAoqC,OAAA+J,EAAA/lB,UAA2CioC,EAAAn9D,KAe3CuzC,EAAAwB,OAAA,SAAA5lC,EAAAC,EAAA2tD,EAAA/8D,EAAA09D,GACA19D,OAEA,IAAA+0C,IACAL,MAAA,cACAoM,aAAAic,EAIAW,MAAA,EACA,IAAAC,GAAA3oC,KAAA4oC,KAAA5oC,KAAAupB,IAAA,GAAAvpB,KAAAC,IAAAyoC,EAAAX,IAMA,OAHAY,GAAA,QACAA,GAAA,GAEApqB,EAAAsqB,QAAA1uD,EAAAC,EAAAuuD,EAAAZ,EAAA9hB,EAAA/lB,UAAmE6f,EAAA/0C,KAenEuzC,EAAAsqB,QAAA,SAAA1uD,EAAAC,EAAAuuD,EAAAZ,EAAA/8D,GAGA,GAFAA,QAEA29D,EAAA,EACA,MAAApqB,GAAAwB,OAAA5lC,EAAAC,EAAA2tD,EAAA/8D,EAMA,QAJA89D,GAAA,EAAA9oC,KAAAuhB,GAAAonB,EACAxmB,EAAA,GACA11B,EAAA,GAAAq8C,EAEA3lE,EAAA,EAAuBA,EAAAwlE,EAAWxlE,GAAA,GAClC,GAAAwjD,GAAAl6B,EAAAtpB,EAAA2lE,EACAC,EAAA/oC,KAAAujB,IAAAoD,GAAAohB,EACAiB,EAAAhpC,KAAAyjB,IAAAkD,GAAAohB,CAEA5lB,IAAA,KAAA4mB,EAAAE,QAAA,OAAAD,EAAAC,QAAA,OAGA,GAAAJ,IACAnpB,MAAA,eACAU,UAAuBjmC,IAAAC,KACvBwsC,SAAAd,EAAAe,SAAA1E,GAGA,IAAAn3C,EAAA88D,QAAA,CACA,GAAAA,GAAA98D,EAAA88D,OACAe,GAAAjiB,SAAAd,EAAAgiB,QAAAe,EAAAjiB,SAAAkhB,EAAAC,OACAD,EAAAE,QAAAF,EAAAG,WAAAH,EAAAI,kBACAl9D,GAAA88D,QAGA,MAAAh2D,GAAAoqC,OAAA+J,EAAA/lB,UAA2C2oC,EAAA79D,KAuB3CuzC,EAAA0F,aAAA,SAAA9pC,EAAAC,EAAA8uD,EAAAl+D,EAAAm+D,EAAAC,EAAAC,GACAtrB,IACAA,EAAAkI,EAAAyZ,eAAA,wBAGA,IAAAlvD,GACAiE,EACA60D,EACA1iB,EACAzjD,EACAstD,EACA32C,EACAG,EACAI,CAkBA,KAhBArP,QACAyJ,KAEA00D,EAAA,oBAAAA,MACAC,EAAA,oBAAAA,KAAA,IACAC,EAAA,oBAAAA,KAAA,GAEAtrB,GACAkI,EAAAp6C,KAAA,wGAIAo6C,EAAA51C,QAAA64D,EAAA,MACAA,OAGAjvD,EAAA,EAAmBA,EAAAivD,EAAA9iE,OAAuB6T,GAAA,EAI1C,GAHA2sC,EAAAsiB,EAAAjvD,IACAqvD,EAAAxjB,EAAAwjB,SAAA1iB,MAEA7I,EAEA6I,EADA0iB,EACAxjB,EAAA6E,cAAA/D,GAGAd,EAAA8E,KAAAhE,GAGAnyC,EAAApM,MACA+3C,UAA+BjmC,IAAAC,KAC/BwsC,iBAEa,CAEb,GAAA2iB,GAAA3iB,EAAAthD,IAAA,SAAAmqD,GACA,OAAAA,EAAAt1C,EAAAs1C,EAAAr1C,IAIA2jC,GAAAyrB,QAAAD,IACA,IAAAH,GACArrB,EAAA0rB,sBAAAF,EAAAH,EAGA,IAAAM,GAAA3rB,EAAA4rB,YAAAJ,EAGA,KAAApmE,EAAA,EAA2BA,EAAAumE,EAAAtjE,OAAuBjD,IAAA,CAClD,GAAAymE,GAAAF,EAAAvmE,GAGA0mE,EAAAD,EAAAtkE,IAAA,SAAAshD,GACA,OACAzsC,EAAAysC,EAAA,GACAxsC,EAAAwsC,EAAA,KAKAyiB,GAAA,GAAAvjB,EAAA9P,KAAA6zB,GAAAR,GAIA50D,EAAApM,MACA+3C,SAAA0F,EAAA0E,OAAAqf,GACAjjB,SAAAijB,KAOA,IAAA1mE,EAAA,EAAmBA,EAAAsR,EAAArO,OAAkBjD,IACrCsR,EAAAtR,GAAA2O,EAAAoqC,OAAA+J,EAAA/lB,OAAAzrB,EAAAtR,GAAA6H,GAIA,IAAAm+D,EAAA,CAGA,IAAAhmE,EAAA,EAAuBA,EAAAsR,EAAArO,OAAkBjD,IAAA,CACzC,GAAAutD,GAAAj8C,EAAAtR,EAEA,KAAAstD,EAAAttD,EAAA,EAA+BstD,EAAAh8C,EAAArO,OAAkBqqD,IAAA,CACjD,GAAAE,GAAAl8C,EAAAg8C,EAEA,IAAAvK,EAAAsK,SAAAE,EAAA7H,OAAA8H,EAAA9H,QAAA,CACA,GAAAihB,GAAApZ,EAAA9J,SACAmjB,EAAApZ,EAAA/J,QAGA,KAAA9sC,EAAA,EAAmCA,EAAA42C,EAAA9J,SAAAxgD,OAA2B0T,IAC9D,IAAAO,EAAA,EAAuCA,EAAAs2C,EAAA/J,SAAAxgD,OAA2BiU,IAAA,CAElE,GAAA2S,GAAA+4B,EAAAikB,iBAAAjkB,EAAAkF,IAAA6e,GAAAhwD,EAAA,GAAAgwD,EAAA1jE,QAAA2jE,EAAA1vD,KACAkH,EAAAwkC,EAAAikB,iBAAAjkB,EAAAkF,IAAA6e,EAAAhwD,GAAAiwD,GAAA1vD,EAAA,GAAA0vD,EAAA3jE,SAGA4mB,GApBA,GAoBAzL,EApBA,IAqBAuoD,EAAAhwD,GAAAmwD,YAAA,EACAF,EAAA1vD,GAAA4vD,YAAA,OAUA,MAAAx1D,GAAArO,OAAA,GAEAoK,EAAAsB,EAAAoqC,OAAA+J,EAAA/lB,QAA8CzrB,QAAAvF,MAAA,IAAwBlE,IACtE8G,EAAAg4C,YAAAt5C,GAAoC2J,IAAAC,MAEpC5J,GAEAiE,EAAA,SAMGysD,eAAA,EAAAzU,iBAAA,GAAAG,qBAAA,GAAAC,qBAAA,GAAAC,uBAAA,KAA+God,IAAA,SAAArkB,EAAA3iD,EAAAD,GAUlH,GAAAknE,KAEAjnE,GAAAD,QAAAknE,CAEA,IAAA3rB,GAAAqH,EAAA,qBACA8U,EAAA9U,EAAA,4BACAI,EAAAJ,EAAA,kBACA/zC,EAAA+zC,EAAA,gBACAtH,EAAAsH,EAAA,aAEA,WAeAskB,EAAAj+D,MAAA,SAAA68D,EAAAC,EAAAr1B,EAAAy2B,EAAAC,EAAAC,EAAAh9D,GAOA,OAHAi9D,GAHAr+D,EAAAsyC,EAAAtC,QAAsCwD,MAAA,UACtCvlC,EAAA4uD,EACA3uD,EAAA4uD,EAEA7lE,EAAA,EAEA6uD,EAAA,EAAyBA,EAAAoY,EAAYpY,IAAA,CAGrC,OAFAwY,GAAA,EAEAjX,EAAA,EAAgCA,EAAA5f,EAAkB4f,IAAA,CAClD,GAAA/iD,GAAAlD,EAAA6M,EAAAC,EAAAm5C,EAAAvB,EAAAuY,EAAApnE,EAEA,IAAAqN,EAAA,CACA,GAAAi6D,GAAAj6D,EAAAq4C,OAAAU,IAAAnvC,EAAA5J,EAAAq4C,OAAA5oB,IAAA7lB,EACAswD,EAAAl6D,EAAAq4C,OAAAU,IAAApvC,EAAA3J,EAAAq4C,OAAA5oB,IAAA9lB,CAEAswD,GAAAD,IACAA,EAAAC,GAEA34D,EAAA24C,UAAAj6C,GAA0C2J,EAAA,GAAAuwD,EAAAtwD,EAAA,GAAAqwD,IAE1CtwD,EAAA3J,EAAAq4C,OAAAU,IAAApvC,EAAAkwD,EAEA7rB,EAAAoP,QAAA1hD,EAAAsE,GAEA+5D,EAAA/5D,EACArN,GAAA,MAEAgX,IAAAkwD,EAIAjwD,GAAAowD,EAAAF,EACAnwD,EAAA4uD,EAGA,MAAA78D,IAcAi+D,EAAA/K,MAAA,SAAA9R,EAAAqd,EAAAC,EAAAC,EAAAC,EAAA9/D,GAGA,OAFAy0C,GAAA6N,EAAA7N,OAEAt8C,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAktD,GAAA5Q,EAAAt8C,EAAA,GACAmtD,EAAA7Q,EAAAt8C,GACA4nE,EAAA1a,EAAAxH,OAAAU,IAAAnvC,EAAAi2C,EAAAxH,OAAA5oB,IAAA7lB,EACA4wD,EAAA3a,EAAAxH,OAAAU,IAAApvC,EAAAk2C,EAAAxH,OAAA5oB,IAAA9lB,EACA8wD,EAAA3a,EAAAzH,OAAAU,IAAAnvC,EAAAk2C,EAAAzH,OAAA5oB,IAAA7lB,EACA8wD,EAAA5a,EAAAzH,OAAAU,IAAApvC,EAAAm2C,EAAAzH,OAAA5oB,IAAA9lB,EAEAqsC,GACA6J,QACA0K,QAAyB5gD,EAAA6wD,EAAAL,EAAAvwD,EAAA2wD,EAAAH,GACzBta,QACA0K,QAAyB7gD,EAAA+wD,EAAAL,EAAAzwD,EAAA6wD,EAAAH,IAGzB3rB,EAAA8G,EAAA/lB,OAAAsmB,EAAAx7C,EAEAwzC,GAAAqP,cAAAP,EAAAqN,EAAAze,OAAAiD,IAKA,MAFAmO,GAAA5N,OAAA,SAEA4N,GAaA6c,EAAAgB,KAAA,SAAA7d,EAAA3Z,EAAAy2B,EAAAgB,EAAApgE,GACA,GACAgnD,GACA7b,EACAka,EACAC,EACA+a,EALA5rB,EAAA6N,EAAA7N,MAOA,KAAAuS,EAAA,EAAqBA,EAAAoY,EAAYpY,IAAA,CACjC,IAAA7b,EAAA,EAAyBA,EAAAxC,EAAewC,IACxCka,EAAA5Q,EAAAtJ,EAAA,EAAA6b,EAAAre,GACA2c,EAAA7Q,EAAAtJ,EAAA6b,EAAAre,GACA6K,EAAAqP,cAAAP,EAAAqN,EAAAze,OAAA+J,EAAA/lB,QAAoFmwB,QAAAC,SAA6BtlD,IAGjH,IAAAgnD,EAAA,EACA,IAAA7b,EAAA,EAA6BA,EAAAxC,EAAewC,IAC5Cka,EAAA5Q,EAAAtJ,GAAA6b,EAAA,GAAAre,GACA2c,EAAA7Q,EAAAtJ,EAAA6b,EAAAre,GACA6K,EAAAqP,cAAAP,EAAAqN,EAAAze,OAAA+J,EAAA/lB,QAAwFmwB,QAAAC,SAA6BtlD,KAErHogE,GAAAj1B,EAAA,IACAk1B,EAAA5rB,EAAAtJ,EAAA,GAAA6b,EAAA,GAAAre,GACA6K,EAAAqP,cAAAP,EAAAqN,EAAAze,OAAA+J,EAAA/lB,QAA4FmwB,MAAAgb,EAAA/a,SAA6BtlD,MAGzHogE,GAAAj1B,EAAAxC,EAAA,IACA03B,EAAA5rB,EAAAtJ,EAAA,GAAA6b,EAAA,GAAAre,GACA6K,EAAAqP,cAAAP,EAAAqN,EAAAze,OAAA+J,EAAA/lB,QAA4FmwB,MAAAgb,EAAA/a,SAA6BtlD,MAQzH,MAFAsiD,GAAA5N,OAAA,QAEA4N,GAgBA6c,EAAAmB,QAAA,SAAAvC,EAAAC,EAAAr1B,EAAAy2B,EAAAC,EAAAC,EAAAh9D,GACA,MAAA68D,GAAAj+D,MAAA68D,EAAAC,EAAAr1B,EAAAy2B,EAAAC,EAAAC,EAAA,SAAAnwD,EAAAC,EAAAm5C,EAAAvB,EAAAuY,EAAApnE,GACA,GAAAooE,GAAAvrC,KAAAC,IAAAmqC,EAAApqC,KAAA4oC,KAAAj1B,EAAA,IACA63B,EAAAjB,IAAA1hB,OAAAU,IAAApvC,EAAAowD,EAAA1hB,OAAA5oB,IAAA9lB,EAAA,CAEA,MAAA63C,EAAAuZ,GAAA,CAIAvZ,EAAAuZ,EAAAvZ,CAEA,IAAA/kC,GAAA+kC,EACA7kC,EAAAwmB,EAAA,EAAAqe,CAEA,MAAAuB,EAAAtmC,GAAAsmC,EAAApmC,GAAA,CAIA,IAAAhqB,GACA2O,EAAA24C,UAAA8f,GAA0CpwD,GAAAo5C,GAAA5f,EAAA,aAAA63B,EAAApxD,EAAA,GAK1C,OAAA9M,GAAAy7D,GAFAwB,EAAAhX,EAAAiY,EAAA,GAEAjY,EAAA8W,EAAAjwD,EAAAm5C,EAAAvB,EAAAuY,EAAApnE,QAcAgnE,EAAAsB,cAAA,SAAA1C,EAAAC,EAAA3gC,EAAA4X,EAAA75C,GAGA,OAFAqlE,GAAAjtB,EAAAtC,QAA8CwD,MAAA,mBAE9Cv8C,EAAA,EAAuBA,EAAAklC,EAAYllC,IAAA,CACnC,GACA48C,GAAAxB,EAAAwB,OAAAgpB,EAAA5lE,GADA,IACA88C,GAAA+oB,EAAA5iE,EAAA65C,GAC6BmJ,QAAAvW,IAAAkS,YAAA,EAAAC,SAAA,EAAA6C,YAAA,KAAAK,KAAA,IAC7B/I,EAAAwb,EAAAze,QAAgD6e,QAAU5gD,EAAA4uD,EAAA5lE,GAH1D,IAG0D88C,GAAA7lC,EAAA4uD,GAAyC1Y,MAAAvQ,GAEnGvB,GAAAoP,QAAA6d,EAAA1rB,GACAvB,EAAAqP,cAAA4d,EAAAtsB,GAGA,MAAAssB,IAaAtB,EAAAuB,IAAA,SAAA3C,EAAAC,EAAA1+B,EAAAC,EAAAohC,GACA,GAAA1jB,GAAAn2C,EAAA42C,WAAA,GAEAkjB,EAAA,IAAAthC,EADA,GAEAuhC,EAAA,GAAAvhC,EAFA,GAKAohC,EAAAltB,EAAAtC,QAAoCwD,MAAA,QACpClvC,EAAA+tC,EAAAoX,UAAAoT,EAAAC,EAAA1+B,EAAAC,GACAud,iBACAG,SAEA6f,SACAC,OAAA,GAAAx9B,GAEAod,QAAA,OAGAmkB,EAAAvtB,EAAAwB,OAAAgpB,EAAA6C,EAAA5C,EAbA,EAaA2C,GACA7jB,iBACAG,SAEAjD,SAAA,KAGA+mB,EAAAxtB,EAAAwB,OAAAgpB,EAAA8C,EAAA7C,EApBA,EAoBA2C,GACA7jB,iBACAG,SAEAjD,SAAA,KAGAgnB,EAAArR,EAAAze,QACAoU,MAAA9/C,EACAwqD,QAAqB7gD,EAAAyxD,EAAAxxD,EA7BrB,GA8BAi2C,MAAAyb,EACA1sB,UAAA,EACAh5C,OAAA,IAGA6lE,EAAAtR,EAAAze,QACAoU,MAAA9/C,EACAwqD,QAAqB7gD,EAAA0xD,EAAAzxD,EArCrB,GAsCAi2C,MAAA0b,EACA3sB,UAAA,EACAh5C,OAAA,GASA,OANAo4C,GAAAoP,QAAA8d,EAAAl7D,GACAguC,EAAAoP,QAAA8d,EAAAI,GACAttB,EAAAoP,QAAA8d,EAAAK,GACAvtB,EAAAqP,cAAA6d,EAAAM,GACAxtB,EAAAqP,cAAA6d,EAAAO,GAEAP,GAkBAvB,EAAA+B,SAAA,SAAAnD,EAAAC,EAAAr1B,EAAAy2B,EAAAC,EAAAC,EAAAc,EAAAe,EAAAC,EAAAC,GACAD,EAAAnmB,EAAA/lB,QAAyCkpB,QAAAvW,KAAoBu5B,GAC7DC,EAAApmB,EAAA/lB,QAA2Ckf,UAAA,GAAAnoC,QAA0BjE,KAAA,OAAAuoD,SAAA,IAAiC8Q,EAEtG,IAAAH,GAAA/B,EAAAj+D,MAAA68D,EAAAC,EAAAr1B,EAAAy2B,EAAAC,EAAAC,EAAA,SAAAnwD,EAAAC,GACA,MAAAmkC,GAAAwB,OAAA5lC,EAAAC,EAAA+xD,EAAAC,IAOA,OAJAjC,GAAAgB,KAAAe,EAAAv4B,EAAAy2B,EAAAgB,EAAAiB,GAEAH,EAAAxsB,MAAA,YAEAwsB,QAKGhL,eAAA,EAAApE,oBAAA,EAAAzN,2BAAA,GAAA5C,iBAAA,GAAA6f,WAAA,KAAuGC,IAAA,SAAA1mB,EAAA3iD,EAAAD,GAO1G,GAAAkjD,KAEAjjD,GAAAD,QAAAkjD,CAEA,IAAAJ,GAAAF,EAAA,sBACAI,EAAAJ,EAAA,mBAEA,WAQAM,EAAAlC,aAAA,SAAA2C,GAIA,OAHAsC,MAGA/lD,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAAA,CAC5C,GAAAstD,IAAAttD,EAAA,GAAAyjD,EAAAxgD,OACAowD,EAAAzQ,EAAAymB,WACAryD,EAAAysC,EAAA6J,GAAAr2C,EAAAwsC,EAAAzjD,GAAAiX,EACAA,EAAAwsC,EAAAzjD,GAAAgX,EAAAysC,EAAA6J,GAAAt2C,IAEAsyD,EAAA,IAAAjW,EAAAp8C,EAAAy4B,IAAA2jB,EAAAr8C,EAAAq8C,EAAAp8C,CAGAqyD,KAAAxD,QAAA,GAAAv2D,WACAw2C,EAAAujB,GAAAjW,EAGA,MAAAvQ,GAAA52C,OAAA65C,IASA/C,EAAA8C,OAAA,SAAAC,EAAAvC,GACA,OAAAA,EAMA,OAHApD,GAAAvjB,KAAAujB,IAAAoD,GACAlD,EAAAzjB,KAAAyjB,IAAAkD,GAEAxjD,EAAA,EAAuBA,EAAA+lD,EAAA9iD,OAAiBjD,IAAA,CACxC,GACA4lE,GADArP,EAAAxQ,EAAA/lD,EAEA4lE,GAAArP,EAAAv/C,EAAAopC,EAAAmW,EAAAt/C,EAAAqpC,EACAiW,EAAAt/C,EAAAs/C,EAAAv/C,EAAAspC,EAAAiW,EAAAt/C,EAAAmpC,EACAmW,EAAAv/C,EAAA4uD,SAMGtc,iBAAA,GAAAI,qBAAA,KAA4C6f,IAAA,SAAA7mB,EAAA3iD,EAAAD,GAO/C,GAAAijD,KAEAhjD,GAAAD,QAAAijD,EAEA,WAQAA,EAAAhK,OAAA,SAAA0K,GACA,GAAAiC,IACA5oB,KAAkB9lB,EAAA,EAAAC,EAAA,GAClBmvC,KAAkBpvC,EAAA,EAAAC,EAAA,GAMlB,OAHAwsC,IACAV,EAAA1G,OAAAqJ,EAAAjC,GAEAiC,GAUA3C,EAAA1G,OAAA,SAAAqJ,EAAAjC,EAAAS,GACAwB,EAAA5oB,IAAA9lB,EAAA04B,IACAgW,EAAAU,IAAApvC,GAAA04B,IACAgW,EAAA5oB,IAAA7lB,EAAAy4B,IACAgW,EAAAU,IAAAnvC,GAAAy4B,GAEA,QAAA1vC,GAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAAA,CAC5C,GAAAssD,GAAA7I,EAAAzjD,EACAssD,GAAAt1C,EAAA0uC,EAAAU,IAAApvC,IAAA0uC,EAAAU,IAAApvC,EAAAs1C,EAAAt1C,GACAs1C,EAAAt1C,EAAA0uC,EAAA5oB,IAAA9lB,IAAA0uC,EAAA5oB,IAAA9lB,EAAAs1C,EAAAt1C,GACAs1C,EAAAr1C,EAAAyuC,EAAAU,IAAAnvC,IAAAyuC,EAAAU,IAAAnvC,EAAAq1C,EAAAr1C,GACAq1C,EAAAr1C,EAAAyuC,EAAA5oB,IAAA7lB,IAAAyuC,EAAA5oB,IAAA7lB,EAAAq1C,EAAAr1C,GAGAitC,IACAA,EAAAltC,EAAA,EACA0uC,EAAAU,IAAApvC,GAAAktC,EAAAltC,EAEA0uC,EAAA5oB,IAAA9lB,GAAAktC,EAAAltC,EAGAktC,EAAAjtC,EAAA,EACAyuC,EAAAU,IAAAnvC,GAAAitC,EAAAjtC,EAEAyuC,EAAA5oB,IAAA7lB,GAAAitC,EAAAjtC,IAYA8rC,EAAA3K,SAAA,SAAAsN,EAAAyC,GACA,MAAAA,GAAAnxC,GAAA0uC,EAAA5oB,IAAA9lB,GAAAmxC,EAAAnxC,GAAA0uC,EAAAU,IAAApvC,GACAmxC,EAAAlxC,GAAAyuC,EAAA5oB,IAAA7lB,GAAAkxC,EAAAlxC,GAAAyuC,EAAAU,IAAAnvC,GAUA8rC,EAAAsK,SAAA,SAAAmc,EAAAC,GACA,MAAAD,GAAA1sC,IAAA9lB,GAAAyyD,EAAArjB,IAAApvC,GAAAwyD,EAAApjB,IAAApvC,GAAAyyD,EAAA3sC,IAAA9lB,GACAwyD,EAAApjB,IAAAnvC,GAAAwyD,EAAA3sC,IAAA7lB,GAAAuyD,EAAA1sC,IAAA7lB,GAAAwyD,EAAArjB,IAAAnvC,GASA8rC,EAAAuE,UAAA,SAAA5B,EAAAgkB,GACAhkB,EAAA5oB,IAAA9lB,GAAA0yD,EAAA1yD,EACA0uC,EAAAU,IAAApvC,GAAA0yD,EAAA1yD,EACA0uC,EAAA5oB,IAAA7lB,GAAAyyD,EAAAzyD,EACAyuC,EAAAU,IAAAnvC,GAAAyyD,EAAAzyD,GASA8rC,EAAAp2C,MAAA,SAAA+4C,EAAAzI,GACA,GAAA5Q,GAAAqZ,EAAAU,IAAApvC,EAAA0uC,EAAA5oB,IAAA9lB,EACAu1B,EAAAmZ,EAAAU,IAAAnvC,EAAAyuC,EAAA5oB,IAAA7lB,CAEAyuC,GAAA5oB,IAAA9lB,EAAAimC,EAAAjmC,EACA0uC,EAAAU,IAAApvC,EAAAimC,EAAAjmC,EAAAq1B,EACAqZ,EAAA5oB,IAAA7lB,EAAAgmC,EAAAhmC,EACAyuC,EAAAU,IAAAnvC,EAAAgmC,EAAAhmC,EAAAs1B,WAKIxC,IAAA,SAAA2Y,EAAA3iD,EAAAD,GAWJ,GAAA6pE,KAEA5pE,GAAAD,QAAA6pE,CAEA,IACA7mB,IADAJ,EAAA,sBACAA,EAAA,oBAEA,WAaAinB,EAAAC,eAAA,SAAA5qB,EAAA6qB,GACA,oBAAAzjE,SAAA,cAAAA,SACA08C,EAAAp6C,KAAA,sEAIA,IAAA1I,GAAA8pE,EAAAniB,EAAAQ,EAAA4hB,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EADAC,KACAtnE,EAAA,EAAA+T,EAAA,EAAAC,EAAA,CAEA4yD,MAAA,EAEA,IAAAW,GAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAD,EAAA,OAAAA,EAAA,CAGA,KAAAR,GAAAM,GAAAN,EAAAnzD,GAAA0zD,GAAAP,EAAAlzD,EAAA,CACAkzD,GAAAS,GACAP,EAAAF,EAAAnzD,EACAszD,EAAAH,EAAAlzD,IAEAozD,EAAA,EACAC,EAAA,EAGA,IAAAniB,IACAnxC,EAAAqzD,EAAAI,EACAxzD,EAAAqzD,EAAAI,IAIAE,GAAAT,IACAA,EAAAhiB,GAGAoiB,EAAArlE,KAAAijD,GAEAnxC,EAAAqzD,EAAAI,EACAxzD,EAAAqzD,EAAAI,IAIAG,EAAA,SAAAd,GACA,GAAAe,GAAAf,EAAAgB,oBAAAx6D,aAGA,UAAAu6D,EAAA,CAIA,OAAAA,GAEA,QACA,QACA,QACA,QACA,QACA,QACA9zD,EAAA+yD,EAAA/yD,EACAC,EAAA8yD,EAAA9yD,CACA,MACA,SACAD,EAAA+yD,EAAA/yD,CACA,MACA,SACAC,EAAA8yD,EAAA9yD,EAIAuzD,EAAAxzD,EAAAC,EAAA8yD,EAAAY,cAWA,KAPAhB,EAAAqB,mBAAAhsB,GAGA2I,EAAA3I,EAAAR,iBAGAwrB,KACAhqE,EAAA,EAAmBA,EAAAg/C,EAAAisB,YAAAC,cAAoClrE,GAAA,EACvDgqE,EAAA9kE,KAAA85C,EAAAisB,YAAAE,QAAAnrE,GAKA,KAHAiqE,EAAAD,EAAAnuD,SAGA5Y,EAAA0kD,GAAA,CAMA,GAJAyiB,EAAAprB,EAAAosB,mBAAAnoE,IACA8mE,EAAAC,EAAAI,KAGAF,EAAA,CACA,KAAAD,EAAAhnE,QAAAgnE,EAAA,IAAAF,GACAc,EAAAZ,EAAAt9D,QAEAu9D,GAAAH,EAKA,OAAAA,EAAAgB,oBAAAx6D,eAEA,QACA,QACA,QACA,QACA,QACA43C,EAAAnJ,EAAAH,iBAAA57C,GACAunE,EAAAriB,EAAAnxC,EAAAmxC,EAAAlxC,EAAA,GAMAhU,GAAA4mE,EAIA,IAAA7pE,EAAA,EAAA8pE,EAAAG,EAAAhnE,OAA8CjD,EAAA8pE,IAAQ9pE,EACtD6qE,EAAAZ,EAAAjqE,GAEA,OAAAuqE,IAGAZ,EAAAqB,mBAAA,SAAAhsB,GAQA,OAHAqsB,GAAAC,EAAAlG,EAAAmG,EAAAlG,EAAAmG,EAAAC,EAAAzsB,EAAAisB,YACAj0D,EAAA,EAAAC,EAAA,EAAAy0D,EAAAD,EAAAP,cAEAlrE,EAAA,EAAuBA,EAAA0rE,IAAS1rE,EAAA,CAChC,GAAA2rE,GAAAF,EAAAN,QAAAnrE,GACA8qE,EAAAa,EAAAZ,mBAEA,kBAAA3+D,KAAA0+D,GACA,KAAAa,KAAA30D,EAAA20D,EAAA30D,GACA,KAAA20D,KAAA10D,EAAA00D,EAAA10D,OASA,QAPA,MAAA00D,KAAAvG,EAAApuD,EAAA20D,EAAAvG,IACA,MAAAuG,KAAAtG,EAAAruD,EAAA20D,EAAAtG,IACA,MAAAsG,KAAAJ,EAAAt0D,EAAA00D,EAAAJ,IACA,MAAAI,KAAAH,EAAAv0D,EAAA00D,EAAAH,IACA,KAAAG,KAAA30D,GAAA20D,EAAA30D,GACA,KAAA20D,KAAA10D,GAAA00D,EAAA10D,GAEA6zD,GAEA,QACAW,EAAAG,YAAA5sB,EAAA6sB,0BAAA70D,EAAAC,GAAAjX,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAA8sB,0BAAA90D,EAAAC,GAAAjX,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAA+sB,oCAAA/0D,GAAAhX,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAAgtB,kCAAA/0D,GAAAjX,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAAitB,gCAAAj1D,EAAAC,EAAAmuD,EAAAmG,EAAAlG,EAAAmG,GAAAxrE,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAAktB,sCAAAl1D,EAAAC,EAAAouD,EAAAmG,GAAAxrE,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAAmtB,oCAAAn1D,EAAAC,EAAAmuD,EAAAmG,GAAAvrE,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAAotB,0CAAAp1D,EAAAC,GAAAjX,EACA,MACA,SACAyrE,EAAAG,YAAA5sB,EAAAqtB,uBAAAr1D,EAAAC,EAAA00D,EAAAW,GAAAX,EAAAY,GAAAZ,EAAAnoB,MAAAmoB,EAAAa,aAAAb,EAAAc,WAAAzsE,EACA,MACA,SACA,QACAgX,EAAAq0D,EACAp0D,EAAAq0D,EAMA,KAAAR,GAAA,KAAAA,IACAO,EAAAr0D,EACAs0D,EAAAr0D,UAMGqyC,iBAAA,GAAAG,qBAAA,KAA4CijB,IAAA,SAAAhqB,EAAA3iD,EAAAD,GAa/C,GAAA8iD,KAEA7iD,GAAAD,QAAA8iD,EAEA,WASAA,EAAA7J,OAAA,SAAA/hC,EAAAC,GACA,OAAgBD,KAAA,EAAAC,KAAA,IAShB2rC,EAAAxwC,MAAA,SAAAs3D,GACA,OAAgB1yD,EAAA0yD,EAAA1yD,EAAAC,EAAAyyD,EAAAzyD,IAShB2rC,EAAAoF,UAAA,SAAA0hB,GACA,MAAA7sC,MAAA8vC,KAAAjD,EAAA1yD,EAAA0yD,EAAA1yD,EAAA0yD,EAAAzyD,EAAAyyD,EAAAzyD,IASA2rC,EAAAikB,iBAAA,SAAA6C,GACA,MAAAA,GAAA1yD,EAAA0yD,EAAA1yD,EAAA0yD,EAAAzyD,EAAAyyD,EAAAzyD,GAWA2rC,EAAAkD,OAAA,SAAA4jB,EAAAlmB,EAAAopB,GACA,GAAAxsB,GAAAvjB,KAAAujB,IAAAoD,GAAAlD,EAAAzjB,KAAAyjB,IAAAkD,EACAopB,UACA,IAAA51D,GAAA0yD,EAAA1yD,EAAAopC,EAAAspB,EAAAzyD,EAAAqpC,CAGA,OAFAssB,GAAA31D,EAAAyyD,EAAA1yD,EAAAspC,EAAAopB,EAAAzyD,EAAAmpC,EACAwsB,EAAA51D,IACA41D,GAYAhqB,EAAAmF,YAAA,SAAA2hB,EAAAlmB,EAAA2E,EAAAykB,GACA,GAAAxsB,GAAAvjB,KAAAujB,IAAAoD,GAAAlD,EAAAzjB,KAAAyjB,IAAAkD,EACAopB,UACA,IAAA51D,GAAAmxC,EAAAnxC,IAAA0yD,EAAA1yD,EAAAmxC,EAAAnxC,GAAAopC,GAAAspB,EAAAzyD,EAAAkxC,EAAAlxC,GAAAqpC,EAGA,OAFAssB,GAAA31D,EAAAkxC,EAAAlxC,IAAAyyD,EAAA1yD,EAAAmxC,EAAAnxC,GAAAspC,GAAAopB,EAAAzyD,EAAAkxC,EAAAlxC,GAAAmpC,GACAwsB,EAAA51D,IACA41D,GASAhqB,EAAAymB,UAAA,SAAAK,GACA,GAAA1hB,GAAApF,EAAAoF,UAAA0hB,EACA,YAAA1hB,GACoBhxC,EAAA,EAAAC,EAAA,IACJD,EAAA0yD,EAAA1yD,EAAAgxC,EAAA/wC,EAAAyyD,EAAAzyD,EAAA+wC,IAUhBpF,EAAAkR,IAAA,SAAA+Y,EAAAC,GACA,MAAAD,GAAA71D,EAAA81D,EAAA91D,EAAA61D,EAAA51D,EAAA61D,EAAA71D,GAUA2rC,EAAAwR,MAAA,SAAAyY,EAAAC,GACA,MAAAD,GAAA71D,EAAA81D,EAAA71D,EAAA41D,EAAA51D,EAAA61D,EAAA91D,GAWA4rC,EAAAmqB,OAAA,SAAAF,EAAAC,EAAAE,GACA,OAAAF,EAAA91D,EAAA61D,EAAA71D,IAAAg2D,EAAA/1D,EAAA41D,EAAA51D,IAAA61D,EAAA71D,EAAA41D,EAAA51D,IAAA+1D,EAAAh2D,EAAA61D,EAAA71D,IAWA4rC,EAAAlqB,IAAA,SAAAm0C,EAAAC,EAAAF,GAIA,MAHAA,WACAA,EAAA51D,EAAA61D,EAAA71D,EAAA81D,EAAA91D,EACA41D,EAAA31D,EAAA41D,EAAA51D,EAAA61D,EAAA71D,EACA21D,GAWAhqB,EAAAkF,IAAA,SAAA+kB,EAAAC,EAAAF,GAIA,MAHAA,WACAA,EAAA51D,EAAA61D,EAAA71D,EAAA81D,EAAA91D,EACA41D,EAAA31D,EAAA41D,EAAA51D,EAAA61D,EAAA71D,EACA21D,GAUAhqB,EAAAwG,KAAA,SAAAsgB,EAAAuD,GACA,OAAgBj2D,EAAA0yD,EAAA1yD,EAAAi2D,EAAAh2D,EAAAyyD,EAAAzyD,EAAAg2D,IAUhBrqB,EAAAyG,IAAA,SAAAqgB,EAAAuD,GACA,OAAgBj2D,EAAA0yD,EAAA1yD,EAAAi2D,EAAAh2D,EAAAyyD,EAAAzyD,EAAAg2D,IAUhBrqB,EAAA+R,KAAA,SAAA+U,EAAAwD,GAEA,MADAA,IAAA,IAAAA,GAAA,KACgBl2D,EAAAk2D,GAAAxD,EAAAzyD,IAAAi2D,EAAAxD,EAAA1yD,IAShB4rC,EAAA+T,IAAA,SAAA+S,GACA,OAAgB1yD,GAAA0yD,EAAA1yD,EAAAC,GAAAyyD,EAAAzyD,IAUhB2rC,EAAAY,MAAA,SAAAqpB,EAAAC,GACA,MAAAjwC,MAAAswC,MAAAL,EAAA71D,EAAA41D,EAAA51D,EAAA61D,EAAA91D,EAAA61D,EAAA71D,IASA4rC,EAAA6Q,OACA7Q,EAAA7J,SAAA6J,EAAA7J,SACA6J,EAAA7J,SAAA6J,EAAA7J,SACA6J,EAAA7J,SAAA6J,EAAA7J,kBAIIq0B,IAAA,SAAA1qB,EAAA3iD,EAAAD,GAWJ,GAAA6iD,KAEA5iD,GAAAD,QAAA6iD,CAEA,IAAAC,GAAAF,EAAA,sBACAI,EAAAJ,EAAA,mBAEA,WAmBAC,EAAA5J,OAAA,SAAAwxB,EAAAl9D,GAGA,OAFAo2C,MAEAzjD,EAAA,EAAuBA,EAAAuqE,EAAAtnE,OAAmBjD,IAAA,CAC1C,GAAAmoD,GAAAoiB,EAAAvqE,GACAssD,GACAt1C,EAAAmxC,EAAAnxC,EACAC,EAAAkxC,EAAAlxC,EACApN,MAAA7J,EACAqN,OACAy5D,YAAA,EAGArjB,GAAAv+C,KAAAonD,GAGA,MAAA7I,IAYAd,EAAAe,SAAA,SAAA1E,EAAA3xC,GACA,GAAAggE,GAAA,yCACA9C,IAMA,OAJAvrB,GAAAl4C,QAAAumE,EAAA,SAAAC,EAAAt2D,EAAAC,GACAszD,EAAArlE,MAAyB8R,EAAAu2D,WAAAv2D,GAAAC,EAAAs2D,WAAAt2D,OAGzB0rC,EAAA5J,OAAAwxB,EAAAl9D,IASAs1C,EAAA0E,OAAA,SAAA5D,GAOA,OAJA2Q,GACAqG,EACAnN,EAJAza,EAAA8P,EAAA9P,KAAA4Q,GAAA,GACA4D,GAAsBrwC,EAAA,EAAAC,EAAA,GAKtBjX,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5CstD,GAAAttD,EAAA,GAAAyjD,EAAAxgD,OACAmxD,EAAAxR,EAAAwR,MAAA3Q,EAAAzjD,GAAAyjD,EAAA6J,IACAmN,EAAA7X,EAAAwG,KAAAxG,EAAAlqB,IAAA+qB,EAAAzjD,GAAAyjD,EAAA6J,IAAA8G,GACA/M,EAAAzE,EAAAlqB,IAAA2uB,EAAAoT,EAGA,OAAA7X,GAAAyG,IAAAhC,EAAA,EAAAxU,IASA8P,EAAA6qB,KAAA,SAAA/pB,GAGA,OAFAgqB,IAAuBz2D,EAAA,EAAAC,EAAA,GAEvBjX,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5CytE,EAAAz2D,GAAAysC,EAAAzjD,GAAAgX,EACAy2D,EAAAx2D,GAAAwsC,EAAAzjD,GAAAiX,CAGA,OAAA2rC,GAAAyG,IAAAokB,EAAAhqB,EAAAxgD,SAUA0/C,EAAA9P,KAAA,SAAA4Q,EAAAiqB,GAIA,OAHA76B,GAAA,EACAya,EAAA7J,EAAAxgD,OAAA,EAEAjD,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5C6yC,IAAA4Q,EAAA6J,GAAAt2C,EAAAysC,EAAAzjD,GAAAgX,IAAAysC,EAAA6J,GAAAr2C,EAAAwsC,EAAAzjD,GAAAiX,GACAq2C,EAAAttD,CAGA,OAAA0tE,GACA76B,EAAA,EAEAhW,KAAAsgB,IAAAtK,GAAA,GAUA8P,EAAAsD,QAAA,SAAAxC,EAAAuC,GASA,OALAoO,GACA9G,EAJAqgB,EAAA,EACAC,EAAA,EACA92D,EAAA2sC,EAMA3iD,EAAA,EAAuBA,EAAAgW,EAAA7T,OAAcnC,IACrCwsD,GAAAxsD,EAAA,GAAAgW,EAAA7T,OACAmxD,EAAAv3B,KAAAsgB,IAAAyF,EAAAwR,MAAAt9C,EAAAw2C,GAAAx2C,EAAAhW,KACA6sE,GAAAvZ,GAAAxR,EAAAkR,IAAAh9C,EAAAw2C,GAAAx2C,EAAAw2C,IAAA1K,EAAAkR,IAAAh9C,EAAAw2C,GAAAx2C,EAAAhW,IAAA8hD,EAAAkR,IAAAh9C,EAAAhW,GAAAgW,EAAAhW,KACA8sE,GAAAxZ,CAGA,OAAApO,GAAA,GAAA2nB,EAAAC,IAUAjrB,EAAA2E,UAAA,SAAA7D,EAAAimB,EAAAuD,GACA,GAAAjtE,EACA,IAAAitE,EACA,IAAAjtE,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5CyjD,EAAAzjD,GAAAgX,GAAA0yD,EAAA1yD,EAAAi2D,EACAxpB,EAAAzjD,GAAAiX,GAAAyyD,EAAAzyD,EAAAg2D,MAGA,KAAAjtE,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5CyjD,EAAAzjD,GAAAgX,GAAA0yD,EAAA1yD,EACAysC,EAAAzjD,GAAAiX,GAAAyyD,EAAAzyD,CAIA,OAAAwsC,IAUAd,EAAAmD,OAAA,SAAArC,EAAAD,EAAA2E,GACA,OAAA3E,EAAA,CAMA,OAHApD,GAAAvjB,KAAAujB,IAAAoD,GACAlD,EAAAzjB,KAAAyjB,IAAAkD,GAEAxjD,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAAA,CAC5C,GAAA6tE,GAAApqB,EAAAzjD,GACAooD,EAAAylB,EAAA72D,EAAAmxC,EAAAnxC,EACAqxC,EAAAwlB,EAAA52D,EAAAkxC,EAAAlxC,CAEA42D,GAAA72D,EAAAmxC,EAAAnxC,GAAAoxC,EAAAhI,EAAAiI,EAAA/H,GACAutB,EAAA52D,EAAAkxC,EAAAlxC,GAAAmxC,EAAA9H,EAAA+H,EAAAjI,GAGA,MAAAqD,KAUAd,EAAAvK,SAAA,SAAAqL,EAAA0E,GACA,OAAAnoD,GAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAAA,CAC5C,GAAA6tE,GAAApqB,EAAAzjD,GACA8tE,EAAArqB,GAAAzjD,EAAA,GAAAyjD,EAAAxgD,OACA,KAAAklD,EAAAnxC,EAAA62D,EAAA72D,IAAA82D,EAAA72D,EAAA42D,EAAA52D,IAAAkxC,EAAAlxC,EAAA42D,EAAA52D,IAAA42D,EAAA72D,EAAA82D,EAAA92D,GAAA,EACA,SAIA,UAWA2rC,EAAA2F,MAAA,SAAA7E,EAAA8E,EAAAC,EAAAL,GACA,OAAAI,GAAA,IAAAC,EACA,MAAA/E,EAEA0E,MAAAxF,EAAA0E,OAAA5D,EAKA,QAHA6I,GACAzE,EAEA7nD,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAC5CssD,EAAA7I,EAAAzjD,GACA6nD,EAAAjF,EAAAkF,IAAAwE,EAAAnE,GACA1E,EAAAzjD,GAAAgX,EAAAmxC,EAAAnxC,EAAA6wC,EAAA7wC,EAAAuxC,EACA9E,EAAAzjD,GAAAiX,EAAAkxC,EAAAlxC,EAAA4wC,EAAA5wC,EAAAuxC,CAGA,OAAA/E,IAaAd,EAAAgiB,QAAA,SAAAlhB,EAAAmhB,EAAAC,EAAAC,EAAAC,GAEAH,EADA,iBAAAA,IACAA,GAEAA,IAAA,GAIAC,EAAA,oBAAAA,MAAA,EACAC,KAAA,EACAC,KAAA,EAIA,QAFAgJ,MAEA/tE,EAAA,EAAuBA,EAAAyjD,EAAAxgD,OAAqBjD,IAAA,CAC5C,GAAAguE,GAAAvqB,EAAAzjD,EAAA,KAAAA,EAAA,EAAAyjD,EAAAxgD,OAAA,GACAqpD,EAAA7I,EAAAzjD,GACAiuE,EAAAxqB,GAAAzjD,EAAA,GAAAyjD,EAAAxgD,QACAirE,EAAAtJ,EAAA5kE,EAAA4kE,EAAA3hE,OAAAjD,EAAA4kE,EAAA3hE,OAAA,EAEA,QAAAirE,EAAA,CAKA,GAAAC,GAAAvrB,EAAAymB,WACAryD,EAAAs1C,EAAAr1C,EAAA+2D,EAAA/2D,EACAA,EAAA+2D,EAAAh3D,EAAAs1C,EAAAt1C,IAGAo3D,EAAAxrB,EAAAymB,WACAryD,EAAAi3D,EAAAh3D,EAAAq1C,EAAAr1C,EACAA,EAAAq1C,EAAAt1C,EAAAi3D,EAAAj3D,IAGAq3D,EAAAxxC,KAAA8vC,KAAA,EAAA9vC,KAAAksB,IAAAmlB,EAAA,IACAI,EAAA1rB,EAAAwG,KAAAtG,EAAA1wC,MAAA+7D,GAAAD,GACAK,EAAA3rB,EAAAymB,UAAAzmB,EAAAwG,KAAAxG,EAAAlqB,IAAAy1C,EAAAC,GAAA,KACAI,EAAA5rB,EAAAkF,IAAAwE,EAAA1J,EAAAwG,KAAAmlB,EAAAF,IAEAI,EAAA5J,GAEA,IAAAA,IAEA4J,EAAA,KAAA5xC,KAAAksB,IAAAmlB,EAAA,MAGAO,EAAA3rB,EAAAsS,MAAAqZ,EAAA3J,EAAAC,GAGA0J,EAAA,QACAA,GAAA,EAKA,QAHAzxB,GAAAngB,KAAA6xC,KAAA9rB,EAAAkR,IAAAqa,EAAAC,IACAzI,EAAA3oB,EAAAyxB,EAEAnhB,EAAA,EAA2BA,EAAAmhB,EAAenhB,IAC1CygB,EAAA7oE,KAAA09C,EAAAlqB,IAAAkqB,EAAAkD,OAAAwoB,EAAA3I,EAAArY,GAAAkhB,QApCAT,GAAA7oE,KAAAonD,GAwCA,MAAAyhB,IASAprB,EAAA6E,cAAA,SAAA/D,GACA,GAAA4D,GAAA1E,EAAA6qB,KAAA/pB,EAMA,OAJAA,GAAAkrB,KAAA,SAAAxX,EAAAC,GACA,MAAAxU,GAAAY,MAAA6D,EAAA8P,GAAAvU,EAAAY,MAAA6D,EAAA+P,KAGA3T,GASAd,EAAAwjB,SAAA,SAAA1iB,GAIA,GAEAzjD,GACAstD,EACA32C,EACAO,EALA03D,EAAA,EACA9tE,EAAA2iD,EAAAxgD,MAMA,IAAAnC,EAAA,EACA,WAEA,KAAAd,EAAA,EAAmBA,EAAAc,EAAOd,IAY1B,GAXAstD,GAAAttD,EAAA,GAAAc,EACA6V,GAAA3W,EAAA,GAAAc,EACAoW,GAAAusC,EAAA6J,GAAAt2C,EAAAysC,EAAAzjD,GAAAgX,IAAAysC,EAAA9sC,GAAAM,EAAAwsC,EAAA6J,GAAAr2C,GACAC,IAAAusC,EAAA6J,GAAAr2C,EAAAwsC,EAAAzjD,GAAAiX,IAAAwsC,EAAA9sC,GAAAK,EAAAysC,EAAA6J,GAAAt2C,GAEAE,EAAA,EACA03D,GAAA,EACa13D,EAAA,IACb03D,GAAA,GAGA,IAAAA,EACA,QAIA,YAAAA,GAGA,MAUAjsB,EAAA8E,KAAA,SAAAhE,GAGA,GAEA6I,GACAtsD,EAHA6uE,KACAC,IAYA,KAPArrB,IAAA13C,MAAA,GACA03C,EAAAkrB,KAAA,SAAAxX,EAAAC,GACA,GAAAhP,GAAA+O,EAAAngD,EAAAogD,EAAApgD,CACA,YAAAoxC,IAAA+O,EAAAlgD,EAAAmgD,EAAAngD,IAIAjX,EAAA,EAAmBA,EAAAyjD,EAAAxgD,OAAqBjD,GAAA,GAGxC,IAFAssD,EAAA7I,EAAAzjD,GAEA8uE,EAAA7rE,QAAA,GACA2/C,EAAAmqB,OAAA+B,IAAA7rE,OAAA,GAAA6rE,IAAA7rE,OAAA,GAAAqpD,IAAA,GACAwiB,EAAAj5D,KAGAi5D,GAAA5pE,KAAAonD,GAIA,IAAAtsD,EAAAyjD,EAAAxgD,OAAA,EAAqCjD,GAAA,EAAQA,GAAA,GAG7C,IAFAssD,EAAA7I,EAAAzjD,GAEA6uE,EAAA5rE,QAAA,GACA2/C,EAAAmqB,OAAA8B,IAAA5rE,OAAA,GAAA4rE,IAAA5rE,OAAA,GAAAqpD,IAAA,GACAuiB,EAAAh5D,KAGAg5D,GAAA3pE,KAAAonD,GAQA,MAHAuiB,GAAAh5D,MACAi5D,EAAAj5D,MAEAg5D,EAAAhzD,OAAAizD,SAKGxlB,iBAAA,GAAAI,qBAAA,KAA4CqlB,IAAA,SAAArsB,EAAA3iD,EAAAD,GAC/C,GAAAg/D,GAAA/+D,EAAAD,QAAA4iD,EAAA,iBAEAoc,GAAAnwD,KAAA+zC,EAAA,gBACAoc,EAAAzjB,UAAAqH,EAAA,qBACAoc,EAAA3jB,MAAAuH,EAAA,iBAEAoc,EAAAzS,QAAA3J,EAAA,wBACAoc,EAAApS,SAAAhK,EAAA,yBACAoc,EAAAzQ,KAAA3L,EAAA,qBACAoc,EAAAxN,MAAA5O,EAAA,sBACAoc,EAAAlS,KAAAlK,EAAA,qBACAoc,EAAA/M,MAAArP,EAAA,sBACAoc,EAAAlM,SAAAlQ,EAAA,yBACAoc,EAAAnS,IAAAjK,EAAA,oBAEAoc,EAAAtH,WAAA9U,EAAA,4BACAoc,EAAA7jB,gBAAAyH,EAAA,iCAEAoc,EAAAhc,OAAAJ,EAAA,kBACAoc,EAAA/jB,OAAA2H,EAAA,kBACAoc,EAAAhV,OAAApH,EAAA,kBACAoc,EAAA5jB,MAAAwH,EAAA,iBACAoc,EAAAuD,OAAA3f,EAAA,kBACAoc,EAAAjc,SAAAH,EAAA,oBACAoc,EAAAC,OAAArc,EAAA,kBAGAoc,EAAA1jB,OAAAsH,EAAA,qBACAoc,EAAAkI,WAAAtkB,EAAA,yBAEAoc,EAAA9b,KAAAN,EAAA,oBACAoc,EAAA/b,OAAAL,EAAA,sBACAoc,EAAA6K,IAAAjnB,EAAA,mBACAoc,EAAAlc,OAAAF,EAAA,sBACAoc,EAAAnc,SAAAD,EAAA,wBAEAoc,EAAA9jB,OAAA0H,EAAA,oBACAoc,EAAAkQ,WAAAtsB,EAAA,wBAIAoc,EAAA3jB,MAAAziB,IAAAomC,EAAAzjB,UAAA3iB,IACAomC,EAAA3jB,MAAAoC,OAAAuhB,EAAAzjB,UAAAkC,OACAuhB,EAAA3jB,MAAAwP,aAAAmU,EAAAzjB,UAAAsP,aACAmU,EAAA3jB,MAAAsP,QAAAqU,EAAAzjB,UAAAoP,QACAqU,EAAA3jB,MAAAuP,cAAAoU,EAAAzjB,UAAAqP,cACAoU,EAAA3jB,MAAAmQ,MAAAwT,EAAAzjB,UAAAiQ,MACAwT,EAAA/jB,OAAAa,IAAAkjB,EAAAuD,OAAAzmB,MAEGmiB,eAAA,EAAApE,oBAAA,EAAAqE,gBAAA,EAAAiR,uBAAA,EAAArV,wBAAA,EAAAqE,oBAAA,EAAAiR,oBAAA,EAAAhR,qBAAA,EAAAiR,qBAAA,EAAAhR,wBAAA,GAAAiR,mBAAA,GAAAljB,2BAAA,GAAAmjB,gCAAA,GAAA/lB,iBAAA,GAAAgmB,iBAAA,GAAAvjB,iBAAA,GAAAwjB,iBAAA,GAAAC,kBAAA,GAAA3V,gBAAA,GAAA4V,iBAAA,GAAAC,iBAAA,GAAAnmB,mBAAA,GAAAmJ,oBAAA,GAAAid,wBAAA,GAAAnmB,mBAAA,GAAAC,qBAAA,GAAAmmB,kBAAA,GAAAlmB,qBAAA,GAAAC,uBAAA,GAAAC,mBAAA,GAAAimB,uBAAA,KAAqsBC,IAAA,SAAAptB,EAAA3iD,EAAAD,GASxsB,GAAAk7C,KAEAj7C,GAAAD,QAAAk7C,CAEA,IAAA8H,GAAAJ,EAAA,kBACArH,EAAAqH,EAAA,qBACAK,EAAAL,EAAA,sBACAoH,EAAApH,EAAA,kBACA2L,EAAA3L,EAAA,qBACAE,EAAAF,EAAA,sBACAxH,EAAAwH,EAAA,kBAEA,WAEA,GAAA4f,GACAC,CAEA,qBAAAn8D,UACAk8D,EAAAl8D,OAAA2nC,uBAAA3nC,OAAAo8D,6BACAp8D,OAAAq8D,0BAAAr8D,OAAAs8D,yBACA,SAAAv4D,GAA4D/D,OAAA0C,WAAA,WAA+BqB,EAAA24C,EAAAzf,QAA0B,SAErHk/B,EAAAn8D,OAAAu8D,sBAAAv8D,OAAAw8D,yBACAx8D,OAAAy8D,4BAAAz8D,OAAA08D,wBAWA9nB,EAAAjC,OAAA,SAAAlxC,GACA,GAAAw7C,IACAiL,WAAAtT,EACAM,OAAA,KACAtkB,QAAA,KACA8kB,OAAA,KACAD,MAAA,KACA0nB,eAAA,KACA17D,SACAs/B,MAAA,IACAC,OAAA,IACAqU,WAAA,EACAC,WAAA,UACAq0B,oBAAA,UACAC,YAAAnoE,EAAA69C,OACA99C,SAAA,EACA+zC,YAAA,EACAs0B,cAAA,EACAC,WAAA,EACAC,gBAAA,EACAC,YAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,UAAA,EACAC,eAAA,EACAC,oBAAA,EACAC,SAAA,EACAC,aAAA,EACAC,mBAAA,EACAC,iBAAA,EACAC,mBAAA,EACAC,mBAAA,IAIAl9D,EAAAgvC,EAAA/lB,OAAAsmB,EAAAx7C,EAkCA,OAhCAiM,GAAAgoC,SACAhoC,EAAAgoC,OAAA3U,MAAArzB,EAAAjM,QAAAs/B,OAAArzB,EAAAgoC,OAAA3U,MACArzB,EAAAgoC,OAAA1U,OAAAtzB,EAAAjM,QAAAu/B,QAAAtzB,EAAAgoC,OAAA1U,QAGAtzB,EAAA+nC,MAAAh0C,EAAAg0C,MACA/nC,EAAAwnC,OAAAzzC,EAAAyzC,OACAxnC,EAAAgoC,OAAAhoC,EAAAgoC,QAAAm1B,EAAAn9D,EAAAjM,QAAAs/B,MAAArzB,EAAAjM,QAAAu/B,QACAtzB,EAAAO,QAAAP,EAAAgoC,OAAAo1B,WAAA,MACAp9D,EAAAq9D,YAEAr9D,EAAA4xC,OAAA5xC,EAAA4xC,SACA5oB,KACA9lB,EAAA,EACAC,EAAA,GAEAmvC,KACApvC,EAAAlD,EAAAgoC,OAAA3U,MACAlwB,EAAAnD,EAAAgoC,OAAA1U,SAIA,IAAAtzB,EAAAjM,QAAA4zC,YACAT,EAAAo2B,cAAAt9D,IAAAjM,QAAA4zC,YAGAqH,EAAA6X,UAAA7mD,EAAAkjB,SACAljB,EAAAkjB,QAAAO,YAAAzjB,EAAAgoC,QACShoC,EAAAgoC,OAAA9+B,YACT8lC,EAAAwY,IAAA,mGAGAxnD,GAQAknC,EAAAY,IAAA,SAAA9nC,IACA,QAAAu9D,GAAA9rC,GACAzxB,EAAAyvD,eAAAjB,EAAA+O,GACAr2B,EAAAO,MAAAznC,OASAknC,EAAA6oB,KAAA,SAAA/vD,GACAyuD,EAAAzuD,EAAAyvD,iBAUAvoB,EAAAo2B,cAAA,SAAAt9D,EAAA2nC,GACA,GAAA5zC,GAAAiM,EAAAjM,QACAi0C,EAAAhoC,EAAAgoC,MAEA,UAAAL,IACAA,EAAA61B,EAAAx1B,IAGAj0C,EAAA4zC,aACAK,EAAA95B,aAAA,mBAAAy5B,GACAK,EAAA3U,MAAAt/B,EAAAs/B,MAAAsU,EACAK,EAAA1U,OAAAv/B,EAAAu/B,OAAAqU,EACAK,EAAA9vB,MAAAmb,MAAAt/B,EAAAs/B,MAAA,KACA2U,EAAA9vB,MAAAob,OAAAv/B,EAAAu/B,OAAA,KACAtzB,EAAAO,QAAAi0C,MAAA7M,MAgBAT,EAAAu2B,OAAA,SAAAz9D,EAAAy2C,EAAArJ,EAAAswB,GACAA,EAAA,oBAAAA,MACAjnB,EAAAzH,EAAA51C,QAAAq9C,SACArJ,MACAlqC,EAAA,EACAC,EAAA,EASA,QALAyuC,IACA5oB,KAAkB9lB,EAAA04B,IAAAz4B,EAAAy4B,KAClB0W,KAAkBpvC,GAAA04B,IAAAz4B,GAAAy4B,MAGlB1vC,EAAA,EAAuBA,EAAAuqD,EAAAtnD,OAAoBjD,GAAA,GAC3C,GAAAgB,GAAAupD,EAAAvqD,GACA88B,EAAA97B,EAAA0kD,OAAA1kD,EAAA0kD,OAAA5oB,IAAA97B,EAAA87B,KAAA97B,EAAAi8C,UAAAj8C,EACAolD,EAAAplD,EAAA0kD,OAAA1kD,EAAA0kD,OAAAU,IAAAplD,EAAAolD,KAAAplD,EAAAi8C,UAAAj8C,CAEA87B,IAAAspB,IACAtpB,EAAA9lB,EAAA0uC,EAAA5oB,IAAA9lB,IACA0uC,EAAA5oB,IAAA9lB,EAAA8lB,EAAA9lB,GAEAovC,EAAApvC,EAAA0uC,EAAAU,IAAApvC,IACA0uC,EAAAU,IAAApvC,EAAAovC,EAAApvC,GAEA8lB,EAAA7lB,EAAAyuC,EAAA5oB,IAAA7lB,IACAyuC,EAAA5oB,IAAA7lB,EAAA6lB,EAAA7lB,GAEAmvC,EAAAnvC,EAAAyuC,EAAAU,IAAAnvC,IACAyuC,EAAAU,IAAAnvC,EAAAmvC,EAAAnvC,IAKA,GAAAkwB,GAAAue,EAAAU,IAAApvC,EAAA0uC,EAAA5oB,IAAA9lB,EAAA,EAAAkqC,EAAAlqC,EACAowB,EAAAse,EAAAU,IAAAnvC,EAAAyuC,EAAA5oB,IAAA7lB,EAAA,EAAAiqC,EAAAjqC,EACAw6D,EAAA39D,EAAAgoC,OAAA1U,OACAsqC,EAAA59D,EAAAgoC,OAAA3U,MACAwqC,EAAAD,EAAAD,EACAG,EAAAzqC,EAAAC,EACAmhB,EAAA,EACAC,EAAA,CAGAopB,GAAAD,EACAnpB,EAAAopB,EAAAD,EAEAppB,EAAAopB,EAAAC,EAIA99D,EAAAjM,QAAAmoE,WAAA,EAGAl8D,EAAA4xC,OAAA5oB,IAAA9lB,EAAA0uC,EAAA5oB,IAAA9lB,EACAlD,EAAA4xC,OAAAU,IAAApvC,EAAA0uC,EAAA5oB,IAAA9lB,EAAAmwB,EAAAohB,EACAz0C,EAAA4xC,OAAA5oB,IAAA7lB,EAAAyuC,EAAA5oB,IAAA7lB,EACAnD,EAAA4xC,OAAAU,IAAAnvC,EAAAyuC,EAAA5oB,IAAA7lB,EAAAmwB,EAAAohB,EAGAgpB,IACA19D,EAAA4xC,OAAA5oB,IAAA9lB,GAAA,GAAAmwB,IAAAohB,EAAA,GACAz0C,EAAA4xC,OAAAU,IAAApvC,GAAA,GAAAmwB,IAAAohB,EAAA,GACAz0C,EAAA4xC,OAAA5oB,IAAA7lB,GAAA,GAAAmwB,IAAAohB,EAAA,GACA10C,EAAA4xC,OAAAU,IAAAnvC,GAAA,GAAAmwB,IAAAohB,EAAA,IAIA10C,EAAA4xC,OAAA5oB,IAAA9lB,GAAAkqC,EAAAlqC,EACAlD,EAAA4xC,OAAAU,IAAApvC,GAAAkqC,EAAAlqC,EACAlD,EAAA4xC,OAAA5oB,IAAA7lB,GAAAiqC,EAAAjqC,EACAnD,EAAA4xC,OAAAU,IAAAnvC,GAAAiqC,EAAAjqC,EAGAnD,EAAA+nC,QACAX,EAAA4kB,SAAAhsD,EAAA+nC,OACA7kC,GAAAlD,EAAA4xC,OAAAU,IAAApvC,EAAAlD,EAAA4xC,OAAA5oB,IAAA9lB,GAAAlD,EAAAgoC,OAAA3U,MACAlwB,GAAAnD,EAAA4xC,OAAAU,IAAAnvC,EAAAnD,EAAA4xC,OAAA5oB,IAAA7lB,GAAAnD,EAAAgoC,OAAA1U,SAGA8T,EAAA2kB,UAAA/rD,EAAA+nC,MAAA/nC,EAAA4xC,OAAA5oB,OASAke,EAAA62B,mBAAA,SAAA/9D,GACA,GAAAg+D,GAAAh+D,EAAA4xC,OAAAU,IAAApvC,EAAAlD,EAAA4xC,OAAA5oB,IAAA9lB,EACA+6D,EAAAj+D,EAAA4xC,OAAAU,IAAAnvC,EAAAnD,EAAA4xC,OAAA5oB,IAAA7lB,EACA+6D,EAAAF,EAAAh+D,EAAAjM,QAAAs/B,MACA8qC,EAAAF,EAAAj+D,EAAAjM,QAAAu/B,MAEAtzB,GAAAO,QAAAi0C,MAAA,EAAA0pB,EAAA,EAAAC,GACAn+D,EAAAO,QAAAizC,WAAAxzC,EAAA4xC,OAAA5oB,IAAA9lB,GAAAlD,EAAA4xC,OAAA5oB,IAAA7lB,IAQA+jC,EAAAk3B,iBAAA,SAAAp+D,GACAA,EAAAO,QAAA89D,aAAAr+D,EAAAjM,QAAA4zC,WAAA,IAAA3nC,EAAAjM,QAAA4zC,WAAA,MASAT,EAAAO,MAAA,SAAAznC,GACA,GAUA9T,GAVAs7C,EAAAxnC,EAAAwnC,OACAC,EAAAD,EAAAC,MACAO,EAAAhoC,EAAAgoC,OACAznC,EAAAP,EAAAO,QACAxM,EAAAiM,EAAAjM,QACA4jD,EAAApQ,EAAAoQ,UAAAlQ,GACAmQ,EAAArQ,EAAAqQ,eAAAnQ,GACAG,EAAA7zC,EAAA8zC,WAAA9zC,EAAAkoE,oBAAAloE,EAAA6zC,WACAY,KACA0N,KAGAqT,GACA7M,UAAAlV,EAAA0hB,OAAAxM,UAgBA,IAbA1G,EAAAU,QAAA12C,EAAA,eAAAupD,GAGAvpD,EAAAs+D,oBAAA12B,GACA22B,EAAAv+D,EAAA4nC,GAGArnC,EAAAi+D,yBAAA,YACAj+D,EAAAytC,UAAA,cACAztC,EAAAk+D,SAAA,IAAAz2B,EAAA3U,MAAA2U,EAAA1U,QACA/yB,EAAAi+D,yBAAA,cAGAzqE,EAAAmoE,UAAA,CAEA,IAAAhwE,EAAA,EAAuBA,EAAAyrD,EAAAxoD,OAAsBjD,IAAA,CAC7C,GAAAqN,GAAAo+C,EAAAzrD,EACA+iD,GAAAsK,SAAAhgD,EAAAq4C,OAAA5xC,EAAA4xC,SACApJ,EAAAp3C,KAAAmI,GAIA,IAAArN,EAAA,EAAuBA,EAAA0rD,EAAAzoD,OAA2BjD,IAAA,CAClD,GAAAg8C,GAAA0P,EAAA1rD,GACAktD,EAAAlR,EAAAkR,MACAC,EAAAnR,EAAAmR,MACAuL,EAAA1c,EAAA4b,OACAe,EAAA3c,EAAA6b,MAEA3K,KAAAwL,EAAA9V,EAAAlqB,IAAAw0B,EAAAjQ,SAAAjB,EAAA4b,SACAzK,IAAAwL,EAAA/V,EAAAlqB,IAAAy0B,EAAAlQ,SAAAjB,EAAA6b,SAEAa,GAAAC,KAGA5V,EAAA3K,SAAAtkC,EAAA4xC,OAAAgT,IAAA3V,EAAA3K,SAAAtkC,EAAA4xC,OAAAiT,KACA3O,EAAA9kD,KAAA82C,IAIAhB,EAAA62B,mBAAA/9D,GAGAA,EAAA+nC,QACAX,EAAA4kB,SAAAhsD,EAAA+nC,OACA7kC,GAAAlD,EAAA4xC,OAAAU,IAAApvC,EAAAlD,EAAA4xC,OAAA5oB,IAAA9lB,GAAAlD,EAAAgoC,OAAA3U,MACAlwB,GAAAnD,EAAA4xC,OAAAU,IAAAnvC,EAAAnD,EAAA4xC,OAAA5oB,IAAA7lB,GAAAnD,EAAAgoC,OAAA1U,SAGA8T,EAAA2kB,UAAA/rD,EAAA+nC,MAAA/nC,EAAA4xC,OAAA5oB,UAGAktB,GAAA0B,EACApP,EAAAmP,GAGA5jD,EAAA8zC,YAAAL,EAAAwhB,gBAAAj1D,EAAAooE,aAEAj1B,EAAAsB,OAAAxoC,EAAAwoC,EAAAjoC,IAEAxM,EAAAipE,iBACA91B,EAAAw3B,gBAAA1+D,EAAAwoC,EAAAjoC,GAGA2mC,EAAAy3B,eAAA3+D,EAAAwoC,EAAAjoC,IAGAxM,EAAAuoE,YACAp1B,EAAA03B,WAAA5+D,EAAAwoC,EAAAjoC,IAEAxM,EAAA2oE,UAAA3oE,EAAA6oE,qBACA11B,EAAA23B,SAAA7+D,EAAAwoC,EAAAjoC,GAEAxM,EAAA4oE,eACAz1B,EAAA43B,cAAA9+D,EAAAwoC,EAAAjoC,GAEAxM,EAAAwoE,cACAr1B,EAAA63B,aAAA/+D,EAAAwoC,EAAAjoC,GAEAxM,EAAA8oE,SACA31B,EAAA83B,QAAAh/D,EAAAwoC,EAAAjoC,GAEAxM,EAAA0oE,iBACAv1B,EAAA+3B,YAAAj/D,EAAAwnC,EAAA0R,MAAA/jD,KAAAoL,GAEAxM,EAAAyoE,gBACAt1B,EAAA6R,WAAA/4C,EAAAwnC,EAAA0R,MAAA/jD,KAAAoL,GAEAxM,EAAAgpE,mBACA71B,EAAAg4B,cAAAl/D,EAAAwoC,EAAAjoC,GAEAxM,EAAAmpE,mBACAh2B,EAAAi4B,cAAAn/D,IAAA+nC,MAAAxnC,GAEA2mC,EAAAgP,cAAA31C,GAEAxM,EAAAsoE,gBAAA70B,EAAA2hB,WAAA3O,aAAAD,GACArT,EAAA4T,KAAA96C,EAAAwnC,EAAA2hB,WAAA5oD,GAEAxM,EAAAqoE,WACAl1B,EAAAk4B,MAAAp/D,EAAAO,GAEAxM,EAAAmoE,WAEAh1B,EAAAk3B,iBAAAp+D,GAGAg2C,EAAAU,QAAA12C,EAAA,cAAAupD,IAUAriB,EAAAk4B,MAAA,SAAAp/D,EAAAO,GACA,GAAAjU,GAAAiU,EACAinC,EAAAxnC,EAAAwnC,OACAC,EAAAD,EAAAC,MACA4hB,EAAA7hB,EAAA6hB,QACAt1D,EAAAiM,EAAAjM,OACAwzC,GAAAoQ,UAAAlQ,EAGA,IAAAD,EAAA0hB,OAAAxM,WAAA18C,EAAAq/D,gBAAA,SACA,GAAApjE,GAAA,EAEAotD,GAAAH,SACAjtD,GAAA,QAAA8sB,KAAAu2C,MAAAjW,EAAAH,OAAAgG,KANA,QAUAlvD,EAAAu/D,YAAAtjE,EACA+D,EAAAq/D,eAAA73B,EAAA0hB,OAAAxM,UAGA,GAAA18C,EAAAu/D,YAAA,CACAjzE,EAAAkzE,KAAA,aAEAzrE,EAAA8zC,WACAv7C,EAAA0hD,UAAA,wBAEA1hD,EAAA0hD,UAAA,iBAKA,QAFAx/C,GAAAwR,EAAAu/D,YAAA/wE,MAAA,MAEAtC,EAAA,EAA2BA,EAAAsC,EAAAW,OAAkBjD,IAC7CI,EAAAmzE,SAAAjxE,EAAAtC,GAAA,SAAAA,KAYAg7C,EAAAgP,YAAA,SAAAA,EAAA31C,GAGA,OAFAjU,GAAAiU,EAEArU,EAAA,EAAuBA,EAAAgqD,EAAA/mD,OAAwBjD,IAAA,CAC/C,GAAAg8C,GAAAgO,EAAAhqD,EAEA,IAAAg8C,EAAAloC,OAAAooC,SAAAF,EAAA4b,QAAA5b,EAAA6b,OAAA,CAGA,GAEA/tC,GACAE,EAHAkjC,EAAAlR,EAAAkR,MACAC,EAAAnR,EAAAmR,KAUA,IALArjC,EADAojC,EACAtK,EAAAlqB,IAAAw0B,EAAAjQ,SAAAjB,EAAA4b,QAEA5b,EAAA4b,OAGA,QAAA5b,EAAAloC,OAAAjE,KACAzP,EAAAozE,YACApzE,EAAAqzE,IAAA3pD,EAAA9S,EAAA8S,EAAA7S,EAAA,MAAA4lB,KAAAuhB,IACAh+C,EAAAszE,gBACa,CAUb,GARA1pD,EADAmjC,EACAvK,EAAAlqB,IAAAy0B,EAAAlQ,SAAAjB,EAAA6b,QAEA7b,EAAA6b,OAGAz3D,EAAAozE,YACApzE,EAAAuzE,OAAA7pD,EAAA9S,EAAA8S,EAAA7S,GAEA,WAAA+kC,EAAAloC,OAAAjE,KAMA,OAFAyZ,GAHAu+B,EAAAjF,EAAAkF,IAAA99B,EAAAF,GACAupC,EAAAzQ,EAAA+R,KAAA/R,EAAAymB,UAAAxhB,IACA+rB,EAAA/2C,KAAA4oC,KAAA3iB,EAAAsS,MAAApZ,EAAA/4C,OAAA,UAGAqqD,EAAA,EAAmCA,EAAAsmB,EAAWtmB,GAAA,EAC9ChkC,EAAAgkC,EAAA,WAEAltD,EAAAyzE,OACA/pD,EAAA9S,EAAA6wC,EAAA7wC,GAAAs2C,EAAAsmB,GAAAvgB,EAAAr8C,EAAAsS,EAAA,EACAQ,EAAA7S,EAAA4wC,EAAA5wC,GAAAq2C,EAAAsmB,GAAAvgB,EAAAp8C,EAAAqS,EAAA,EAKAlpB,GAAAyzE,OAAA7pD,EAAAhT,EAAAgT,EAAA/S,GAGA+kC,EAAAloC,OAAAkuC,YACA5hD,EAAA4hD,UAAAhG,EAAAloC,OAAAkuC,UACA5hD,EAAA2hD,YAAA/F,EAAAloC,OAAAiuC,YACA3hD,EAAAkiD,UAGAtG,EAAAloC,OAAAskD,UACAh4D,EAAA0hD,UAAA9F,EAAAloC,OAAAiuC,YACA3hD,EAAAozE,YACApzE,EAAAqzE,IAAA3pD,EAAA9S,EAAA8S,EAAA7S,EAAA,MAAA4lB,KAAAuhB,IACAh+C,EAAAqzE,IAAAzpD,EAAAhT,EAAAgT,EAAA/S,EAAA,MAAA4lB,KAAAuhB,IACAh+C,EAAAszE,YACAtzE,EAAAiiD,WAaArH,EAAA84B,YAAA,SAAAhgE,EAAAwoC,EAAAjoC,GAIA,OAHAjU,GAAAiU,EAGArU,GAFA8T,EAAAwnC,OAEA,GAAuBt7C,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAEA,IAAAqN,EAAAyG,OAAAooC,QAAA,CAGA,GAAA7uC,EAAAs7C,aACAvoD,EAAAozE,YACApzE,EAAAqzE,IAAApmE,EAAA4vC,SAAAjmC,EAAA3J,EAAA4vC,SAAAhmC,EAAA5J,EAAAs7C,aAAA,IAAA9rB,KAAAuhB,IACAh+C,EAAAszE,gBACa,CACbtzE,EAAAozE,YACApzE,EAAAuzE,OAAAtmE,EAAAo2C,SAAA,GAAAzsC,EAAA3J,EAAAo2C,SAAA,GAAAxsC,EACA,QAAAq2C,GAAA,EAA+BA,EAAAjgD,EAAAo2C,SAAAxgD,OAA0BqqD,IACzDltD,EAAAyzE,OAAAxmE,EAAAo2C,SAAA6J,GAAAt2C,EAAA3J,EAAAo2C,SAAA6J,GAAAr2C,EAEA7W,GAAAszE,YAGA,GAAAK,GAAA1mE,EAAA4vC,SAAAjmC,EAAA,GAAAlD,EAAAjM,QAAAs/B,MACA6sC,EAAA3mE,EAAA4vC,SAAAhmC,EAAA,GAAAnD,EAAAjM,QAAAu/B,OACA8vB,EAAAr6B,KAAAsgB,IAAA42B,GAAAl3C,KAAAsgB,IAAA62B,EAEA5zE,GAAA6zE,YAAA,mBACA7zE,EAAA8zE,cAAA,IAAAH,EACA3zE,EAAA+zE,cAAA,IAAAH,EACA5zE,EAAAg0E,WAAA,KAAAv3C,KAAAC,IAAA,EAAAo6B,EAAA,KAEA92D,EAAAiiD,OAEAjiD,EAAA6zE,YAAA,KACA7zE,EAAA8zE,cAAA,KACA9zE,EAAA+zE,cAAA,KACA/zE,EAAAg0E,WAAA,QAYAp5B,EAAAsB,OAAA,SAAAxoC,EAAAwoC,EAAAjoC,GACA,GAIAhH,GACA25C,EACAhnD,EACA2W,EAPAvW,EAAAiU,EAEAxM,GADAiM,EAAAwnC,OACAxnC,EAAAjM,SACAkpE,EAAAlpE,EAAAkpE,oBAAAlpE,EAAA8zC,UAMA,KAAA37C,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAGtC,GAFAqN,EAAAivC,EAAAt8C,GAEAqN,EAAAyG,OAAAooC,QAIA,IAAAvlC,EAAAtJ,EAAAiE,MAAArO,OAAA,MAAmD0T,EAAAtJ,EAAAiE,MAAArO,OAAuB0T,IAG1E,GAFAqwC,EAAA35C,EAAAiE,MAAAqF,GAEAqwC,EAAAlzC,OAAAooC,QAAA,CASA,GANAr0C,EAAAooE,cAAA5iE,EAAAg3C,WACAjkD,EAAAi0E,YAAA,GAAArtB,EAAAlzC,OAAA49B,QACiB,IAAAsV,EAAAlzC,OAAA49B,UACjBtxC,EAAAi0E,YAAArtB,EAAAlzC,OAAA49B,SAGAsV,EAAAlzC,OAAAmxC,QAAA+B,EAAAlzC,OAAAmxC,OAAAqvB,UAAAzsE,EAAA8zC,WAAA,CAEA,GAAAsJ,GAAA+B,EAAAlzC,OAAAmxC,OACAqvB,EAAAC,EAAAzgE,EAAAmxC,EAAAqvB,QAEAl0E,GAAAknD,UAAAN,EAAA/J,SAAAjmC,EAAAgwC,EAAA/J,SAAAhmC,GACA7W,EAAA0lD,OAAAkB,EAAAxD,OAEApjD,EAAAo0E,UACAF,EACAA,EAAAntC,OAAA8d,EAAAG,QAAAH,EAAAC,OACAovB,EAAAltC,QAAA6d,EAAAI,QAAAJ,EAAAE,OACAmvB,EAAAntC,MAAA8d,EAAAC,OACAovB,EAAAltC,OAAA6d,EAAAE,QAIA/kD,EAAA0lD,QAAAkB,EAAAxD,OACApjD,EAAAknD,WAAAN,EAAA/J,SAAAjmC,GAAAgwC,EAAA/J,SAAAhmC,OACiB,CAEjB,GAAA+vC,EAAA2B,aACAvoD,EAAAozE,YACApzE,EAAAqzE,IAAAzsB,EAAA/J,SAAAjmC,EAAAgwC,EAAA/J,SAAAhmC,EAAA+vC,EAAA2B,aAAA,IAAA9rB,KAAAuhB,QACqB,CACrBh+C,EAAAozE,YACApzE,EAAAuzE,OAAA3sB,EAAAvD,SAAA,GAAAzsC,EAAAgwC,EAAAvD,SAAA,GAAAxsC,EAEA,QAAAq2C,GAAA,EAAuCA,EAAAtG,EAAAvD,SAAAxgD,OAA0BqqD,KACjEtG,EAAAvD,SAAA6J,EAAA,GAAAwZ,YAAAiK,EACA3wE,EAAAyzE,OAAA7sB,EAAAvD,SAAA6J,GAAAt2C,EAAAgwC,EAAAvD,SAAA6J,GAAAr2C,GAEA7W,EAAAuzE,OAAA3sB,EAAAvD,SAAA6J,GAAAt2C,EAAAgwC,EAAAvD,SAAA6J,GAAAr2C,GAGA+vC,EAAAvD,SAAA6J,GAAAwZ,aAAAiK,GACA3wE,EAAAuzE,OAAA3sB,EAAAvD,UAAA6J,EAAA,GAAAtG,EAAAvD,SAAAxgD,QAAA+T,EAAAgwC,EAAAvD,UAAA6J,EAAA,GAAAtG,EAAAvD,SAAAxgD,QAAAgU,EAIA7W,GAAAyzE,OAAA7sB,EAAAvD,SAAA,GAAAzsC,EAAAgwC,EAAAvD,SAAA,GAAAxsC,GACA7W,EAAAszE,YAGA7rE,EAAA8zC,YAWAv7C,EAAA4hD,UAAA,EACA5hD,EAAA2hD,YAAA,OACA3hD,EAAAkiD,WAZAliD,EAAA0hD,UAAAkF,EAAAlzC,OAAAguC,UAEAkF,EAAAlzC,OAAAkuC,YACA5hD,EAAA4hD,UAAAgF,EAAAlzC,OAAAkuC,UACA5hD,EAAA2hD,YAAAiF,EAAAlzC,OAAAiuC,YACA3hD,EAAAkiD,UAGAliD,EAAAiiD,QAQAjiD,EAAAi0E,YAAA,IAaAr5B,EAAAy3B,eAAA,SAAA3+D,EAAAwoC,EAAAjoC,GACA,GAEAhH,GACA25C,EACAhnD,EACAstD,EACA32C,EANAvW,EAAAiU,EACA08D,EAAAj9D,EAAAjM,QAAAkpE,iBAUA,KAHA3wE,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAGtC,GAFAqN,EAAAivC,EAAAt8C,GAEAqN,EAAAyG,OAAAooC,QAIA,IAAAvlC,EAAAtJ,EAAAiE,MAAArO,OAAA,MAAmD0T,EAAAtJ,EAAAiE,MAAArO,OAAuB0T,IAAA,CAK1E,IAJAqwC,EAAA35C,EAAAiE,MAAAqF,GAEAvW,EAAAuzE,OAAA3sB,EAAAvD,SAAA,GAAAzsC,EAAAgwC,EAAAvD,SAAA,GAAAxsC,GAEAq2C,EAAA,EAA2BA,EAAAtG,EAAAvD,SAAAxgD,OAA0BqqD,KACrDtG,EAAAvD,SAAA6J,EAAA,GAAAwZ,YAAAiK,EACA3wE,EAAAyzE,OAAA7sB,EAAAvD,SAAA6J,GAAAt2C,EAAAgwC,EAAAvD,SAAA6J,GAAAr2C,GAEA7W,EAAAuzE,OAAA3sB,EAAAvD,SAAA6J,GAAAt2C,EAAAgwC,EAAAvD,SAAA6J,GAAAr2C,GAGA+vC,EAAAvD,SAAA6J,GAAAwZ,aAAAiK,GACA3wE,EAAAuzE,OAAA3sB,EAAAvD,UAAA6J,EAAA,GAAAtG,EAAAvD,SAAAxgD,QAAA+T,EAAAgwC,EAAAvD,UAAA6J,EAAA,GAAAtG,EAAAvD,SAAAxgD,QAAAgU,EAIA7W,GAAAyzE,OAAA7sB,EAAAvD,SAAA,GAAAzsC,EAAAgwC,EAAAvD,SAAA,GAAAxsC,GAIA7W,EAAA4hD,UAAA,EACA5hD,EAAA2hD,YAAA,OACA3hD,EAAAkiD,UAWAtH,EAAAw3B,gBAAA,SAAA1+D,EAAAwoC,EAAAjoC,GACA,GACAhH,GAEArN,EACAstD,EAJAltD,EAAAiU,CAUA,KAHAjU,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAGtC,GAFAqN,EAAAivC,EAAAt8C,GAEAqN,EAAAyG,OAAAooC,SAAA,IAAA7uC,EAAAiE,MAAArO,OAAA,CAKA,IAFA7C,EAAAuzE,OAAAtmE,EAAAo2C,SAAA,GAAAzsC,EAAA3J,EAAAo2C,SAAA,GAAAxsC,GAEAq2C,EAAA,EAAuBA,EAAAjgD,EAAAo2C,SAAAxgD,OAA0BqqD,IACjDltD,EAAAyzE,OAAAxmE,EAAAo2C,SAAA6J,GAAAt2C,EAAA3J,EAAAo2C,SAAA6J,GAAAr2C,EAGA7W,GAAAyzE,OAAAxmE,EAAAo2C,SAAA,GAAAzsC,EAAA3J,EAAAo2C,SAAA,GAAAxsC,GAGA7W,EAAA4hD,UAAA,EACA5hD,EAAA2hD,YAAA,wBACA3hD,EAAAkiD,UAWAtH,EAAAg4B,cAAA,SAAAl/D,EAAAwoC,EAAAjoC,GACA,GACArU,GACAstD,EACA32C,EAHAvW,EAAAiU,CAKA,KAAArU,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CACtC,GAAAsR,GAAAgrC,EAAAt8C,GAAAsR,KACA,KAAAqF,EAAArF,EAAArO,OAAA,MAA8C0T,EAAArF,EAAArO,OAAkB0T,IAAA,CAChE,GAAAqwC,GAAA11C,EAAAqF,EACA,KAAA22C,EAAA,EAA2BA,EAAAtG,EAAAvD,SAAAxgD,OAA0BqqD,IACrDltD,EAAA0hD,UAAA,wBACA1hD,EAAAmzE,SAAAvzE,EAAA,IAAAstD,EAAAtG,EAAA/J,SAAAjmC,EAAA,IAAAgwC,EAAAvD,SAAA6J,GAAAt2C,EAAAgwC,EAAA/J,SAAAjmC,GAAAgwC,EAAA/J,SAAAhmC,EAAA,IAAA+vC,EAAAvD,SAAA6J,GAAAr2C,EAAA+vC,EAAA/J,SAAAhmC,OAcA+jC,EAAAi4B,cAAA,SAAAn/D,EAAA+nC,EAAAxnC,GACA,GAAAjU,GAAAiU,CACAjU,GAAA0hD,UAAA,wBACA1hD,EAAAmzE,SAAA13B,EAAAoB,SAAAjmC,EAAA,KAAA6kC,EAAAoB,SAAAhmC,EAAA4kC,EAAAoB,SAAAjmC,EAAA,EAAA6kC,EAAAoB,SAAAhmC,EAAA,IAWA+jC,EAAA03B,WAAA,SAAA5+D,EAAAwoC,EAAAjoC,GACA,GAAAjU,GAAAiU,EAEAxM,GADAiM,EAAAwnC,OACAxnC,EAAAjM,QAEAzH,GAAAozE,WAEA,QAAAxzE,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAG1C,GAFAs8C,EAAAt8C,GAEA8T,OAAAooC,QAEA,OADA5qC,GAAAgrC,EAAAt8C,GAAAsR,MACAg8C,EAAAh8C,EAAArO,OAAA,MAAsDqqD,EAAAh8C,EAAArO,OAAkBqqD,IAAA,CACxE,GAAAtG,GAAA11C,EAAAg8C,EACAltD,GAAAq0E,KAAAztB,EAAAtB,OAAA5oB,IAAA9lB,EAAAgwC,EAAAtB,OAAA5oB,IAAA7lB,EAAA+vC,EAAAtB,OAAAU,IAAApvC,EAAAgwC,EAAAtB,OAAA5oB,IAAA9lB,EAAAgwC,EAAAtB,OAAAU,IAAAnvC,EAAA+vC,EAAAtB,OAAA5oB,IAAA7lB,IAKApP,EAAA8zC,WACAv7C,EAAA2hD,YAAA,yBAEA3hD,EAAA2hD,YAAA,kBAGA3hD,EAAA4hD,UAAA,EACA5hD,EAAAkiD,UAWAtH,EAAA23B,SAAA,SAAA7+D,EAAAwoC,EAAAjoC,GACA,GAGA2yC,GACAhnD,EACAstD,EACA32C,EANAvW,EAAAiU,EAEAxM,GADAiM,EAAAwnC,OACAxnC,EAAAjM,QAQA,KAFAzH,EAAAozE,YAEAxzE,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CACtC,GAAAqN,GAAAivC,EAAAt8C,GACAsR,EAAAjE,EAAAiE,KAEA,IAAAjE,EAAAyG,OAAAooC,QAGA,GAAAr0C,EAAA2oE,SAEA,IAAAljB,EAAAh8C,EAAArO,OAAA,MAAkDqqD,EAAAh8C,EAAArO,OAAkBqqD,IAEpE,IADAtG,EAAA11C,EAAAg8C,GACA32C,EAAA,EAA+BA,EAAAqwC,EAAAjB,KAAA9iD,OAAsB0T,IAAA,CACrD,GAAA4/C,GAAAvP,EAAAjB,KAAApvC,EACAvW,GAAAuzE,OAAA3sB,EAAA/J,SAAAjmC,EAAAgwC,EAAA/J,SAAAhmC,GACA7W,EAAAyzE,OAAA7sB,EAAA/J,SAAAjmC,EAAA,GAAAu/C,EAAAv/C,EAAAgwC,EAAA/J,SAAAhmC,EAAA,GAAAs/C,EAAAt/C,OAIA,KAAAq2C,EAAAh8C,EAAArO,OAAA,MAAkDqqD,EAAAh8C,EAAArO,OAAkBqqD,IAEpE,IADAtG,EAAA11C,EAAAg8C,GACA32C,EAAA,EAA+BA,EAAAqwC,EAAAjB,KAAA9iD,OAAsB0T,IAErDvW,EAAAuzE,OAAA3sB,EAAA/J,SAAAjmC,EAAAgwC,EAAA/J,SAAAhmC,GACA7W,EAAAyzE,QAAA7sB,EAAAvD,SAAA,GAAAzsC,EAAAgwC,EAAAvD,SAAAuD,EAAAvD,SAAAxgD,OAAA,GAAA+T,GAAA,GACAgwC,EAAAvD,SAAA,GAAAxsC,EAAA+vC,EAAAvD,SAAAuD,EAAAvD,SAAAxgD,OAAA,GAAAgU,GAAA,GAMApP,EAAA8zC,YACAv7C,EAAA2hD,YAAA,YACA3hD,EAAA4hD,UAAA,IAEA5hD,EAAA2hD,YAAA,2BACA3hD,EAAAkyE,yBAAA,UACAlyE,EAAA4hD,UAAA,GAGA5hD,EAAAkiD,SACAliD,EAAAkyE,yBAAA,eAWAt3B,EAAA43B,cAAA,SAAA9+D,EAAAwoC,EAAAjoC,GACA,GAGAhH,GACA25C,EACAhnD,EACA2W,EANAvW,EAAAiU,EAEAxM,GADAiM,EAAAwnC,OACAxnC,EAAAjM,QASA,KAHAzH,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IAGtC,GAFAqN,EAAAivC,EAAAt8C,GAEAqN,EAAAyG,OAAAooC,QAIA,IAAAvlC,EAAA,EAAuBA,EAAAtJ,EAAAiE,MAAArO,OAAuB0T,IAC9CqwC,EAAA35C,EAAAiE,MAAAqF,GACAvW,EAAAqzE,IAAAzsB,EAAA/J,SAAAjmC,EAAAgwC,EAAA/J,SAAAhmC,EAAA,MAAA4lB,KAAAuhB,IAAA,GACAh+C,EAAAszE,WAcA,KAVA7rE,EAAA8zC,WACAv7C,EAAA0hD,UAAA,YAEA1hD,EAAA0hD,UAAA,kBAEA1hD,EAAAiiD,OAEAjiD,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IACtCqN,EAAAivC,EAAAt8C,GACAqN,EAAAyG,OAAAooC,UACA97C,EAAAqzE,IAAApmE,EAAAs4C,aAAA3uC,EAAA3J,EAAAs4C,aAAA1uC,EAAA,MAAA4lB,KAAAuhB,IAAA,GACAh+C,EAAAszE,YAIAtzE,GAAA0hD,UAAA,sBACA1hD,EAAAiiD,QAWArH,EAAA63B,aAAA,SAAA/+D,EAAAwoC,EAAAjoC,GACA,GAAAjU,GAAAiU,CAEAjU,GAAAozE,WAEA,QAAAxzE,GAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EAEAqN,GAAAyG,OAAAooC,UAGA97C,EAAAuzE,OAAAtmE,EAAA4vC,SAAAjmC,EAAA3J,EAAA4vC,SAAAhmC,GACA7W,EAAAyzE,OAAAxmE,EAAA4vC,SAAAjmC,EAAA,GAAA3J,EAAA4vC,SAAAjmC,EAAA3J,EAAAs4C,aAAA3uC,GAAA3J,EAAA4vC,SAAAhmC,EAAA,GAAA5J,EAAA4vC,SAAAhmC,EAAA5J,EAAAs4C,aAAA1uC,KAGA7W,EAAA4hD,UAAA,EACA5hD,EAAA2hD,YAAA,iBACA3hD,EAAAkiD,UAWAtH,EAAA83B,QAAA,SAAAh/D,EAAAwoC,EAAAjoC,GACA,GACArU,GACAstD,EAFAltD,EAAAiU,CAIA,KAAArU,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IACtC,GAAAs8C,EAAAt8C,GAAA8T,OAAAooC,QAAA,CAGA,GAAA5qC,GAAAgrC,EAAAt8C,GAAAsR,KACA,KAAAg8C,EAAAh8C,EAAArO,OAAA,MAA8CqqD,EAAAh8C,EAAArO,OAAkBqqD,IAAA,CAChE,GAAAtG,GAAA11C,EAAAg8C,EACAltD,GAAAkzE,KAAA,aACAlzE,EAAA0hD,UAAA,wBACA1hD,EAAAmzE,SAAAvsB,EAAAj/C,GAAAi/C,EAAA/J,SAAAjmC,EAAA,GAAAgwC,EAAA/J,SAAAhmC,EAAA,OAaA+jC,EAAA6R,WAAA,SAAA/4C,EAAAk5C,EAAA34C,GACA,GAEAs5C,GACAE,EAIA7tD,EACAstD,EARAltD,EAAAiU,EACAxM,EAAAiM,EAAAjM,OAYA,KAHAzH,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IAGrC,GAFA2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,SAIA,IADAC,EAAAF,EAAAE,UACAP,EAAA,EAAuBA,EAAAK,EAAAiD,eAAA3tD,OAAgCqqD,IAAA,CACvD,GAAA4D,GAAAvD,EAAAiD,eAAAtD,GACAhB,EAAA4E,EAAA5E,MACAlsD,GAAAq0E,KAAAnoB,EAAAt1C,EAAA,IAAAs1C,EAAAr1C,EAAA,aAcA,IAVApP,EAAA8zC,WACAv7C,EAAA0hD,UAAA,wBAEA1hD,EAAA0hD,UAAA,SAEA1hD,EAAAiiD,OAEAjiD,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IAGrC,GAFA2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,WAGAC,EAAAF,EAAAE,UAEAF,EAAAiD,eAAA3tD,OAAA,IACA,GAAAyxE,GAAA/mB,EAAAiD,eAAA,GAAAtE,OAAAt1C,EACA29D,EAAAhnB,EAAAiD,eAAA,GAAAtE,OAAAr1C,CAEA,KAAA02C,EAAAiD,eAAA3tD,SACAyxE,GAAA/mB,EAAAiD,eAAA,GAAAtE,OAAAt1C,EAAA22C,EAAAiD,eAAA,GAAAtE,OAAAt1C,GAAA,EACA29D,GAAAhnB,EAAAiD,eAAA,GAAAtE,OAAAr1C,EAAA02C,EAAAiD,eAAA,GAAAtE,OAAAr1C,GAAA,GAGA42C,EAAAV,QAAAU,EAAAmD,SAAA,GAAA3jD,OAAA,IAAAwgD,EAAAX,MAAAnM,SACA3gD,EAAAuzE,OAAAe,EAAA,EAAA7mB,EAAAwF,OAAAr8C,EAAA29D,EAAA,EAAA9mB,EAAAwF,OAAAp8C,GAEA7W,EAAAuzE,OAAAe,EAAA,EAAA7mB,EAAAwF,OAAAr8C,EAAA29D,EAAA,EAAA9mB,EAAAwF,OAAAp8C,GAGA7W,EAAAyzE,OAAAa,EAAAC,GAIA9sE,EAAA8zC,WACAv7C,EAAA2hD,YAAA,sBAEA3hD,EAAA2hD,YAAA,SAGA3hD,EAAA4hD,UAAA,EACA5hD,EAAAkiD,UAWAtH,EAAA+3B,YAAA,SAAAj/D,EAAAk5C,EAAA34C,GACA,GAEAs5C,GACAE,EAEAX,EACAC,EACAntD,EAPAI,EAAAiU,EACAxM,EAAAiM,EAAAjM,OAYA,KAHAzH,EAAAozE,YAGAxzE,EAAA,EAAmBA,EAAAgtD,EAAA/pD,OAAkBjD,IAGrC,GAFA2tD,EAAAX,EAAAhtD,GAEA2tD,EAAAC,SAAA,CAGAC,EAAAF,EAAAE,UACAX,EAAAW,EAAAX,MACAC,EAAAU,EAAAV,KAEA,IAAAx2C,GAAA,CAEAw2C,GAAApM,UAAAmM,EAAAnM,WAAApqC,EAAA,IACAw2C,EAAApM,WAAApqC,EAAA,GAEAvW,EAAAuzE,OAAAxmB,EAAAlQ,SAAAjmC,EAAAm2C,EAAAlQ,SAAAhmC,GACA7W,EAAAyzE,OAAA1mB,EAAAlQ,SAAAjmC,EAAA62C,EAAAgG,YAAA78C,EAAAL,EAAAw2C,EAAAlQ,SAAAhmC,EAAA42C,EAAAgG,YAAA58C,EAAAN,GAEAA,EAAA,EAEAw2C,EAAApM,UAAAmM,EAAAnM,WAAApqC,EAAA,IACAu2C,EAAAnM,WAAApqC,EAAA,GAEAvW,EAAAuzE,OAAAzmB,EAAAjQ,SAAAjmC,EAAAk2C,EAAAjQ,SAAAhmC,GACA7W,EAAAyzE,OAAA3mB,EAAAjQ,SAAAjmC,EAAA62C,EAAAgG,YAAA78C,EAAAL,EAAAu2C,EAAAjQ,SAAAhmC,EAAA42C,EAAAgG,YAAA58C,EAAAN,GAGA9O,EAAA8zC,WACAv7C,EAAA2hD,YAAA,sBAEA3hD,EAAA2hD,YAAA,SAEA3hD,EAAAkiD,UAWAtH,EAAA4T,KAAA,SAAA96C,EAAA86C,EAAAv6C,GACA,GAAAjU,GAAAiU,CACAP,GAAAjM,QAEA8zC,WACAv7C,EAAA2hD,YAAA,sBAEA3hD,EAAA2hD,YAAA,sBAGA3hD,EAAAozE,WAIA,QAFAoB,GAAA9xB,EAAArgD,KAAAmsD,EAAAJ,SAEAxuD,EAAA,EAAuBA,EAAA40E,EAAA3xE,OAAuBjD,IAAA,CAC9C,GAAA+uD,GAAA6lB,EAAA50E,EAEA,MAAA4uD,EAAAJ,QAAAO,GAAA9rD,OAAA,IAGA,GAAAksD,GAAAJ,EAAAzsD,MAAA,MACAlC,GAAAq0E,KAAA,GAAArZ,SAAAjM,EAAA,OAAAP,EAAAF,YACA,GAAA0M,SAAAjM,EAAA,OAAAP,EAAAD,aACAC,EAAAF,YACAE,EAAAD,eAGAvuD,EAAA4hD,UAAA,EACA5hD,EAAAkiD,UAUAtH,EAAA65B,UAAA,SAAAA,EAAAxgE,GACA,GAIAqxC,GAHA16B,GADA6pD,EAAAv5B,OACAu5B,EAAA7pD,UACAlX,EAAA+gE,EAAA/gE,OACAjM,EAAAiM,EAAAjM,OAGA,IAAAA,EAAAmoE,UAAA,CACA,GAAA8B,GAAAh+D,EAAA4xC,OAAAU,IAAApvC,EAAAlD,EAAA4xC,OAAA5oB,IAAA9lB,EACA+6D,EAAAj+D,EAAA4xC,OAAAU,IAAAnvC,EAAAnD,EAAA4xC,OAAA5oB,IAAA7lB,EACA+6D,EAAAF,EAAAh+D,EAAAjM,QAAAs/B,MACA8qC,EAAAF,EAAAj+D,EAAAjM,QAAAu/B,MAEA/yB,GAAAi0C,MAAA,EAAA0pB,EAAA,EAAAC,GACA59D,EAAAizC,WAAAxzC,EAAA4xC,OAAA5oB,IAAA9lB,GAAAlD,EAAA4xC,OAAA5oB,IAAA7lB,GAGA,OAAAjX,GAAA,EAAuBA,EAAAgrB,EAAA/nB,OAAqBjD,IAAA,CAC5C,GAAA80E,GAAA9pD,EAAAhrB,GAAAoL,IAOA,QALAiJ,EAAAizC,UAAA,OACAjzC,EAAA2tC,UAAA,EACA3tC,EAAA0tC,YAAA,sBACA1tC,EAAA0gE,aAAA,MAEAD,EAAAjlE,MAEA,WAGA61C,EAAAovB,EAAApvB,OACArxC,EAAAm/D,YACAn/D,EAAAogE,KAAA53C,KAAAwd,MAAAqL,EAAA5oB,IAAA9lB,EAAA,GAAA6lB,KAAAwd,MAAAqL,EAAA5oB,IAAA7lB,EAAA,GACA4lB,KAAAwd,MAAAqL,EAAAU,IAAApvC,EAAA0uC,EAAA5oB,IAAA9lB,EAAA,GAAA6lB,KAAAwd,MAAAqL,EAAAU,IAAAnvC,EAAAyuC,EAAA5oB,IAAA7lB,EAAA,IACA5C,EAAAq/D,YACAr/D,EAAAiuC,QAEA,MAEA,kBAGA,GAAA6F,GAAA2sB,EAAAld,MACAkd,GAAA5nB,QACA/E,EAAA2sB,EAAAjd,QACAxjD,EAAAm/D,YACAn/D,EAAAo/D,IAAAtrB,EAAAnxC,EAAAmxC,EAAAlxC,EAAA,OAAA4lB,KAAAuhB,IACA/pC,EAAAq/D,YACAr/D,EAAAiuC,SAMAjuC,EAAA0gE,gBACA1gE,EAAAizC,WAAA,QAIA,OAAAutB,EAAAG,cACA3gE,EAAAizC,UAAA,OACAjzC,EAAA2tC,UAAA,EACA3tC,EAAA0tC,YAAA,sBACA1tC,EAAAytC,UAAA,sBACA4D,EAAAmvB,EAAAI,aACA5gE,EAAAm/D,YACAn/D,EAAAogE,KAAA53C,KAAAwd,MAAAqL,EAAA5oB,IAAA9lB,GAAA6lB,KAAAwd,MAAAqL,EAAA5oB,IAAA7lB,GACA4lB,KAAAwd,MAAAqL,EAAAU,IAAApvC,EAAA0uC,EAAA5oB,IAAA9lB,GAAA6lB,KAAAwd,MAAAqL,EAAAU,IAAAnvC,EAAAyuC,EAAA5oB,IAAA7lB,IACA5C,EAAAq/D,YACAr/D,EAAAiuC,SACAjuC,EAAAguC,OACAhuC,EAAAizC,WAAA,SAGAz/C,EAAAmoE,WACA37D,EAAA89D,aAAA,aAWA,IAAAlB,GAAA,SAAA9pC,EAAAC,GACA,GAAA0U,GAAA9wC,SAAA+I,cAAA,SAKA,OAJA+nC,GAAA3U,QACA2U,EAAA1U,SACA0U,EAAAo5B,cAAA,WAA2C,UAC3Cp5B,EAAAq5B,cAAA,WAA2C,UAC3Cr5B,GAUAw1B,EAAA,SAAAx1B,GACA,GAAAznC,GAAAynC,EAAAo1B,WAAA,KAMA,QALA9qE,OAAAgvE,kBAAA,IACA/gE,EAAAghE,8BAAAhhE,EAAAihE,2BACAjhE,EAAAkhE,0BAAAlhE,EAAAmhE,yBACAnhE,EAAAohE,wBAAA,IAaAlB,EAAA,SAAAzgE,EAAA4hE,GACA,GAAAC,GAAA7hE,EAAAq9D,SAAAuE,EAEA,OAAAC,KAGAA,EAAA7hE,EAAAq9D,SAAAuE,GAAA,GAAAE,OACAD,EAAAE,IAAAH,EAEAC,IAUAtD,EAAA,SAAAv+D,EAAA4nC,GACA,GAAAo6B,GAAAp6B,CAEA,kBAAAtvC,KAAAsvC,KACAo6B,EAAA,OAAAp6B,EAAA,KAEA5nC,EAAAgoC,OAAA9vB,MAAA0vB,WAAAo6B,EACAhiE,EAAAgoC,OAAA9vB,MAAA+pD,eAAA,UACAjiE,EAAAs+D,kBAAA12B,QA0HGie,oBAAA,EAAAsE,oBAAA,EAAA3U,iBAAA,GAAAyC,iBAAA,GAAA8N,gBAAA,GAAApQ,qBAAA,GAAAC,qBAAA,KAAuJ1f,IAAA,SAAA0Y,EAAA3iD,EAAAD,GAU1J,GAAAkvE,KAEAjvE,GAAAD,QAAAkvE,CAEA,IAAAjsB,GAAAL,EAAA,sBACArH,EAAAqH,EAAA,qBACAI,EAAAJ,EAAA,kBACAoH,EAAApH,EAAA,kBACAE,EAAAF,EAAA,uBAEA,WAEA,GAAA4f,GACAC,CAEA,qBAAAn8D,UACAk8D,EAAAl8D,OAAA2nC,uBAAA3nC,OAAAo8D,6BACAp8D,OAAAq8D,0BAAAr8D,OAAAs8D,yBACA,SAAAv4D,GAA4D/D,OAAA0C,WAAA,WAA+BqB,EAAA24C,EAAAzf,QAA0B,SAErHk/B,EAAAn8D,OAAAu8D,sBAAAv8D,OAAAw8D,yBACAx8D,OAAAy8D,4BAAAz8D,OAAA08D,wBAUAkM,EAAAj2B,OAAA,SAAAlxC,GACAi7C,EAAAp6C,KAAA,gEAEA,IAAA26C,IACAiL,WAAA0gB,EACA1zB,OAAA,KACAtkB,QAAA,KACAusC,eAAA,KACAznB,OAAA,KACAk6B,SAAA,KACAC,UAAA,KACAC,gBAAA,KACAC,YAAA,KACAtuE,SACAs/B,MAAA,IACAC,OAAA,IACAsU,WAAA,UACAq0B,oBAAA,OACAC,WAAA,EACApoE,SAAA,EACA+zC,YAAA,EACAs0B,cAAA,EACAC,WAAA,EACAC,gBAAA,EACAC,YAAA,EACAC,cAAA,EACAC,gBAAA,EACAE,UAAA,EACAC,eAAA,EACAC,oBAAA,EACAC,SAAA,EACAC,aAAA,IAIA98D,EAAAgvC,EAAA/lB,OAAAsmB,EAAAx7C,GACAuuE,GAAAtiE,EAAAjM,QAAA8zC,YAAA,gBAAA7nC,EAAAjM,QAAA6zC,UAmDA,OAhDA5nC,GAAAqiE,YAAAriE,EAAAqiE,cACA/nE,KAAA0F,EAAAgoC,OACAs6B,cACAC,WAAA,EACAx8B,gBAAAhyC,EAAA6zC,YAGA5nC,EAAA+nC,MAAAh0C,EAAAg0C,MACA/nC,EAAAwnC,OAAAzzC,EAAAyzC,OACAxnC,EAAAkiE,SAAAliE,EAAAkiE,UAAA,GAAAM,MAAAC,cAAAziE,EAAAjM,QAAAs/B,MAAArzB,EAAAjM,QAAAu/B,OAAAtzB,EAAAqiE,aACAriE,EAAAmiE,UAAAniE,EAAAmiE,WAAA,GAAAK,MAAAE,UACA1iE,EAAAoiE,gBAAApiE,EAAAoiE,iBAAA,GAAAI,MAAAE,UACA1iE,EAAAgoC,OAAAhoC,EAAAgoC,QAAAhoC,EAAAkiE,SAAA5nE,KACA0F,EAAA4xC,OAAA5xC,EAAA4xC,SACA5oB,KACA9lB,EAAA,EACAC,EAAA,GAEAmvC,KACApvC,EAAAlD,EAAAjM,QAAAs/B,MACAlwB,EAAAnD,EAAAjM,QAAAu/B,SAKA0iB,EAAAqP,GAAArlD,EAAAwnC,OAAA,0BACA0zB,EAAA1jB,MAAAx3C,KAIAA,EAAAq9D,YACAr9D,EAAA2iE,WACA3iE,EAAA4iE,cAGA5iE,EAAAmiE,UAAAU,SAAA7iE,EAAAoiE,iBAGApzB,EAAA6X,UAAA7mD,EAAAkjB,SACAljB,EAAAkjB,QAAAO,YAAAzjB,EAAAgoC,QAEAgH,EAAAp6C,KAAA,+EAIAoL,EAAAgoC,OAAAo5B,cAAA,WAAkD,UAClDphE,EAAAgoC,OAAAq5B,cAAA,WAAkD,UAElDrhE,GASAk7D,EAAApzB,IAAA,SAAA9nC,IACA,QAAAu9D,GAAA9rC,GACAzxB,EAAAyvD,eAAAjB,EAAA+O,GACArC,EAAAzzB,MAAAznC,OAUAk7D,EAAAnL,KAAA,SAAA/vD,GACAyuD,EAAAzuD,EAAAyvD,iBASAyL,EAAA1jB,MAAA,SAAAx3C,GAKA,IAJA,GAAAmiE,GAAAniE,EAAAmiE,UACAC,EAAApiE,EAAAoiE,gBAGAD,EAAAjhE,SAAA,IACAihE,EAAAlpD,YAAAkpD,EAAAjhE,SAAA,GAIA,MAAAkhE,EAAAlhE,SAAA,IACAkhE,EAAAnpD,YAAAmpD,EAAAlhE,SAAA,GAGA,IAAA4hE,GAAA9iE,EAAA2iE,QAAA,OAGA3iE,GAAAq9D,YACAr9D,EAAA2iE,WACA3iE,EAAA4iE,cAGA5iE,EAAA2iE,QAAA,QAAAG,EACAA,GACAX,EAAAY,WAAAD,EAAA,GAGA9iE,EAAAmiE,UAAAU,SAAA7iE,EAAAoiE,iBAGApiE,EAAAs+D,kBAAA,KAGA6D,EAAA3tB,MAAA75C,IAAA,KACAwnE,EAAAh5B,SAAAxuC,IAAA,MAUAugE,EAAA8H,cAAA,SAAAhjE,EAAA4nC,GACA,GAAA5nC,EAAAs+D,oBAAA12B,EAAA,CACA,GAAAq7B,GAAAr7B,EAAAjrC,UAAA,IAAAirC,EAAAjrC,QAAA,KACAmmE,EAAA9iE,EAAA2iE,QAAA,OAEA,IAAAM,EAAA,CAEA,GAAAnyC,GAAAke,EAAAoY,cAAAxf,EACA5nC,GAAAkiE,SAAAn8B,gBAAAjV,EAGAgyC,GACA9iE,EAAAmiE,UAAAlpD,YAAA6pD,OAGA,KAAAA,EAAA,CACA,GAAAtC,GAAAC,EAAAzgE,EAAA4nC,EAEAk7B,GAAA9iE,EAAA2iE,QAAA,WAAAH,MAAAU,OAAA1C,GACAsC,EAAA35B,SAAAjmC,EAAA,EACA4/D,EAAA35B,SAAAhmC,EAAA,EACAnD,EAAAmiE,UAAAY,WAAAD,EAAA,GAIA9iE,EAAAs+D,kBAAA12B,IAUAszB,EAAAzzB,MAAA,SAAAznC,GACA,GAQA9T,GARAs7C,EAAAxnC,EAAAwnC,OACAC,EAAAD,EAAAC,MACAy6B,EAAAliE,EAAAkiE,SACAC,EAAAniE,EAAAmiE,UACApuE,EAAAiM,EAAAjM,QACAy0C,EAAAjB,EAAAoQ,UAAAlQ,GACAmQ,EAAArQ,EAAAqQ,eAAAnQ,GACAyO,IAGAniD,GAAA8zC,WACAqzB,EAAA8H,cAAAhjE,EAAAjM,EAAAkoE,qBAEAf,EAAA8H,cAAAhjE,EAAAjM,EAAA6zC,WAIA,IAAAo2B,GAAAh+D,EAAA4xC,OAAAU,IAAApvC,EAAAlD,EAAA4xC,OAAA5oB,IAAA9lB,EACA+6D,EAAAj+D,EAAA4xC,OAAAU,IAAAnvC,EAAAnD,EAAA4xC,OAAA5oB,IAAA7lB,EACA+6D,EAAAF,EAAAh+D,EAAAjM,QAAAs/B,MACA8qC,EAAAF,EAAAj+D,EAAAjM,QAAAu/B,MAEA,IAAAv/B,EAAAmoE,UAAA,CAEA,IAAAhwE,EAAA,EAAuBA,EAAAs8C,EAAAr5C,OAAmBjD,IAAA,CAC1C,GAAAqN,GAAAivC,EAAAt8C,EACAqN,GAAAyG,OAAAmxC,OAAA/I,QAAA6G,EAAAsK,SAAAhgD,EAAAq4C,OAAA5xC,EAAA4xC,QAIA,IAAA1lD,EAAA,EAAuBA,EAAA0rD,EAAAzoD,OAA2BjD,IAAA,CAClD,GAAAg8C,GAAA0P,EAAA1rD,GACAktD,EAAAlR,EAAAkR,MACAC,EAAAnR,EAAAmR,MACAuL,EAAA1c,EAAA4b,OACAe,EAAA3c,EAAA6b,MAEA3K,KAAAwL,EAAA9V,EAAAlqB,IAAAw0B,EAAAjQ,SAAAjB,EAAA4b,SACAzK,IAAAwL,EAAA/V,EAAAlqB,IAAAy0B,EAAAlQ,SAAAjB,EAAA6b,SAEAa,GAAAC,KAGA5V,EAAA3K,SAAAtkC,EAAA4xC,OAAAgT,IAAA3V,EAAA3K,SAAAtkC,EAAA4xC,OAAAiT,KACA3O,EAAA9kD,KAAA82C,IAIAi6B,EAAA3tB,MAAA75C,IAAA,EAAAujE,EAAA,EAAAC,GACAgE,EAAAh5B,SAAAxuC,KAAAqF,EAAA4xC,OAAA5oB,IAAA9lB,GAAA,EAAAg7D,IAAAl+D,EAAA4xC,OAAA5oB,IAAA7lB,GAAA,EAAAg7D,QAEAjoB,GAAA0B,CAGA,KAAA1rD,EAAA,EAAmBA,EAAAs8C,EAAAr5C,OAAmBjD,IACtCgvE,EAAA3hE,KAAAyG,EAAAwoC,EAAAt8C,GAEA,KAAAA,EAAA,EAAmBA,EAAAgqD,EAAA/mD,OAAwBjD,IAC3CgvE,EAAAhzB,WAAAloC,EAAAk2C,EAAAhqD,GAEAg2E,GAAAliE,OAAAmiE,IAWAjH,EAAAhzB,WAAA,SAAAloC,EAAAkoC,GACA,GACAkR,IADAp5C,EAAAwnC,OACAU,EAAAkR,OACAC,EAAAnR,EAAAmR,MACAyK,EAAA5b,EAAA4b,OACAC,EAAA7b,EAAA6b,OACAoe,EAAAniE,EAAAmiE,UACAgB,EAAAj7B,EAAAloC,OACAojE,EAAA,KAAAl7B,EAAAj0C,GACAovE,EAAArjE,EAAA4iE,WAAAQ,EAOA,IAJAC,IACAA,EAAArjE,EAAA4iE,WAAAQ,GAAA,GAAAZ,MAAAc,WAGAH,EAAA/6B,UAAAF,EAAA4b,SAAA5b,EAAA6b,OAEA,WADAsf,GAAA7rB,SAKA,IAAAxI,EAAAryC,QAAAwlE,EAAAjhE,SAAAmiE,IACAlB,EAAAU,SAAAQ,GAGAA,EAAA7rB,QACA6rB,EAAAE,UAAA,KACAF,EAAAG,UAAAL,EAAAj1B,UAAAc,EAAAoY,cAAA+b,EAAAl1B,aAAA,GAEAmL,EACAiqB,EAAAxD,OAAAzmB,EAAAjQ,SAAAjmC,EAAA4gD,EAAA5gD,EAAAk2C,EAAAjQ,SAAAhmC,EAAA2gD,EAAA3gD,GAEAkgE,EAAAxD,OAAA/b,EAAA5gD,EAAA4gD,EAAA3gD,GAGAk2C,EACAgqB,EAAAtD,OAAA1mB,EAAAlQ,SAAAjmC,EAAA6gD,EAAA7gD,EAAAm2C,EAAAlQ,SAAAhmC,EAAA4gD,EAAA5gD,GAEAkgE,EAAAtD,OAAAhc,EAAA7gD,EAAA6gD,EAAA5gD,GAGAkgE,EAAAI,WAUAvI,EAAA3hE,KAAA,SAAAyG,EAAAzG,GACA,GACAmqE,IADA1jE,EAAAwnC,OACAjuC,EAAAyG,OAEA,IAAA0jE,EAAAt7B,QAGA,GAAAs7B,EAAAvyB,QAAAuyB,EAAAvyB,OAAAqvB,QAAA,CACA,GAAAmD,GAAA,KAAApqE,EAAAtF,GACAk9C,EAAAnxC,EAAA2iE,QAAAgB,GACAvB,EAAApiE,EAAAoiE,eAGAjxB,KACAA,EAAAnxC,EAAA2iE,QAAAgB,GAAAC,EAAA5jE,EAAAzG,KAGA,IAAAy1C,EAAAryC,QAAAylE,EAAAlhE,SAAAiwC,IACAixB,EAAAS,SAAA1xB,GAGAA,EAAAhI,SAAAjmC,EAAA3J,EAAA4vC,SAAAjmC,EACAiuC,EAAAhI,SAAAhmC,EAAA5J,EAAA4vC,SAAAhmC,EACAguC,EAAAiD,SAAA76C,EAAAm2C,MACAyB,EAAAqD,MAAAtxC,EAAAwgE,EAAAvyB,OAAAC,QAAA,EACAD,EAAAqD,MAAArxC,EAAAugE,EAAAvyB,OAAAE,QAAA,MACS,CACT,GAAA+xB,GAAA,KAAA7pE,EAAAtF,GACAovE,EAAArjE,EAAA4iE,WAAAQ,GACAjB,EAAAniE,EAAAmiE,SAGAkB,KACAA,EAAArjE,EAAA4iE,WAAAQ,GAAAS,EAAA7jE,EAAAzG,GACA8pE,EAAAS,aAAAvqE,EAAAm2C,QAIA,IAAAV,EAAAryC,QAAAwlE,EAAAjhE,SAAAmiE,IACAlB,EAAAU,SAAAQ,GAGAA,EAAAl6B,SAAAjmC,EAAA3J,EAAA4vC,SAAAjmC,EACAmgE,EAAAl6B,SAAAhmC,EAAA5J,EAAA4vC,SAAAhmC,EACAkgE,EAAAjvB,SAAA76C,EAAAm2C,MAAA2zB,EAAAS,cAaA,IAAAF,GAAA,SAAA5jE,EAAAzG,GACA,GAAAmqE,GAAAnqE,EAAAyG,OACA+jE,EAAAL,EAAAvyB,OAAAqvB,QACAA,EAAAC,EAAAzgE,EAAA+jE,GACA5yB,EAAA,GAAAqxB,MAAAU,OAAA1C,EAKA,OAHArvB,GAAA6yB,OAAA9gE,EAAA3J,EAAAyG,OAAAmxC,OAAAG,QACAH,EAAA6yB,OAAA7gE,EAAA5J,EAAAyG,OAAAmxC,OAAAI,QAEAJ,GAYA0yB,EAAA,SAAA7jE,EAAAzG,GACA,GAQA25C,GARAwwB,EAAAnqE,EAAAyG,OACAjM,EAAAiM,EAAAjM,QACAsvE,EAAA,GAAAb,MAAAc,SACAt1B,EAAAgB,EAAAoY,cAAAsc,EAAA11B,WACAC,EAAAe,EAAAoY,cAAAsc,EAAAz1B,aACAg2B,EAAAj1B,EAAAoY,cAAAsc,EAAAz1B,aACAi2B,EAAAl1B,EAAAoY,cAAA,QACA+c,EAAAn1B,EAAAoY,cAAA,UAGAic,GAAA7rB,OAGA,QAAA30C,GAAAtJ,EAAAiE,MAAArO,OAAA,MAAmD0T,EAAAtJ,EAAAiE,MAAArO,OAAuB0T,IAAA,CAC1EqwC,EAAA35C,EAAAiE,MAAAqF,GAEA9O,EAAA8zC,YAIAw7B,EAAAE,UAAA,KACAF,EAAAG,UAAA,EAAAU,EAAA,KAJAb,EAAAE,UAAAv1B,EAAA,GACAq1B,EAAAG,UAAAE,EAAAx1B,UAAAD,EAAA,IAMAo1B,EAAAxD,OAAA3sB,EAAAvD,SAAA,GAAAzsC,EAAA3J,EAAA4vC,SAAAjmC,EAAAgwC,EAAAvD,SAAA,GAAAxsC,EAAA5J,EAAA4vC,SAAAhmC,EAEA,QAAAq2C,GAAA,EAA2BA,EAAAtG,EAAAvD,SAAAxgD,OAA0BqqD,IACrD6pB,EAAAtD,OAAA7sB,EAAAvD,SAAA6J,GAAAt2C,EAAA3J,EAAA4vC,SAAAjmC,EAAAgwC,EAAAvD,SAAA6J,GAAAr2C,EAAA5J,EAAA4vC,SAAAhmC,EAGAkgE,GAAAtD,OAAA7sB,EAAAvD,SAAA,GAAAzsC,EAAA3J,EAAA4vC,SAAAjmC,EAAAgwC,EAAAvD,SAAA,GAAAxsC,EAAA5J,EAAA4vC,SAAAhmC,GAEAkgE,EAAAI,WAGA1vE,EAAA6oE,oBAAA7oE,EAAA2oE,YACA2G,EAAAE,UAAA,KAEAxvE,EAAA8zC,WACAw7B,EAAAG,UAAA,EAAAW,EAAA,GAEAd,EAAAG,UAAA,EAAAS,GAGAZ,EAAAxD,OAAA3sB,EAAA/J,SAAAjmC,EAAA3J,EAAA4vC,SAAAjmC,EAAAgwC,EAAA/J,SAAAhmC,EAAA5J,EAAA4vC,SAAAhmC,GACAkgE,EAAAtD,QAAA7sB,EAAAvD,SAAA,GAAAzsC,EAAAgwC,EAAAvD,SAAAuD,EAAAvD,SAAAxgD,OAAA,GAAA+T,GAAA,EAAA3J,EAAA4vC,SAAAjmC,GACAgwC,EAAAvD,SAAA,GAAAxsC,EAAA+vC,EAAAvD,SAAAuD,EAAAvD,SAAAxgD,OAAA,GAAAgU,GAAA,EAAA5J,EAAA4vC,SAAAhmC,GAEAkgE,EAAAI,WAIA,MAAAJ,IAYA5C,EAAA,SAAAzgE,EAAA4hE,GACA,GAAApB,GAAAxgE,EAAAq9D,SAAAuE,EAKA,OAHApB,KACAA,EAAAxgE,EAAAq9D,SAAAuE,GAAAY,KAAA4B,QAAAC,UAAAzC,IAEApB,QAKG3a,oBAAA,EAAArQ,iBAAA,GAAAyC,iBAAA,GAAAtC,qBAAA,GAAAC,qBAAA,UAAmH,a1BkqEzFxpD,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,G2B3wYxB,QAAAs4E,GAAAC,EAAAC,EAAA7J,GACAA,KAAA,CACA,IACA8J,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADA74E,GAAA,IAaA,OAXAu4E,GAAAF,EAAA,MAAAA,EAAA,MACAG,EAAAH,EAAA,MAAAA,EAAA,MACAI,EAAAF,EAAAF,EAAA,MAAAG,EAAAH,EAAA,MACAK,EAAAJ,EAAA,MAAAA,EAAA,MACAK,EAAAL,EAAA,MAAAA,EAAA,MACAM,EAAAF,EAAAJ,EAAA,MAAAK,EAAAL,EAAA,MACAO,EAAAN,EAAAI,EAAAD,EAAAF,EACAM,EAAAD,EAAA,EAAApK,KACAzuE,EAAA,IAAA24E,EAAAF,EAAAD,EAAAI,GAAAC,EACA74E,EAAA,IAAAu4E,EAAAK,EAAAF,EAAAD,GAAAI,GAEA74E,EAYA,QAAA+4E,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA/wB,GAAA6wB,EAAA,GAAAD,EAAA,GACA3wB,EAAA4wB,EAAA,GAAAD,EAAA,GACAnvD,EAAAsvD,EAAA,GAAAD,EAAA,GACA96D,EAAA+6D,EAAA,GAAAD,EAAA,EAGA,IAAArvD,EAAAw+B,EAAAjqC,EAAAgqC,IAAA,EACA,QAGA,IAAA/mD,IAAA+mD,GAAA8wB,EAAA,GAAAF,EAAA,IAAA3wB,GAAA2wB,EAAA,GAAAE,EAAA,MAAArvD,EAAAw+B,EAAAjqC,EAAAgqC,GACAjzC,GAAA0U,GAAAmvD,EAAA,GAAAE,EAAA,IAAA96D,GAAA86D,EAAA,GAAAF,EAAA,MAAA56D,EAAAgqC,EAAAv+B,EAAAw+B,EAEA,OAAAhnD,IAAA,GAAAA,GAAA,GAAA8T,GAAA,GAAAA,GAAA,EAYA,QAAAikE,GAAAx1E,EAAAE,EAAA1D,GACA,OAAA0D,EAAA,GAAAF,EAAA,KAAAxD,EAAA,GAAAwD,EAAA,KAAAxD,EAAA,GAAAwD,EAAA,KAAAE,EAAA,GAAAF,EAAA,IAGA,QAAAy1E,GAAAz1E,EAAAE,EAAA1D,GACA,MAAAg5E,GAAAx1E,EAAAE,EAAA1D,GAAA,EAGA,QAAAk5E,GAAA11E,EAAAE,EAAA1D,GACA,MAAAg5E,GAAAx1E,EAAAE,EAAA1D,IAAA,EAGA,QAAAm5E,GAAA31E,EAAAE,EAAA1D,GACA,MAAAg5E,GAAAx1E,EAAAE,EAAA1D,GAAA,EAGA,QAAAo5E,GAAA51E,EAAAE,EAAA1D,GACA,MAAAg5E,GAAAx1E,EAAAE,EAAA1D,IAAA,EAeA,QAAAq5E,GAAA71E,EAAAE,EAAA1D,EAAAs5E,GACA,GAAAA,EAEK,CACL,GAAAz7D,GAAA07D,EACAz3D,EAAA03D,CAEA37D,GAAA,GAAAna,EAAA,GAAAF,EAAA,GACAqa,EAAA,GAAAna,EAAA,GAAAF,EAAA,GACAse,EAAA,GAAA9hB,EAAA,GAAA0D,EAAA,GACAoe,EAAA,GAAA9hB,EAAA,GAAA0D,EAAA,EAEA,IAAAgwD,GAAA71C,EAAA,GAAAiE,EAAA,GAAAjE,EAAA,GAAAiE,EAAA,GACA23D,EAAAh9C,KAAA8vC,KAAA1uD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA67D,EAAAj9C,KAAA8vC,KAAAzqD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA,OADA2a,MAAA6xC,KAAA5a,GAAA+lB,EAAAC,IACAJ,EAdA,WAAAN,EAAAx1E,EAAAE,EAAA1D,GAkBA,QAAA25E,GAAAn2E,EAAAE,GACA,GAAAskD,GAAAtkD,EAAA,GAAAF,EAAA,GACAykD,EAAAvkD,EAAA,GAAAF,EAAA,EACA,OAAAwkD,KAAAC,IASA,QAAA2xB,GAAAtU,EAAA1lE,GACA,GAAAqB,GAAAqkE,EAAAziE,MACA,OAAAyiE,GAAA1lE,EAAA,EAAAA,EAAAqB,IAAArB,EAAAqB,GAQA,QAAA44E,GAAAvU,GACAA,EAAAziE,OAAA,EAWA,QAAAi3E,GAAAxU,EAAAyU,EAAAt3E,EAAAE,GACA,OAAA/C,GAAA6C,EAAmB7C,EAAA+C,EAAM/C,IACzB0lE,EAAAxgE,KAAAi1E,EAAAn6E,IAQA,QAAAo6E,GAAA1U,GAKA,OAJA3yB,GAAA,EACAj8B,EAAA4uD,EAGA1lE,EAAA,EAAmBA,EAAA0lE,EAAAziE,SAAoBjD,GACvC8W,EAAA9W,GAAA,GAAA8W,EAAAi8B,GAAA,IAAAj8B,EAAA9W,GAAA,KAAA8W,EAAAi8B,GAAA,IAAAj8B,EAAA9W,GAAA,GAAA8W,EAAAi8B,GAAA,MACAA,EAAA/yC,EAKA,QAAAq5E,EAAAW,EAAAtU,EAAA3yB,EAAA,GAAAinC,EAAAtU,EAAA3yB,GAAAinC,EAAAtU,EAAA3yB,EAAA,MACAsnC,EAAA3U,IACA,GAUA,QAAA2U,GAAA3U,GAGA,OAFA4U,MACA/kE,EAAAmwD,EAAAziE,OACAjD,EAAA,EAAgBA,IAAAuV,EAAOvV,IACvBs6E,EAAAp1E,KAAAwgE,EAAA7vD,MAEA,QAAA7V,GAAA,EAAgBA,IAAAuV,EAAOvV,IACvB0lE,EAAA1lE,GAAAs6E,EAAAt6E,GAUA,QAAAu6E,GAAA7U,EAAA1lE,GACA,MAAAu5E,GAAAS,EAAAtU,EAAA1lE,EAAA,GAAAg6E,EAAAtU,EAAA1lE,GAAAg6E,EAAAtU,EAAA1lE,EAAA,IAaA,QAAAw6E,GAAA9U,EAAA9hE,EAAAE,GACA,GAAA1C,GAAAq5E,EAAApC,EAAAqC,EAAApC,EAAAqC,CAEA,IAAArB,EAAAU,EAAAtU,EAAA9hE,EAAA,GAAAo2E,EAAAtU,EAAA9hE,GAAAo2E,EAAAtU,EAAA5hE,KAAA01E,EAAAQ,EAAAtU,EAAA9hE,EAAA,GAAAo2E,EAAAtU,EAAA9hE,GAAAo2E,EAAAtU,EAAA5hE,IACA,QAEA22E,GAAAV,EAAAC,EAAAtU,EAAA9hE,GAAAo2E,EAAAtU,EAAA5hE,GACA,QAAA9D,GAAA,EAAmBA,IAAA0lE,EAAAziE,SAAsBjD,EACzC,IAAAA,EAAA,GAAA0lE,EAAAziE,SAAAW,GAAA5D,IAAA4D,GAGA01E,EAAAU,EAAAtU,EAAA9hE,GAAAo2E,EAAAtU,EAAA5hE,GAAAk2E,EAAAtU,EAAA1lE,EAAA,KAAAw5E,EAAAQ,EAAAtU,EAAA9hE,GAAAo2E,EAAAtU,EAAA5hE,GAAAk2E,EAAAtU,EAAA1lE,MACAq4E,EAAA,GAAA2B,EAAAtU,EAAA9hE,GACAy0E,EAAA,GAAA2B,EAAAtU,EAAA5hE,GACAw0E,EAAA,GAAA0B,EAAAtU,EAAA1lE,GACAs4E,EAAA,GAAA0B,EAAAtU,EAAA1lE,EAAA,GACAoB,EAAAg3E,EAAAC,EAAAC,GACAyB,EAAAC,EAAAtU,EAAA9hE,GAAAxC,GAAAq5E,GACA,QAKA,UAUA,QAAAG,GAAAlV,EAAA9hE,EAAAE,GAEA,OAAA9D,GAAA,EAAmBA,IAAA0lE,EAAAziE,SAAsBjD,EAEzC,GAAAA,IAAA4D,GAAA5D,IAAA8D,IAAA9D,EAAA,GAAA0lE,EAAAziE,SAAAW,IAAA5D,EAAA,GAAA0lE,EAAAziE,SAAAa,GAGAi1E,EAAAiB,EAAAtU,EAAA9hE,GAAAo2E,EAAAtU,EAAA5hE,GAAAk2E,EAAAtU,EAAA1lE,GAAAg6E,EAAAtU,EAAA1lE,EAAA,IACA,QAGA,UAWA,QAAA66E,GAAAnV,EAAA1lE,EAAAstD,EAAAwtB,GACA,GAAA15E,GAAA05E,KAEA,IADAb,EAAA74E,GACApB,EAAAstD,EAEA,OAAA32C,GAAA3W,EAAoB2W,GAAA22C,EAAM32C,IAC1BvV,EAAA8D,KAAAwgE,EAAA/uD,QAGK,CAGL,OAAAA,GAAA,EAAoBA,GAAA22C,EAAM32C,IAC1BvV,EAAA8D,KAAAwgE,EAAA/uD,GAIA,QAAAA,GAAA3W,EAAoB2W,EAAA+uD,EAAAziE,OAAkB0T,IACtCvV,EAAA8D,KAAAwgE,EAAA/uD,IAIA,MAAAvV,GASA,QAAA25E,GAAArV,GAIA,OAHA5oC,MAAAk+C,KAAAC,KAAAC,KACAC,EAAArkB,OAAAC,UAEA/2D,EAAA,EAAmBA,EAAA0lE,EAAAziE,SAAoBjD,EACvC,GAAAu6E,EAAA7U,EAAA1lE,GACA,OAAAstD,GAAA,EAA2BA,EAAAoY,EAAAziE,SAAoBqqD,EAC/C,GAAAktB,EAAA9U,EAAA1lE,EAAAstD,GAAA,CACA0tB,EAAAD,EAAAF,EAAAnV,EAAA1lE,EAAAstD,EAAA4tB,IACAD,EAAAF,EAAAF,EAAAnV,EAAApY,EAAAttD,EAAAk7E,GAEA,QAAAvkE,GAAA,EAAgCA,EAAAskE,EAAAh4E,OAAe0T,IAC/CqkE,EAAA91E,KAAA+1E,EAAAtkE,GAGAqkE,GAAA/3E,OAAAk4E,IACAr+C,EAAAk+C,EACAG,EAAAH,EAAA/3E,OACA65B,EAAA53B,MAAA80E,EAAAtU,EAAA1lE,GAAAg6E,EAAAtU,EAAApY,MAOA,MAAAxwB,GAQA,QAAAs+C,GAAA1V,GACA,GAAA2V,GAAAN,EAAArV,EACA,OAAA2V,GAAAp4E,OAAA,EACAq4E,EAAA5V,EAAA2V,IAEA3V,GAUA,QAAA4V,GAAA5V,EAAA6V,GACA,OAAAA,EAAAt4E,OACA,OAAAyiE,EAEA,IAAA6V,YAAAzvE,QAAAyvE,EAAAt4E,QAAAs4E,EAAA,YAAAzvE,QAAA,IAAAyvE,EAAA,GAAAt4E,QAAAs4E,EAAA,eAAAzvE,OAAA,CAIA,OAFA0vE,IAAA9V,GAEA1lE,EAAA,EAAoBA,EAAAu7E,EAAAt4E,OAAmBjD,IAGvC,OAFAy7E,GAAAF,EAAAv7E,GAEAstD,EAAA,EAAwBA,EAAAkuB,EAAAv4E,OAAgBqqD,IAAA,CACxC,GAAA6sB,GAAAqB,EAAAluB,GACA5/C,EAAA4tE,EAAAnB,EAAAsB,EACA,IAAA/tE,EAAA,CAEA8tE,EAAArwB,OAAAmC,EAAA,GACAkuB,EAAAt2E,KAAAwI,EAAA,GAAAA,EAAA,GACA,QAKA,MAAA8tE,GAIA,GAAAC,GAAAF,EACAv7E,EAAA0lE,EAAAj1D,QAAAgrE,EAAA,IACAnuB,EAAAoY,EAAAj1D,QAAAgrE,EAAA,GAEA,YAAAz7E,IAAA,IAAAstD,IACAutB,EAAAnV,EAAA1lE,EAAAstD,GACAutB,EAAAnV,EAAApY,EAAAttD,IAcA,QAAA07E,GAAAhW,GACA,GAAA1lE,GAAAg/C,EAAA0mB,CAEA,KAAA1lE,EAAA,EAAYA,EAAAg/C,EAAA/7C,OAAA,EAAiBjD,IAC7B,OAAAstD,GAAA,EAAoBA,EAAAttD,EAAA,EAAOstD,IAC3B,GAAAyrB,EAAA/5B,EAAAh/C,GAAAg/C,EAAAh/C,EAAA,GAAAg/C,EAAAsO,GAAAtO,EAAAsO,EAAA,IACA,QAMA,KAAAttD,EAAA,EAAYA,EAAAg/C,EAAA/7C,OAAA,EAAiBjD,IAC7B,GAAA+4E,EAAA/5B,EAAA,GAAAA,IAAA/7C,OAAA,GAAA+7C,EAAAh/C,GAAAg/C,EAAAh/C,EAAA,IACA,QAIA,UAGA,QAAA27E,GAAA3C,EAAAC,EAAAC,EAAAC,EAAAtxB,GACAA,KAAA,CACA,IAAA0wB,GAAAU,EAAA,GAAAD,EAAA,GACAR,EAAAQ,EAAA,GAAAC,EAAA,GACAR,EAAAF,EAAAS,EAAA,GAAAR,EAAAQ,EAAA,GACAN,EAAAS,EAAA,GAAAD,EAAA,GACAP,EAAAO,EAAA,GAAAC,EAAA,GACAP,EAAAF,EAAAQ,EAAA,GAAAP,EAAAO,EAAA,GACAL,EAAAN,EAAAI,EAAAD,EAAAF,CAEA,OAAAM,GAAAD,EAAA,EAAAhxB,IAGA,OAFA8wB,EAAAF,EAAAD,EAAAI,GAAAC,GAAAN,EAAAK,EAAAF,EAAAD,GAAAI,GAiBA,QAAA+C,GAAAlW,EAAAh4D,EAAAmuE,EAAAC,EAAAj0B,EAAAk0B,EAAAC,GACAD,KAAA,IACAC,KAAA,EACAn0B,KAAA,GACAn6C,EAAA,uBAAAA,KACAmuE,QACAC,OAEA,IAAAG,IAAA,KAAAC,GAAA,KAAA96E,GAAA,KACA+6E,EAAA,EAAAC,EAAA,EAAA/7E,EAAA,EAAAg8E,EAAA,EACAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAC,KAAAC,KACAvC,EAAAzU,EACA5uD,EAAA4uD,CAEA,IAAA5uD,EAAA7T,OAAA,EACA,MAAAyK,EAIA,MADAsuE,EACAD,EAEA,MADAtzE,SAAAC,KAAA,2BAAAqzE,EAAA,cACAruE,CAGA,QAAA1N,GAAA,EAAmBA,EAAA0lE,EAAAziE,SAAoBjD,EACvC,GAAAu6E,EAAAJ,EAAAn6E,GAAA,CACA67E,EAAA32E,KAAAi1E,EAAAn6E,IACAm8E,EAAAC,EAAAtlB,OAAAC,SAGA,QAAAzJ,GAAA,EAA2BA,EAAAoY,EAAAziE,SAAoBqqD,EAC/C+rB,EAAAW,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,KAAAksB,EAAAQ,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,EAAA,MACAlsD,EAAAu6E,EAAA3B,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,GAAA0sB,EAAAG,EAAA7sB,EAAA,IACAisB,EAAAS,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAoB,KACAf,EAAA05E,EAAAI,EAAAn6E,GAAAoB,IACAg7E,IACAA,EAAA/7E,EACA67E,EAAA96E,EACAm7E,EAAAjvB,IAIA+rB,EAAAW,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,EAAA,KAAAksB,EAAAQ,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,MACAlsD,EAAAu6E,EAAA3B,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,GAAA0sB,EAAAG,EAAA7sB,EAAA,IACA+rB,EAAAW,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAoB,KACAf,EAAA05E,EAAAI,EAAAn6E,GAAAoB,IACA+6E,IACAA,EAAA97E,EACA47E,EAAA76E,EACAk7E,EAAAhvB,GAOA,IAAAivB,KAAAD,EAAA,GAAA5W,EAAAziE,OAEA7B,EAAA,IAAA86E,EAAA,GAAAD,EAAA,MACA76E,EAAA,IAAA86E,EAAA,GAAAD,EAAA,MACAH,EAAA52E,KAAA9D,GAEApB,EAAAs8E,GAEApC,EAAAuC,EAAAtC,EAAAn6E,EAAAs8E,EAAA,GACAG,EAAAv3E,KAAA9D,GACAs7E,EAAAx3E,KAAA9D,GACA,IAAAm7E,GAEArC,EAAAwC,EAAAvC,EAAAoC,EAAApC,EAAAl3E,QAGAi3E,EAAAwC,EAAAvC,EAAA,EAAAn6E,EAAA,KAEA,IAAAA,GAEAk6E,EAAAuC,EAAAtC,EAAAn6E,EAAAm6E,EAAAl3E,QAGAi3E,EAAAuC,EAAAtC,EAAA,EAAAmC,EAAA,GACAG,EAAAv3E,KAAA9D,GACAs7E,EAAAx3E,KAAA9D,GAEA84E,EAAAwC,EAAAvC,EAAAoC,EAAAv8E,EAAA,QAEa,CASb,GALAu8E,EAAAD,IACAA,GAAA5W,EAAAziE,QAEAo5E,EAAAvlB,OAAAC,UAEAulB,EAAAC,EACA,MAAA7uE,EAGA,QAAA4/C,GAAAivB,EAAwCjvB,GAAAgvB,IAAiBhvB,EAEzDgsB,EAAAU,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,KACAksB,EAAAQ,EAAAG,EAAAn6E,EAAA,GAAAg6E,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,MAEAjtD,EAAA05E,EAAAC,EAAAG,EAAAn6E,GAAAg6E,EAAAG,EAAA7sB,KACA+uB,GAAAzB,EAAAT,EAAAn6E,EAAAstD,KACA+uB,EAAAh8E,EACAm8E,EAAAlvB,EAAAoY,EAAAziE,OAKAjD,GAAAw8E,GACAtC,EAAAuC,EAAAtC,EAAAn6E,EAAAw8E,EAAA,GACA,IAAAA,GACAtC,EAAAwC,EAAAvC,EAAAqC,EAAA1lE,EAAA7T,QAEAi3E,EAAAwC,EAAAvC,EAAA,EAAAn6E,EAAA,KAEA,IAAAA,GACAk6E,EAAAuC,EAAAtC,EAAAn6E,EAAA8W,EAAA7T,QAEAi3E,EAAAuC,EAAAtC,EAAA,EAAAqC,EAAA,GACAtC,EAAAwC,EAAAvC,EAAAqC,EAAAx8E,EAAA,IAaA,MARAy8E,GAAAx5E,OAAAy5E,EAAAz5E,QACA24E,EAAAa,EAAA/uE,EAAAmuE,EAAAC,EAAAj0B,EAAAk0B,EAAAC,GACAJ,EAAAc,EAAAhvE,EAAAmuE,EAAAC,EAAAj0B,EAAAk0B,EAAAC,KAEAJ,EAAAc,EAAAhvE,EAAAmuE,EAAAC,EAAAj0B,EAAAk0B,EAAAC,GACAJ,EAAAa,EAAA/uE,EAAAmuE,EAAAC,EAAAj0B,EAAAk0B,EAAAC,IAGAtuE,EAKA,MAFAA,GAAAxI,KAAAwgE,GAEAh4D,EASA,QAAAivE,GAAAjX,EAAA+I,GAEA,OADAmO,GAAA,EACA58E,EAAA0lE,EAAAziE,OAAA,EAA+ByiE,EAAAziE,OAAA,GAAAjD,GAAA,IAA0BA,EACzDy5E,EAAAO,EAAAtU,EAAA1lE,EAAA,GAAAg6E,EAAAtU,EAAA1lE,GAAAg6E,EAAAtU,EAAA1lE,EAAA,GAAAyuE,KAEA/I,EAAAva,OAAAnrD,EAAA0lE,EAAAziE,OAAA,GACA25E,IAGA,OAAAA,GAQA,QAAAC,GAAAnX,EAAA+I,GACA,OAAAzuE,GAAA0lE,EAAAziE,OAAA,EAA+BjD,GAAA,IAAMA,EAErC,OADAy/B,GAAAimC,EAAA1lE,GACAstD,EAAAttD,EAAA,EAAsBstD,GAAA,IAAMA,EAC5BwvB,EAAAr9C,EAAAimC,EAAApY,GAAAmhB,IACA/I,EAAAva,OAAAnrD,EAAA,GAgBA,QAAA84E,GAAAl1E,EAAAE,EAAA2qE,GAEA,MADAA,MAAA,EACA5xC,KAAAsgB,IAAAv5C,EAAAE,IAAA2qE,EAYA,QAAAqO,GAAAl5E,EAAAE,EAAA2qE,GACA,MAAAqK,GAAAl1E,EAAA,GAAAE,EAAA,GAAA2qE,IAAAqK,EAAAl1E,EAAA,GAAAE,EAAA,GAAA2qE,GA/oBA1uE,EAAAD,SACA86C,OAAAwgC,EACA5U,YAAAoV,EACAmB,SAAArB,EACApV,sBAAAqW,EACAK,sBAAAH,EACAxW,QAAA+T,EAqFA,IAAAT,MACAC,KAwHAc,KACAC,M3B+tZM,SAAU56E,EAAQwT,EAAqB5T,GAE7C,Y4Bl6Ze,SAAS8gE,KACtB,GAA6C,iBAAmBwc,WAAW,CAGzE,GADkB,GAAIC,KAAI,IAAwB92E,OAAOoM,UAC3C2qE,SAAW/2E,OAAOoM,SAAS2qE,OAIvC,MAGF/2E,QAAOuiB,iBAAiB,OAAQ,WAC9B,GAAMy0D,GAAW,qBAEbC,IAEFC,EAAwBF,GAIxBH,UAAUM,cAAcC,MAAMl6E,KAAK,WACjCmF,QAAQ6yD,IACN,+GAMJmiB,EAAgBL,MAMxB,QAASK,GAAgBL,GACvBH,UAAUM,cACP9c,SAAS2c,GACT95E,KAAK,SAAAo6E,GACJA,EAAaC,cAAgB,WAC3B,GAAMC,GAAmBF,EAAaG,UACtCD,GAAiBE,cAAgB,WACA,cAA3BF,EAAiBvpD,QACf4oD,UAAUM,cAAcjvB,WAK1B7lD,QAAQ6yD,IAAI,6CAKZ7yD,QAAQ6yD,IAAI,2CAMrByiB,MAAM,SAAAr3E,GACL+B,QAAQ/B,MAAM,4CAA6CA,KAIjE,QAAS42E,GAAwBF,GAE/BxrE,MAAMwrE,GACH95E,KAAK,SAAA+O,GAGkB,MAApBA,EAASZ,SACuD,IAAhEY,EAASrF,QAAQnM,IAAI,gBAAgB4P,QAAQ,cAG7CwsE,UAAUM,cAAcC,MAAMl6E,KAAK,SAAAo6E,GACjCA,EAAaM,aAAa16E,KAAK,WAC7B8C,OAAOoM,SAASyrE,aAKpBR,EAAgBL,KAGnBW,MAAM,WACLt1E,QAAQ6yD,IACN,mE5B80ZyB/nD,EAAuB,EAAIktD,C4B76Z5D,IAAM4c,GAAca,QACW,cAA7B93E,OAAOoM,SAAS2rE,UAEe,UAA7B/3E,OAAOoM,SAAS2rE,UAEhB/3E,OAAOoM,SAAS2rE,SAAS7Q,MACvB","file":"static/js/main.29dc5ff3.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(14);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(10);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(8);\nmodule.exports = __webpack_require__(13);\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(9).enable();\n  window.Promise = __webpack_require__(11);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(12);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(1);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(2);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(2);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__registerServiceWorker__ = __webpack_require__(27);\n__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__App__[\"a\" /* default */],null),document.getElementById('root'));Object(__WEBPACK_IMPORTED_MODULE_3__registerServiceWorker__[\"a\" /* default */])();\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar k=__webpack_require__(1),n=__webpack_require__(4),p=__webpack_require__(5),q=__webpack_require__(6),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(16);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(4),ba=__webpack_require__(0),m=__webpack_require__(17),p=__webpack_require__(1),v=__webpack_require__(6),da=__webpack_require__(18),ea=__webpack_require__(19),fa=__webpack_require__(20),ha=__webpack_require__(5);\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(21);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(22);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_BouncingBallsLogo__ = __webpack_require__(24);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var App=function(_Component){_inherits(App,_Component);// Set image parameters\nfunction App(props){_classCallCheck(this,App);var _this=_possibleConstructorReturn(this,(App.__proto__||Object.getPrototypeOf(App)).call(this,props));_this.state={backgroundColor:_this.randomColourPick(),//\"#07A\",\ntextColour:\"#FFF\"// \"#DDD\"\n};_this.screenHeight=window.innerHeight;_this.screenWidth=_this.screenHeight*.8;if(_this.screenWidth>window.innerWidth){_this.screenWidth=window.innerWidth;}return _this;}_createClass(App,[{key:'componentDidMount',value:function componentDidMount(){document.body.style='background: '+this.state.backgroundColor+'; overflow-x: hidden;';}},{key:'randomColourPick',value:function randomColourPick(){var arrayOfColours=[\"#E74C3C\",\"#2980B9\",\"#3498DB\",\"#27AE60\"];var randomIndex=Math.floor(Math.random()*arrayOfColours.length);return arrayOfColours[randomIndex];}},{key:'render',value:function render(){if(window.innerWidth>window.innerHeight){this.screenWidth=.3;}else{this.screenWidth=1.0;}return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{display:'flex',backgroundColor:this.state.backgroundColor,border:'0px solid',alignItems:'center',justifyContent:'center',height:this.screenHeight}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_BouncingBallsLogo__[\"a\" /* default */],{backgroundColor:this.state.backgroundColor,textColour:this.state.textColour,screenWidth:this.screenWidth})));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (App);\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_matter_js__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_matter_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_matter_js__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}window.decomp=__webpack_require__(26);var BouncingBallsLogo=function(_Component){_inherits(BouncingBallsLogo,_Component);/////////////////////////////////////////////////////\n// CONSTRUCTOR\n/////////////////////////////////////////////////////\nfunction BouncingBallsLogo(props){_classCallCheck(this,BouncingBallsLogo);// Global properties\nvar _this=_possibleConstructorReturn(this,(BouncingBallsLogo.__proto__||Object.getPrototypeOf(BouncingBallsLogo)).call(this,props));_this.setup=function(){// Extract fundamental components of MatterJS\n_this.Engine=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.Engine;_this.Render=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.Render;_this.MouseConstraint=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.MouseConstraint;_this.Mouse=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.Mouse;_this.World=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.World,_this.Bodies=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.Bodies;//,\n_this.Composite=__WEBPACK_IMPORTED_MODULE_1_matter_js___default.a.Composite;//Body = Matter.Body;\n// Runner = Matter.Runner,\n// Create the engine\n_this.engine=_this.Engine.create();_this.engine.world.gravity.y=0.25;_this.world=_this.engine.world;// Create the renderer\nvar render=_this.Render.create({element:document.getElementById(\"matterJSElement\"),engine:_this.engine,options:{width:_this.width,height:_this.height,pixelRatio:'auto',background:\"transparent\",// this.props.backgroundColor,\nwireframes:false// Allows the objects to be coloured\n}});_this.Render.run(render);// Add mouse control\nvar mouse=_this.Mouse.create(render.canvas),mouseConstraint=_this.MouseConstraint.create(_this.engine,{mouse:mouse,constraint:{stiffness:0.2,render:{visible:false}}});_this.World.add(_this.world,mouseConstraint);// // keep the mouse in sync with rendering\n// render.mouse = mouse;\n// // fit the render viewport to the scene\n// Render.lookAt(render, {\n//     min: { x: 0, y: 0 },\n//     max: { x: 800, y: 600 }\n// });\n//this.run(Engine);\n};_this.run=function(){window.requestAnimationFrame(_this.run);_this.checkAndUpdate();if(Math.random()<0.05){_this.createNewObject();}_this.Engine.update(_this.engine,1000/60);};_this.checkAndUpdate=function(){_this.world.bodies.forEach(function(body){if(body.label==\"Circle Body\"){// Only for circle objects\n_this.updateObjectAlpha(body);_this.removeDeadObjects(body);}});};_this.createNewObject=function(){var xPosition=_this.width*.4+Math.random()*_this.width*.25,yPosition=_this.height*.025,body=_this.Bodies.circle(xPosition,yPosition,_this.circleProperties.size,_this.circleProperties.renderProperties);_this.World.add(_this.world,body);};_this.updateObjectAlpha=function(body){var alpha=void 0;// Initialise alpha\nvar position=body.position;// Get the body's position\nvar distanceFromXCenter=Math.abs(position.x-_this.width/2),distanceFromYCenter=Math.abs(position.y-_this.height/2),xAlpha=Math.abs(distanceFromXCenter/(_this.width/2)-1),yAlpha=Math.abs(distanceFromYCenter/(_this.height/2)-1);if(xAlpha<yAlpha){alpha=xAlpha;}else{alpha=yAlpha;}body.render.opacity=alpha;};_this.removeDeadObjects=function(body){// Remove if lower than height\nif(body.position.y>_this.height){_this.Composite.remove(_this.world,body);}};_this.plotSVGs=function(){// Get SVG paths\nvar combinedPaths=[];combinedPaths.push(_this.getSVGPositions(document.getElementById(\"leftM\")));combinedPaths.push(_this.getSVGPositions(document.getElementById(\"rightM\")));// Find min/max x and y for all svg paths\nvar minAndMax=_this.findMinAndMax(combinedPaths);// Scale all of the svg paths\nvar xSize=0.5;var ySize=1;// WHY 2!!?\nvar scaleWidth=xSize*_this.width;var scaleHeight=ySize*_this.height;for(var pathIndex in combinedPaths){for(var i=0;i<combinedPaths[pathIndex].length;i++){combinedPaths[pathIndex][i].x=_this.scaleSVGCoordinates(combinedPaths[pathIndex][i].x,minAndMax.xHigh,scaleWidth);combinedPaths[pathIndex][i].y=_this.scaleSVGCoordinates(combinedPaths[pathIndex][i].y,minAndMax.yHigh,scaleHeight);}}// Add Cs\ncombinedPaths.push(_this.drawC(.72*(Math.PI*2),.73*(Math.PI*2),.28*(Math.PI*2),.28*(Math.PI*2)));combinedPaths.push(_this.drawC(.2*(Math.PI*2),.2*(Math.PI*2),.05*(Math.PI*2),.05*(Math.PI*2)));// Create SVGs\n_this.createSVG(combinedPaths);};_this.getSVGPositions=function(svgPath){// Sizes taken in percent\nvar pathLength=Math.floor(svgPath.getTotalLength());var svgResolution=500;var iIncrement=1/svgResolution;var svgPathCoordinates=[];for(var prcnt=0;prcnt<1;prcnt+=iIncrement){var currentPoint=prcnt*pathLength;var pt=svgPath.getPointAtLength(currentPoint);pt.x=pt.x;pt.y=pt.y;svgPathCoordinates.push(pt);}return svgPathCoordinates;};_this.findMinAndMax=function(svgPaths){// Function to get lowest and highest dimensions of SVG\nfunction getLowHighValues(path,property){var low=0,high=0,currentValue=void 0;for(var i=0;i<path.length;i++){currentValue=path[i][property];if(currentValue>high)high=currentValue;if(currentValue<low)low=currentValue;}return{low:low,high:high};}// Loop over svg paths and update min/max dimensions\nvar xHigh=0;var yHigh=0;var currentXDimensions=void 0,currentYDimensions=void 0;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=svgPaths[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var path=_step.value;currentXDimensions=getLowHighValues(path,'x');if(currentXDimensions.high>xHigh){xHigh=currentXDimensions.high;}currentYDimensions=getLowHighValues(path,'y');if(currentYDimensions.high>yHigh){yHigh=currentYDimensions.high;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return{xHigh:xHigh,yHigh:yHigh};};_this.drawC=function(innerStartingTheta,outerEndTheta,innerEndTheta,outerStartingTheta){var height=.45*_this.height;var numberOfPoints=40;var svg=document.getElementById(\"svg\");var surface=[];// Outer circle\nvar outerRadius=height*0.45;var outerIncrement=(outerEndTheta-outerStartingTheta)/numberOfPoints;for(var outerTheta=outerStartingTheta;outerTheta<outerEndTheta;outerTheta+=outerIncrement){var _currentX=outerRadius*Math.cos(outerTheta);var _currentY=outerRadius*Math.sin(outerTheta);var _newSVGPoint=svg.createSVGPoint();_newSVGPoint.x=_currentX;_newSVGPoint.y=_currentY;surface.push(_newSVGPoint);}// Inner circle\nvar innerRadius=height*0.3;var innerIncrement=(innerEndTheta-innerStartingTheta)/numberOfPoints;var innerTheta=innerStartingTheta;for(var i=0;i<numberOfPoints;i++){var _currentX2=innerRadius*Math.cos(innerTheta);var _currentY2=innerRadius*Math.sin(innerTheta);var _newSVGPoint2=svg.createSVGPoint();_newSVGPoint2.x=_currentX2;_newSVGPoint2.y=_currentY2;surface.push(_newSVGPoint2);innerTheta+=innerIncrement;}// Last connection\nvar currentX=outerRadius*Math.cos(outerStartingTheta);var currentY=outerRadius*Math.sin(outerStartingTheta);var newSVGPoint=svg.createSVGPoint();newSVGPoint.x=currentX;newSVGPoint.y=currentY;surface.push(newSVGPoint);return surface;};_this.createSVG=function(svgPaths){var polygonObjects=[];var polygonPositions=[{width:.36*_this.width,height:.2*_this.height},{width:.635*_this.width,height:.35*_this.height},{width:.35*_this.width,height:.56*_this.height},{width:.63*_this.width,height:.68*_this.height}];for(var pathIndex in svgPaths){polygonObjects.push(_this.Bodies.fromVertices(polygonPositions[pathIndex].width,polygonPositions[pathIndex].height,svgPaths[pathIndex],{isStatic:true,render:_this.barrierProperties}));}_this.World.add(_this.world,polygonObjects);};_this.menuBox=function(text,width,padding){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{paddingRight:padding}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('center',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:{fontSize:.04*_this.height,fontFamily:_this.textProperties.fontFamily,color:_this.props.backgroundColor,width:width,height:.04*_this.height,borderRadius:\"25px\",backgroundColor:_this.fontColour,verticalAlign:\"middle\",border:'1px solid'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,text))));};_this.fontColour=_this.props.textColour;_this.fontSize=\"4.5px\";_this.height=.7*window.innerHeight;_this.width=_this.height*.8;// Circle properties\n_this.circleProperties={size:.015*_this.height,startingVelocity:{x:0,y:-Math.random()*50},startingAcceleration:{x:0.5,y:0},renderProperties:{restitution:.5,friction:0,render:{fillStyle:_this.fontColour,strokeStyle:'transparent',opacity:0}}// Barrier properties\n};_this.barrierProperties={fillStyle:_this.fontColour,strokeStyle:_this.fontColour,lineWidth:1,opacity:1};_this.textProperties={fontFamily:\"Helvetica\",fontSize:.04*_this.height,color:_this.fontColour};return _this;}_createClass(BouncingBallsLogo,[{key:'componentDidMount',value:function componentDidMount(){this.setup();this.plotSVGs();this.run();}/////////////////////////////////////////////////////\n// SETUP\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n// RUN\n/////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////\n// SVG FUNCTIONS\n////////////////////////////////////////////////////////////////////////\n},{key:'scaleSVGCoordinates',value:function scaleSVGCoordinates(currentValue,high,newScale){var currentPercent=currentValue/high;var newValue=currentPercent*newScale;return newValue;}////////////////////////////////////////////////////////////////////////\n// RENDER\n////////////////////////////////////////////////////////////////////////\n},{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{id:'matterJSElement',style:{display:'inline-flex',marginTop:0,border:'0px solid'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('svg',{id:'svg',style:{display:\"none\"},height:'190mm',width:'130mm',version:'1.1',viewBox:'0 0 130 190'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('g',{transform:'translate(0,-107)'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('path',{id:'innerC',d:'m45.716 234.61c-13.121 9.3252-17.499 25.225-11.878 39.551 5.6212 14.326 20.676 23 36.737 21.167 16.061-1.8334 29.141-13.719 31.919-29.004',fill:'none',stroke:'#000',strokeWidth:'.2'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('path',{id:'outerC',d:'m122.82 269.78c-4.5653 25.049-24.672 44.417-51.02 47.43-26.348 3.0131-51.04-11.194-60.253-34.667-9.2135-23.474-0.66201-50.389 20.867-65.677',fill:'none',stroke:'#000',strokeWidth:'.2'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('path',{id:'leftM',d:'m25.44 144.26 0.18899 54.996-20.411-0.18899 0.13364-88.657 20.078 0.11165 45.745 61.331-14.968 12.36-30.767-39.952',fill:'none',stroke:'#000',strokeWidth:'.26458px'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('path',{id:'rightM',d:'m73.456 228.71 21.531-14.549 0.26727 28.464 20.446-9.4881 0.13364-101.56-9.889-13.096-32.874 26.46 10.29 14.032 11.493-9.3544 0.13363 56.928-24.909 17.152c-0.97956 0.56277-1.5619 1.6082-1.5144 2.7185 0.0475 1.1103 0.7172 2.1045 1.7414 2.5852s2.236 0.36954 3.151-0.28904',fill:'none',stroke:'#000',strokeWidth:'.26458px'}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{position:\"absolute\",marginTop:.8*this.height,width:this.width,border:'0px solid'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('center',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:this.textProperties},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('b',null,'MICHAEL S. CLAYTON (PhD)')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{style:this.textProperties},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',null,'neuroscientist & programmer')))));}}]);return BouncingBallsLogo;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (BouncingBallsLogo);/*\n        <div style={{position:\"absolute\", marginTop: .75*this.height, width: this.width, border:'0px solid'}}>\n          <center>\n            <p style={this.textProperties}><b>MICHAEL S. CLAYTON</b></p>\n            <p style={this.textProperties}><i>neuroscientist and programmer</i></p>\n          </center>\n          <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n            <div style={{display:\"inline-flex\"}}>\n              {this.menuBox('ABOUT', .25*this.width, .10*this.width)}\n              {this.menuBox('CV', .25*this.width, 0)}\n            </div>\n          </div>\n          <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n            <div style={{display:\"inline-flex\", textAlign: \"center\"}}>\n              {this.menuBox('RESEARCH', .35*this.width, .05*this.width)}\n              {this.menuBox('JAVASCRIPT', .35*this.width, 0)}\n            </div>\n          </div>\n        </div>\n*/\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    removeDuplicatePoints: polygonRemoveDuplicatePoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee2\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee2(polygon, a,b) {\n    // for each edge\n    for (var i = 0; i !== polygon.length; ++i) {\n        // ignore incident edges\n        if (i === a || i === b || (i + 1) % polygon.length === a || (i + 1) % polygon.length === b){\n            continue;\n        }\n        if( lineSegmentsIntersect(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i), polygonAt(polygon, i+1)) ){\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (\n                        isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) &&\n                        isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))\n                    ) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist && polygonCanSee2(poly, i, j)) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Remove duplicate points in the polygon.\n * @method removeDuplicatePoints\n * @param  {Number} [precision] The threshold to use when determining whether two points are the same. Use zero for best precision.\n */\nfunction polygonRemoveDuplicatePoints(polygon, precision){\n    for(var i=polygon.length-1; i>=1; --i){\n        var pi = polygon[i];\n        for(var j=i-1; j>=0; --j){\n            if(points_eq(pi, polygon[j], precision)){\n                polygon.splice(i,1);\n                continue;\n            }\n        }\n    }\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) <= precision;\n}\n\n/**\n * Check if two points are equal\n * @static\n * @method points_eq\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction points_eq(a,b,precision){\n    return scalar_eq(a[0],b[0],precision) && scalar_eq(a[1],b[1],precision);\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = register;\n/* unused harmony export unregister */\n// In production, we register a service worker to serve assets from local cache.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\nvar isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] is the IPv6 localhost address.\nwindow.location.hostname==='[::1]'||// 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function register(){if(\"production\"==='production'&&'serviceWorker'in navigator){// The URL constructor is available in all browsers that support SW.\nvar publicUrl=new URL(\".\",window.location);if(publicUrl.origin!==window.location.origin){// Our service worker won't work if PUBLIC_URL is on a different origin\n// from what our page is served on. This might happen if a CDN is used to\n// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\nreturn;}window.addEventListener('load',function(){var swUrl=\".\"+'/service-worker.js';if(isLocalhost){// This is running on localhost. Lets check if a service worker still exists or not.\ncheckValidServiceWorker(swUrl);// Add some additional logging to localhost, pointing developers to the\n// service worker/PWA documentation.\nnavigator.serviceWorker.ready.then(function(){console.log('This web app is being served cache-first by a service '+'worker. To learn more, visit https://goo.gl/SC7cgQ');});}else{// Is not local host. Just register service worker\nregisterValidSW(swUrl);}});}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(function(registration){registration.onupdatefound=function(){var installingWorker=registration.installing;installingWorker.onstatechange=function(){if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){// At this point, the old content will have been purged and\n// the fresh content will have been added to the cache.\n// It's the perfect time to display a \"New content is\n// available; please refresh.\" message in your web app.\nconsole.log('New content is available; please refresh.');}else{// At this point, everything has been precached.\n// It's the perfect time to display a\n// \"Content is cached for offline use.\" message.\nconsole.log('Content is cached for offline use.');}}};};}).catch(function(error){console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl){// Check if the service worker can be found. If it can't reload the page.\nfetch(swUrl).then(function(response){// Ensure service worker exists, and that we really are getting a JS file.\nif(response.status===404||response.headers.get('content-type').indexOf('javascript')===-1){// No service worker found. Probably a different app. Reload the page.\nnavigator.serviceWorker.ready.then(function(registration){registration.unregister().then(function(){window.location.reload();});});}else{// Service worker found. Proceed as normal.\nregisterValidSW(swUrl);}}).catch(function(){console.log('No internet connection found. App is running in offline mode.');});}function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(function(registration){registration.unregister();});}}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.29dc5ff3.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 04f8e27456a9ca4c5eff","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 2\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 4\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 5\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 6\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 9\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 10\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 11\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js\n// module id = 12\n// module chunks = 0","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 15\n// module chunks = 0","/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"fbjs/lib/invariant\"),ba=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),p=require(\"object-assign\"),v=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/emptyObject\");\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 19\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 20\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 21\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 22\n// module chunks = 0","import React, { Component } from 'react';\nimport BouncingBallsLogo from './components/BouncingBallsLogo'\n\nclass App extends Component {\n\n  // Set image parameters\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: this.randomColourPick(), //\"#07A\",\n      textColour: \"#FFF\" // \"#DDD\"\n    };\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = this.screenHeight * .8;\n    if (this.screenWidth > window.innerWidth){\n      this.screenWidth = window.innerWidth;\n    }\n  }\n\n  componentDidMount(){\n    document.body.style = `background: ${this.state.backgroundColor}; overflow-x: hidden;`;\n  }\n\n  randomColourPick(){\n    const arrayOfColours = [\"#E74C3C\", \"#2980B9\", \"#3498DB\", \"#27AE60\"];\n    let randomIndex = Math.floor(Math.random()*arrayOfColours.length);\n    return arrayOfColours[randomIndex];\n  }\n\n  render() {\n    if (window.innerWidth>window.innerHeight){this.screenWidth = .3} else {this.screenWidth = 1.0}\n    return (\n      <div>\n        <div style={{display:'flex', backgroundColor: this.state.backgroundColor, border:'0px solid', alignItems:'center', justifyContent: 'center', height: this.screenHeight}}>\n          <BouncingBallsLogo backgroundColor={this.state.backgroundColor} textColour={this.state.textColour} screenWidth={this.screenWidth}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","import React, { Component } from 'react';\nimport Matter from 'matter-js';\nwindow.decomp = require('poly-decomp');\n\nclass BouncingBallsLogo extends Component {\n  /////////////////////////////////////////////////////\n  // CONSTRUCTOR\n  /////////////////////////////////////////////////////\n  constructor(props) {\n    super(props);\n\n    // Global properties\n    this.fontColour = this.props.textColour;\n    this.fontSize = \"4.5px\";\n    this.height = .7*window.innerHeight;\n    this.width = this.height*.8;\n\n    // Circle properties\n    this.circleProperties = {\n      size: .015*this.height,\n      startingVelocity: {x: 0, y: -Math.random()*50},\n      startingAcceleration: {x: 0.5, y: 0},\n      renderProperties: {\n        restitution: .5,\n        friction: 0,\n        render: {\n          fillStyle: this.fontColour,\n          strokeStyle: 'transparent',\n          opacity: 0\n        }\n      }\n    }\n\n    // Barrier properties\n    this.barrierProperties = {\n      fillStyle: this.fontColour,\n      strokeStyle: this.fontColour,\n      lineWidth: 1,\n      opacity: 1\n    }\n\n    this.textProperties = {\n      fontFamily: \"Helvetica\",\n      fontSize: .04*this.height,\n      color: this.fontColour,\n    }\n  }\n\n  componentDidMount(){\n    this.setup();\n    this.plotSVGs();\n    this.run();\n  }\n\n  /////////////////////////////////////////////////////\n  // SETUP\n  /////////////////////////////////////////////////////\n\n  setup = () => {\n    // Extract fundamental components of MatterJS\n    this.Engine = Matter.Engine;\n    this.Render = Matter.Render;\n    this.MouseConstraint = Matter.MouseConstraint;\n    this.Mouse = Matter.Mouse;\n    this.World = Matter.World,\n    this.Bodies = Matter.Bodies//,\n    this.Composite = Matter.Composite;\n    //Body = Matter.Body;\n    // Runner = Matter.Runner,\n\n    // Create the engine\n    this.engine = this.Engine.create();\n    this.engine.world.gravity.y = 0.25;\n    this.world = this.engine.world;\n\n    // Create the renderer\n    let render = this.Render.create({\n        element: document.getElementById(\"matterJSElement\"),\n        engine: this.engine,\n        options: {\n          width: this.width,\n          height: this.height,\n          pixelRatio: 'auto',\n          background: \"transparent\", // this.props.backgroundColor,\n          wireframes: false, // Allows the objects to be coloured\n        }\n    });\n    this.Render.run(render);\n\n    // Add mouse control\n    var mouse = this.Mouse.create(render.canvas),\n        mouseConstraint = this.MouseConstraint.create(this.engine, {\n            mouse: mouse,\n            constraint: {\n                stiffness: 0.2,\n                render: {\n                    visible: false\n                }\n            }\n        });\n    this.World.add(this.world, mouseConstraint);\n\n    // // keep the mouse in sync with rendering\n    // render.mouse = mouse;\n\n    // // fit the render viewport to the scene\n    // Render.lookAt(render, {\n    //     min: { x: 0, y: 0 },\n    //     max: { x: 800, y: 600 }\n    // });\n    //this.run(Engine);\n\n  }\n\n  /////////////////////////////////////////////////////\n  // RUN\n  /////////////////////////////////////////////////////\n\n  run = () => {\n    window.requestAnimationFrame(this.run);\n    this.checkAndUpdate();\n    if (Math.random()<0.05){\n      this.createNewObject();\n    }\n    this.Engine.update(this.engine, 1000/60);\n  }\n\n  checkAndUpdate = () => {\n    this.world.bodies.forEach((body)=>{\n      if (body.label==\"Circle Body\") { // Only for circle objects\n        this.updateObjectAlpha(body);\n        this.removeDeadObjects(body);\n      }\n    })\n  }\n\n  createNewObject = () => {\n    let xPosition = this.width*.4 + (Math.random()*this.width*.25),\n      yPosition = this.height*.025,\n      body = this.Bodies.circle(xPosition, yPosition, this.circleProperties.size, this.circleProperties.renderProperties);\n      this.World.add(this.world, body);\n  }\n\n  updateObjectAlpha = (body) => {\n    let alpha; // Initialise alpha\n    let position = body.position; // Get the body's position\n    let distanceFromXCenter = Math.abs(position.x-this.width/2),\n      distanceFromYCenter = Math.abs(position.y-this.height/2),\n      xAlpha = Math.abs(distanceFromXCenter/(this.width/2) - 1),\n      yAlpha = Math.abs(distanceFromYCenter/(this.height/2) - 1);\n    if (xAlpha<yAlpha){\n      alpha = xAlpha;\n    } else {\n      alpha = yAlpha\n    }\n    body.render.opacity = alpha;\n  }\n\n  removeDeadObjects = (body) => {\n    // Remove if lower than height\n    if (body.position.y > this.height){\n      this.Composite.remove(this.world, body)\n    }    \n  }\n\n  ////////////////////////////////////////////////////////////////////////\n  // SVG FUNCTIONS\n  ////////////////////////////////////////////////////////////////////////\n\n  plotSVGs = () => {\n    // Get SVG paths\n    let combinedPaths = [];\n    combinedPaths.push(this.getSVGPositions(document.getElementById(\"leftM\")));\n    combinedPaths.push(this.getSVGPositions(document.getElementById(\"rightM\")));\n\n    // Find min/max x and y for all svg paths\n    const minAndMax = this.findMinAndMax(combinedPaths);\n\n    // Scale all of the svg paths\n    const xSize = 0.5; const ySize = 1; // WHY 2!!?\n    const scaleWidth = xSize * this.width;\n    const scaleHeight = ySize * this.height;\n    for (let pathIndex in combinedPaths){\n      for (let i=0; i<combinedPaths[pathIndex].length; i++){\n        combinedPaths[pathIndex][i].x = this.scaleSVGCoordinates(combinedPaths[pathIndex][i].x, minAndMax.xHigh, scaleWidth);\n        combinedPaths[pathIndex][i].y = this.scaleSVGCoordinates(combinedPaths[pathIndex][i].y, minAndMax.yHigh, scaleHeight);\n      }\n    }\n\n    // Add Cs\n    combinedPaths.push(this.drawC(.72*(Math.PI*2), .73*(Math.PI*2), .28*(Math.PI*2), .28*(Math.PI*2)))\n    combinedPaths.push(this.drawC(.2*(Math.PI*2), .2*(Math.PI*2), .05*(Math.PI*2), .05*(Math.PI*2)))\n\n    // Create SVGs\n    this.createSVG(combinedPaths)\n  }\n\n  getSVGPositions = (svgPath) => { // Sizes taken in percent\n    const pathLength = Math.floor( svgPath.getTotalLength() );\n    const svgResolution = 500;\n    const iIncrement = 1/svgResolution;\n    let svgPathCoordinates = [];\n    for (let prcnt=0; prcnt<1; prcnt+=iIncrement){\n      let currentPoint = prcnt*pathLength;\n      let pt = svgPath.getPointAtLength(currentPoint);\n      pt.x = pt.x;\n      pt.y = pt.y;\n      svgPathCoordinates.push(pt);\n    }\n    return svgPathCoordinates\n  }\n\n  findMinAndMax = (svgPaths) => {\n    // Function to get lowest and highest dimensions of SVG\n    function getLowHighValues(path, property){\n      let low = 0, high = 0, currentValue;\n      for (let i=0; i<path.length; i++){\n        currentValue = path[i][property];\n        if (currentValue > high) high = currentValue\n        if (currentValue < low) low = currentValue\n      }\n      return {low, high}\n    }\n\n    // Loop over svg paths and update min/max dimensions\n    let xHigh = 0;\n    let yHigh = 0;\n    let currentXDimensions, currentYDimensions;\n    for (let path of svgPaths) {\n      currentXDimensions = getLowHighValues(path, 'x');\n      if (currentXDimensions.high>xHigh){xHigh = currentXDimensions.high}\n      currentYDimensions = getLowHighValues(path, 'y');\n      if (currentYDimensions.high>yHigh){yHigh = currentYDimensions.high}\n    }\n    return {xHigh, yHigh};\n  }\n\n  scaleSVGCoordinates(currentValue, high, newScale) {\n    let currentPercent = currentValue / high;\n    let newValue = currentPercent * newScale;\n    return newValue;\n  }\n\n  drawC = (innerStartingTheta, outerEndTheta, innerEndTheta, outerStartingTheta) => {\n    const height = .45*this.height;\n    const numberOfPoints = 40;\n    const svg = document.getElementById(\"svg\");\n    let surface = [];\n  \n    // Outer circle\n    const outerRadius = height * 0.45;\n    const outerIncrement = (outerEndTheta-outerStartingTheta)/numberOfPoints;\n    for (let outerTheta = outerStartingTheta; outerTheta<outerEndTheta; outerTheta+=outerIncrement){\n       let currentX = outerRadius*Math.cos(outerTheta);\n       let currentY = outerRadius*Math.sin(outerTheta);\n       let newSVGPoint = svg.createSVGPoint();\n       newSVGPoint.x = currentX;\n       newSVGPoint.y = currentY;\n       surface.push(newSVGPoint);\n    }\n  \n    // Inner circle\n    const innerRadius = height * 0.3;\n    const innerIncrement = (innerEndTheta-innerStartingTheta)/numberOfPoints;\n    let innerTheta = innerStartingTheta\n    for (let i=0;i<numberOfPoints;i++){\n      let currentX = innerRadius*Math.cos(innerTheta);\n      let currentY = innerRadius*Math.sin(innerTheta);\n      let newSVGPoint = svg.createSVGPoint();\n      newSVGPoint.x = currentX;\n      newSVGPoint.y = currentY;\n      surface.push(newSVGPoint);\n      innerTheta += innerIncrement;\n    }\n  \n    // Last connection\n    let currentX = outerRadius*Math.cos(outerStartingTheta);\n    let currentY = outerRadius*Math.sin(outerStartingTheta);\n    let newSVGPoint = svg.createSVGPoint();\n    newSVGPoint.x = currentX;\n    newSVGPoint.y = currentY;\n    surface.push(newSVGPoint);\n  \n    return surface;\n  }\n\n  createSVG = (svgPaths) => {\n    let polygonObjects = [];\n    const polygonPositions = [\n      {width: .36*this.width, height: .2*this.height},\n      {width: .635*this.width, height: .35*this.height},\n      {width: .35*this.width, height: .56*this.height},\n      {width: .63*this.width, height: .68*this.height},\n    ];\n    for (let pathIndex in svgPaths){\n      polygonObjects.push(this.Bodies.fromVertices(polygonPositions[pathIndex].width, polygonPositions[pathIndex].height, svgPaths[pathIndex], { isStatic: true, render: this.barrierProperties}))\n    }\n    this.World.add(this.world, polygonObjects);\n  }\n\n  ////////////////////////////////////////////////////////////////////////\n  // RENDER\n  ////////////////////////////////////////////////////////////////////////\n\n  menuBox = (text, width, padding) => {\n    return (\n      <div style={{paddingRight: padding}}>\n        <center>\n          <p style={{\n            fontSize: .04*this.height,\n            fontFamily: this.textProperties.fontFamily,\n            color: this.props.backgroundColor,\n            width: width,\n            height: .04*this.height,\n            borderRadius: \"25px\",\n            backgroundColor: this.fontColour,\n            verticalAlign: \"middle\",\n            border: '1px solid'}}><b>{text}</b></p>\n        </center>\n      </div>\n    )\n  } \n\n  render() {\n    return (\n      <div id=\"matterJSElement\" style={{display:'inline-flex', marginTop: 0, border: '0px solid'}}>\n        <svg id=\"svg\" style={{display: \"none\"}} height=\"190mm\" width=\"130mm\" version=\"1.1\" viewBox=\"0 0 130 190\">\n          <g transform=\"translate(0,-107)\">\n            <path id=\"innerC\" d=\"m45.716 234.61c-13.121 9.3252-17.499 25.225-11.878 39.551 5.6212 14.326 20.676 23 36.737 21.167 16.061-1.8334 29.141-13.719 31.919-29.004\" fill=\"none\" stroke=\"#000\" strokeWidth=\".2\"/>\n            <path id=\"outerC\" d=\"m122.82 269.78c-4.5653 25.049-24.672 44.417-51.02 47.43-26.348 3.0131-51.04-11.194-60.253-34.667-9.2135-23.474-0.66201-50.389 20.867-65.677\" fill=\"none\" stroke=\"#000\" strokeWidth=\".2\"/>\n            <path id=\"leftM\" d=\"m25.44 144.26 0.18899 54.996-20.411-0.18899 0.13364-88.657 20.078 0.11165 45.745 61.331-14.968 12.36-30.767-39.952\" fill=\"none\" stroke=\"#000\" strokeWidth=\".26458px\"/>\n            <path id=\"rightM\" d=\"m73.456 228.71 21.531-14.549 0.26727 28.464 20.446-9.4881 0.13364-101.56-9.889-13.096-32.874 26.46 10.29 14.032 11.493-9.3544 0.13363 56.928-24.909 17.152c-0.97956 0.56277-1.5619 1.6082-1.5144 2.7185 0.0475 1.1103 0.7172 2.1045 1.7414 2.5852s2.236 0.36954 3.151-0.28904\" fill=\"none\" stroke=\"#000\" strokeWidth=\".26458px\"/>\n\t\t      </g>\n        </svg>\n        <div style={{position:\"absolute\", marginTop: .8*this.height, width: this.width, border:'0px solid'}}>\n          <center>\n            <p style={this.textProperties}><b>MICHAEL S. CLAYTON (PhD)</b></p>\n            <p style={this.textProperties}><i>neuroscientist & programmer</i></p>\n          </center>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BouncingBallsLogo;\n\n/*\n        <div style={{position:\"absolute\", marginTop: .75*this.height, width: this.width, border:'0px solid'}}>\n          <center>\n            <p style={this.textProperties}><b>MICHAEL S. CLAYTON</b></p>\n            <p style={this.textProperties}><i>neuroscientist and programmer</i></p>\n          </center>\n          <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n            <div style={{display:\"inline-flex\"}}>\n              {this.menuBox('ABOUT', .25*this.width, .10*this.width)}\n              {this.menuBox('CV', .25*this.width, 0)}\n            </div>\n          </div>\n          <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n            <div style={{display:\"inline-flex\", textAlign: \"center\"}}>\n              {this.menuBox('RESEARCH', .35*this.width, .05*this.width)}\n              {this.menuBox('JAVASCRIPT', .35*this.width, 0)}\n            </div>\n          </div>\n        </div>\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/BouncingBallsLogo.js","/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/matter-js/build/matter.js\n// module id = 25\n// module chunks = 0","module.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    removeDuplicatePoints: polygonRemoveDuplicatePoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee2\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee2(polygon, a,b) {\n    // for each edge\n    for (var i = 0; i !== polygon.length; ++i) {\n        // ignore incident edges\n        if (i === a || i === b || (i + 1) % polygon.length === a || (i + 1) % polygon.length === b){\n            continue;\n        }\n        if( lineSegmentsIntersect(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i), polygonAt(polygon, i+1)) ){\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (\n                        isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) &&\n                        isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))\n                    ) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist && polygonCanSee2(poly, i, j)) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Remove duplicate points in the polygon.\n * @method removeDuplicatePoints\n * @param  {Number} [precision] The threshold to use when determining whether two points are the same. Use zero for best precision.\n */\nfunction polygonRemoveDuplicatePoints(polygon, precision){\n    for(var i=polygon.length-1; i>=1; --i){\n        var pi = polygon[i];\n        for(var j=i-1; j>=0; --j){\n            if(points_eq(pi, polygon[j], precision)){\n                polygon.splice(i,1);\n                continue;\n            }\n        }\n    }\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) <= precision;\n}\n\n/**\n * Check if two points are equal\n * @static\n * @method points_eq\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction points_eq(a,b,precision){\n    return scalar_eq(a[0],b[0],precision) && scalar_eq(a[1],b[1],precision);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/poly-decomp/src/index.js\n// module id = 26\n// module chunks = 0","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.js"],"sourceRoot":""}